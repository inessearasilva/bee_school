{"version":3,"file":"static/js/77.6faf3323.chunk.js","mappings":"wSAKMA,EAAS,SAACC,GACd,IAAMC,EAAcC,OAAOC,QAAQH,EAAMI,OAAOC,cAAcC,QAAO,SAACC,EAAK,GAAwB,IAAD,eAArBC,EAAO,KAAEC,EAAM,KAC1F,GAAgB,SAAZD,EAAoB,CACtB,IAAME,EAAQD,EAAO,GACfE,EAAWF,EAAO,GAClBG,EAAYH,EAAO,GAER,OAAbE,GAAmC,OAAdC,GACvBL,EAAKM,KAAK,CACRL,QAASA,EACTE,MAAOA,EACPI,YAAa,CAACH,EAAUC,IAG9B,CACA,OAAOL,CACT,GAAG,IACH,OACE,UAACQ,EAAA,EAAY,CAACC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SAAWC,OAAQ,CAAC,EAAG,GAAIC,SAAU,EAAGC,KAAM,KAAMC,iBAAiB,EAAOC,oBAAoB,EAAOC,UAAW,CAAC,CAAC,IAAK,KAAM,EAAE,GAAI,MAAM,WACxL,SAACC,EAAA,EAAS,CAACC,IAAI,qDAAqDC,QAAQ,IAC3E1B,EAAY2B,KAAI,SAACrB,GAAI,OACpB,SAACsB,EAAA,EAAY,CAEXV,OAAQZ,EAAKO,YACbgB,OAAiC,EAAxB,SAACvB,EAAKG,MAAW,IAC1BqB,MAAM,UACNC,UAAU,UACVC,YAAa,GAAI,UAEjB,UAACC,EAAA,EAAK,YACJ,4BACE,0CAA2B3B,EAAKC,YAElC,4BACE,wCAAyBD,EAAKG,aAZ7BH,EAAKC,QAeG,MAIvB,EAEe,SAAS2B,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAoB1B,OAlBAC,EAAAA,EAAAA,YAAU,WACiB,aAYxB,OAZwB,0BAAzB,sHAE2BC,MAAM,gEAAgE,KAAD,EAA9E,IAARC,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,sBAAD,OAAuBF,EAASG,aAAc,KAAD,kBAExCH,EAASI,OAAO,KAAD,EAA/BR,EAAO,OACPS,EAAkBT,EAAQU,QAAO,SAACC,GAAC,OAAKA,EAAEd,QAAUA,CAAK,IAC/DI,EAAWQ,GAAiB,kDAE5BG,OAAOC,MAAM,KAAMC,SAAS,2DAE/B,uBAbc,WACU,wBAczBC,EACF,GAAG,CAAClB,IAECG,EAAQgB,QAKX,yBACGhB,EAAQX,KAAI,SAACxB,GAAM,OAClB,SAACL,EAAM,CAACK,OAAQA,GAAaA,EAAOgC,MAAS,OAN1C,4CAUX,C,4HCvEMrC,G,kBAAS,SAAH,GAAwH,IAAD,oBAAjHK,EAAM,EAANA,OAAkBoD,GAAF,EAARC,SAAuB,EAAbD,eAAeE,EAAc,EAAdA,eAAgBC,EAAkB,EAAlBA,mBAAoBC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAEvGC,EAAU3D,EAAS,CACvB,CAAE4D,KAAM,WAAYtD,OAA6B,QAAtB,EAAAN,EAAO6D,uBAAe,aAAtB,EAAwBC,WAAY,EAAGnC,MAAO,UAAWoC,KAAkC,QAA9B,EAAE/D,EAAOgE,6BAAqB,aAA5B,EAA8BF,UACxH,CAAEF,KAAM,UAAWtD,OAA6B,QAAtB,EAAAN,EAAO6D,uBAAe,aAAtB,EAAwBI,UAAW,EAAGtC,MAAO,UAAWoC,KAAkC,QAA9B,EAAE/D,EAAOgE,6BAAqB,aAA5B,EAA8BC,SACtH,CAAEL,KAAM,WAAYtD,OAA6B,QAAtB,EAAAN,EAAO6D,uBAAe,aAAtB,EAAwBK,WAAY,EAAGvC,MAAO,UAAWoC,KAAkC,QAA9B,EAAE/D,EAAOgE,6BAAqB,aAA5B,EAA8BE,WACtH,GAEEC,EAAa,WACjB,OAAsCjC,EAAAA,EAAAA,UAAS,MAAK,eAA7CkC,EAAW,KAAEC,EAAc,KAoBlC,OACE,UAACC,EAAA,EAAQ,CAACxD,MAAO,IAAKD,OAAQ,IAAI,WAChC,SAAC0D,EAAA,EAAG,CACFpE,KAAMwD,EACNa,QAAQ,QACRC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,IACbC,aAAc,EACdC,aA5BmB,SAAC3E,EAAM4E,GAC9BV,EAAeU,EACjB,EA0BqC,SAE9BpB,EAAQnC,KAAI,SAACwD,EAAOD,GAAK,OACxB,SAACE,EAAA,EAAI,CAAaC,KAAMF,EAAMrD,OAAnBoD,EAA4B,OAG3C,SAACI,EAAA,EAAO,CAACC,QA9BgB,SAACxF,GAC5B,IAAQyF,EAAYzF,EAAZyF,QACR,GAAIA,GAAWA,EAAQlC,OAAS,EAAG,CACjC,IACA,EADckC,EAAQ,GACOA,QAArBzB,EAAI,EAAJA,KAAMG,EAAI,EAAJA,KAEd,OACE,gBAAKnD,MAAQ,CAAC0E,YAAY,OAAQC,WAAW,OAAQC,UAAU,QAAQ,UACrE,0BAAG,4BAAS5B,IAAc,eAAMG,EAAK0B,QAAQ,GAAE,SAGrD,CACF,EAkB4CC,OAAwB,OAAhBtB,EAAsBuB,aAAc,CAAEC,gBAAiB,QAASC,OAAQ,sBAG9H,EAEMC,EAAkB,SAACxF,GACvB,IAAMyF,EAASzF,EAAQ,IAEvB,OAAOyF,EAAON,QAAQM,EAAS,EAAI,EAAI,EACzC,EAEA,GAAkC7D,EAAAA,EAAAA,UAAS,IAAG,eAAvC8D,EAAS,KAAEC,EAAY,MAE9B5D,EAAAA,EAAAA,YAAU,WACR,GAAIrC,GAAUA,EAAOkG,mBAAoB,CACvC,IAAM/F,EAAO,CACX,CAAEyD,KAAM,cAAetD,MAAON,EAAOkG,mBAAmBC,kBAAmBC,UAAoE,GAAzDC,KAAKC,KAAKtG,EAAOkG,mBAAmBC,mBAA0BJ,OAAQD,EAAgB9F,EAAOkG,mBAAmBC,oBACtM,CAAEvC,KAAM,QAAStD,MAAON,EAAOkG,mBAAmBK,YAAaH,UAAWC,KAAKC,KAAKtG,EAAOkG,mBAAmBK,aAAcR,OAAQD,EAAgB9F,EAAOkG,mBAAmBK,cAC9K,CAAE3C,KAAM,WAAYtD,MAAON,EAAOkG,mBAAmBM,eAAgBJ,UAAWC,KAAKC,KAAKtG,EAAOkG,mBAAmBM,gBAAiBT,OAAQD,EAAgB9F,EAAOkG,mBAAmBM,iBACvL,CAAE5C,KAAM,SAAUtD,MAAON,EAAOkG,mBAAmBO,aAAcL,UAAWC,KAAKC,KAAKtG,EAAOkG,mBAAmBO,cAAeV,OAAQD,EAAgB9F,EAAOkG,mBAAmBO,eACjL,CAAE7C,KAAM,SAAUtD,MAAON,EAAOkG,mBAAmBQ,aAAcN,UAAWC,KAAKC,KAAKtG,EAAOkG,mBAAmBQ,cAAeX,OAAQD,EAAgB9F,EAAOkG,mBAAmBQ,gBAEnLT,EAAa9F,EACf,CACF,GAAG,CAACH,IAGJ,IAAM2G,EAAgB,SAAH,GAAgD,IAA1CjB,EAAM,EAANA,OAAQL,EAAO,EAAPA,QAAc,EAALuB,MAAiB,EAAVC,WAC/C,GAAInB,GAAUL,GAAWA,EAAQlC,OAAQ,CACvC,IAAM7C,EAAQ+E,EAAQ,GAAGA,QAAQ/E,MACjC,OACE,gBAAKwG,UAAU,iBAAiBlG,MAAO,CAAEmG,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAW,UACzG,gBAAKrG,MAAO,CAAE4E,UAAW,OAAQF,YAAa,OAAQC,WAAY,QAAS,UAC3E,eAAGuB,UAAU,QAAQlG,MAAO,CAAEsG,UAAW,UAAW,oBAAS5G,QAGnE,CAEA,OAAO,IACT,EAEM6G,EAAiB,SAAH,OAAMC,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG/G,EAAK,EAALA,MAAK,OACnC,iBAAM8G,EAAGA,EAAI,EAAGC,EAAGA,EAAI,EAAGC,WAAW,QAAQC,WAAW,OAAM,SAC3DjH,GACI,EAGT,OACE,4BACE,mBAAOwG,UAAU,cAAclG,MAAO,CAAEmG,QAAS,OAAQC,WAAY,SAAUlG,MAAM,OAAQ0G,SAAU,SAAUC,SAAS,UAAW,WACrI,4BACE,yBACE,eAAIC,QAAQ,IAAI9G,MAAO,CAAEsG,UAAW,SAAUS,SAAU,YAAa,UACnE,iBAAM/G,MAAO,CAAE+G,SAAU,WAAYC,IAAK,SAAU,SAAQ,OAAN5H,QAAM,IAANA,OAAM,EAANA,EAAQgC,eAIpE,0BACE,iBAAKpB,MAAO,CAAEmG,QAAS,OAAQvB,UAAW,QAAQ,WAChD,iBAAK5E,MAAO,CAAEmG,QAAS,OAAQc,cAAe,SAAUb,WAAY,SAAUzB,WAAY,SAAU,WACpG,yBAAI,4BAAe,OAANvF,QAAM,IAANA,GAA0B,QAApB,EAANA,EAAQkG,0BAAkB,WAApB,EAAN,EAA4B4B,kBACzC,mCACA,kBACA,eAAIlH,MAAO,CAAEe,MAAO,WAAY,UAAC,4BAAe,OAAN3B,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQ6D,uBAAe,WAAjB,EAAN,EAAyBC,cACnE,sCACA,kBACA,eAAIlD,MAAO,CAAEe,MAAO,WAAY,UAAC,4BAAe,OAAN3B,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQ6D,uBAAe,WAAjB,EAAN,EAAyBI,aACnE,qCACA,kBACA,eAAIrD,MAAO,CAAEe,MAAO,WAAY,UAAC,4BAAe,OAAN3B,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQ6D,uBAAe,WAAjB,EAAN,EAAyBK,cACnE,yCAEF,gBAAKtD,MAAO,CAAEE,MAAO,QAASD,OAAQ,QAAS0E,WAAY,SAAU,UACnE,SAACpB,EAAU,OAEX,gBAAKvD,MAAO,CAAEmG,QAAS,OAAQc,cAAe,SAAUb,WAAY,UAAW,UAC7E,SAACe,EAAA,EAAmB,CAACjH,MAAO,IAAKD,OAAQ,IAAI,UAC7C,UAACmH,EAAA,EAAQ,CAACC,OAAO,WAAW9H,KAAM6F,EAAWkC,QAAS,GAAIC,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIT,IAAI,EAAGU,OAAQ,IAAK,eACzG,SAACC,EAAA,EAAK,CAACC,KAAK,SAAShE,QAAQ,YAAYiE,MAAI,IAAG,KAChD,SAACC,EAAA,EAAK,CAACF,KAAK,WAAWhE,QAAQ,OAAOiE,MAAI,IAAE,KAC5C,SAACtD,EAAA,EAAO,CAACC,SAAS,SAACuB,EAAa,IAAKhB,aAAc,CAAEC,gBAAiB,QAASC,OAAQ,qBACvF,UAAC8C,EAAA,EAAG,CAACnE,QAAQ,YAAYU,KAAK,UAAS,WACrC,SAAC0D,EAAA,EAAS,CACRpE,QAAQ,OACRmD,SAAS,MAETvC,SAAS,SAAC+B,EAAc,OAE1B,SAACyB,EAAA,EAAS,CACRpE,QAAQ,SACRmD,SAAS,QACTkB,UAAW,SAACvI,GAAK,gBAAQA,EAAK,2BAU5C,mBAEA,gBAAKwG,UAAU,iBAAgB,UACvB,iBAAKA,UAAU,wBAAwBlG,MAAO,CAAEmG,QAAS,OAAQjG,MAAM,OAAQ0G,SAAU,SAAUC,SAAS,UAAU,WACtH,gBAAKX,UAAU,6BAA6BlG,MAAO,CAAC0E,YAAY,QAAQ,UACxE,gBAAKwB,UAAU,iBAAgB,UAC3B,iBAAKA,UAAU,YAAW,WACxB,gBAAKlG,MAAO,CAAEkI,aAAc,QAAQ,UACtC,sDACA,iBAAKhC,UAAU,iBAAgB,WACzC,mBACEA,UAA8B,kBAAnBxD,EAAqC,SAAW,GAC3DyF,QAAS,kBAAMxF,EAAmB,gBAAgB,EAAC,qBAIrD,mBACEuD,UAA8B,iBAAnBxD,EAAoC,SAAW,GAC1DyF,QAAS,kBAAMxF,EAAmB,eAAe,EAAC,yBAIpD,mBACEuD,UAA8B,oBAAnBxD,EAAuC,SAAW,GAC7DyF,QAAS,kBAAMxF,EAAmB,kBAAkB,EAAC,uBAIvD,mBACYuD,UAA8B,oBAAnBxD,EAAuC,SAAW,GAC7DyF,QAAS,kBAAMxF,EAAmB,kBAAkB,EAAC,0BAKnE,kBACHH,EAAcD,OAAS,EACtBC,EAAc5B,KAAI,SAACwD,EAAOD,GAAK,OACzB,iBAAiBnE,MAAO,CAAEkI,aAAc,OAAQhI,MAAO,QAAS+E,OAAQ,iBAAkBmD,aAAc,OAAO,WAC/G,iBAAKpI,MAAO,CAAEmG,QAAS,OAAQC,WAAY,cAAe,WACxD,gBAAKpG,MAAO,CAAE0E,YAAa,OAAQE,UAAW,OAAQ,UACpD,gBAAKyD,IAAKjE,EAAMkE,cAAeC,IAAI,UAAUvI,MAAO,CAAEE,MAAO,OAAQyE,WAAY,YAEnF,iBAAK3E,MAAO,CAAEmG,QAAS,OAAQc,cAAe,UAAW,WACvD,4BACE,kCAAU7C,EAAMoE,YAAkB,IAAEpE,EAAMqE,WAAY,gBAAKJ,IAAKK,EAAeH,IAAI,WAAWvI,MAAO,CAAEE,MAAO,OAAQD,OAAQ,OAAQ0I,cAAe,SAAUT,aAAc,aAE/K,iBAAKlI,MAAO,CAAE4I,SAAU,OAAQlE,YAAa,OAAQ,UAClDN,EAAMyE,QACP,kBACiB,OAAhBzE,EAAM0E,OACP,cAAGC,KAAM3E,EAAM0E,MAAOE,OAAO,SAASC,IAAI,sBAAqB,SAC5D7E,EAAM0E,QAEP,eAIR,mBACA,iBAAK9I,MAAO,CAAE2E,WAAY,OAAQuD,aAAc,OAAO,WACrD,SAAC,MAAK,CAACgB,MAAM,gBAAgB,IAAE9E,EAAMmB,kBAAiB,iBACtD,SAAC,MAAO,CAAC2D,MAAM,UAAU,IAAE9E,EAAMuB,YAAW,iBAC5C,SAAC,MAAS,CAACuD,MAAM,aAAa,IAAE9E,EAAMwB,eAAc,iBACpD,SAAC,MAAW,CAACsD,MAAM,WAAW,IAAE9E,EAAMyB,aAAY,iBAClD,SAAC,MAAO,CAACqD,MAAM,YAAY,IAAE9E,EAAM0B,aAAY,gBAC9C1B,EAAM+E,SAAW,GAAI,iCAAE,SAAC,MAAM,CAACD,MAAM,aAAa,IAAE9E,EAAM+E,YAAe,MAE1E,iBAAKnJ,MAAO,CAAE2E,WAAY,OAAQwB,QAAS,cAAeC,WAAY,UAAU,UACzD,aAApBhC,EAAMgF,WAA2B,0BAAG,SAAC,MAAc,CAACpJ,MAAO,CAAEe,MAAO,aAAe,eAAgB,KAC/E,aAApBqD,EAAMgF,WAA2B,0BAAG,SAAC,MAAU,CAACpJ,MAAO,CAAEe,MAAO,aAAe,eAAe,KAC1E,YAApBqD,EAAMgF,WAA0B,0BAAG,SAAC,MAAQ,CAACpJ,MAAO,CAAEe,MAAO,aAAe,cAAc,aAhCrFoD,EAmCN,KAGX,8EAKS,iBAAK+B,UAAU,6BAA8BlG,MAAO,CAAE2E,WAAW,MAAOC,UAAW,OAAQwB,WAAW,UAAU,WAC9G,mBAAS,mBACT,gBAAKpG,MAAO,CAAEE,MAAO,QAASD,OAAQ,QAAUiI,aAAa,QAAQ,UAC7E,SAAC,KAAc,CAACtF,QAASA,EAASyG,MAAOvG,OAEvC,SAAC3B,EAAG,KAEJ,gBAAKnB,MAAO,CAAEE,MAAO,QAASD,OAAQ,QAAS2E,UAAU,QAAS,UACpE,SAAC,KAAc,CAAChC,QAASA,EAASyG,MAAOxG,gBAS/C,GAGe,SAASyG,IACtB,IAAQlI,GAAUC,EAAAA,EAAAA,MAAVD,MAGR,GAA4CE,EAAAA,EAAAA,UAAS,iBAAgB,eAA9DoB,EAAc,KAAE6G,EAAiB,KAGxC,GAA4BjI,EAAAA,EAAAA,UAAS,MAAK,eAAnClC,EAAM,KAAEoK,EAAS,KACxB,GAA0ClI,EAAAA,EAAAA,UAAS,IAAG,eAA/CuB,EAAa,KAAE4G,EAAgB,KACtC,GAA0CnI,EAAAA,EAAAA,UAAS,IAAG,eAA/CwB,EAAa,KAAE4G,EAAgB,MAEtCjI,EAAAA,EAAAA,YAAU,WACiB,aA8BxB,OA9BwB,0BAAzB,8HAE2BC,MAAM,gEAAgE,KAAD,EAA9E,IAARC,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,sBAAD,OAAuBF,EAASG,aAAc,KAAD,kBAExCH,EAASI,OAAO,KAAD,EAA/BR,EAAO,OACPoI,EAAiBpI,EAAQqI,MAAK,SAAC1H,GAAC,OAAKA,EAAEd,QAAUA,CAAK,IAC5DoI,EAAUG,GAAkB,MAGtBE,GAAyB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,WAAY,CAAC,EACxChH,EAAgB3D,OAAOC,QAAQ0K,GAAUjJ,KAAI,+BAAgB,MAAO,CACxEkJ,KAD0D,KAE1DpK,MAFiE,KAGlE,IAED+J,EAAiB5G,GAEXJ,GAAyB,OAAdkH,QAAc,IAAdA,OAAc,EAAdA,EAAgBlH,WAAY,CAAC,EACxCK,EAAgB5D,OAAOC,QAAQsD,GAAU7B,KAAI,+BAAgB,MAAO,CACxEkJ,KAD0D,KAE1DpK,MAFiE,KAGlE,IAEDgK,EAAiB5G,GAAgB,kDAGjCX,OAAOC,MAAM,KAAMC,SAAS,2DAE/B,uBA/Bc,WACU,wBAgCzBC,EACF,GAAG,CAAClB,IAOJ,IAAKhC,EACH,OAAO,KAGT,IAAMqD,EAAW,CACfsH,eAAgB3K,EAAO6D,iBAAmB,CAAC,EAC3C+G,kBAAmB9K,OAAOC,QAAQC,EAAOkG,oBAAsB,CAAC,GAChE2E,cAAe/K,OAAOC,QAAQC,EAAOgE,uBAAyB,CAAC,GAC/D8G,cAAe9K,EAAO8K,eAAiB,GACvCC,aAAc/K,EAAO+K,cAAgB,GACrCC,gBAAiBhL,EAAOgL,iBAAmB,GAC3CC,gBAAiBjL,EAAOiL,iBAAmB,IAGzC7H,EAAgB,GACpB,OAAQE,GACN,IAAK,gBAYL,QACEF,EAAgBC,EAASyH,cACzB,MAXF,IAAK,eACH1H,EAAgBC,EAAS0H,aACzB,MACF,IAAK,kBACH3H,EAAgBC,EAAS2H,gBACzB,MACF,IAAK,kBACH5H,EAAgBC,EAAS4H,gBAyB7B,OACE,0BAEE,SAAC,EAAM,CACLjL,OAAQA,EACRqD,SAAUA,EACVD,cAAeA,EACfE,eAAgBA,EAChBC,mBA/DqB,SAACV,GAC1BsH,EAAkBtH,EACpB,EA8DMW,QA1BU,CAEd0H,eAAe,EACfC,eAAe,EACfC,WAAY,SACZC,UAAW,CAAC,GAAI,IAChBC,UAAW,SACX/D,WAAY,SACZgE,QAAS,EACTC,UAAW,EAEXC,MAAO,OACPC,OAAQ,cACRC,mBAAoB,KAchBlI,cAAeA,EACfC,cAAeA,KAGpB,C","sources":["views/dashboard/Map Topic.js","views/dashboard/TopicPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Record = (props) => {\r\n  const heatmapData = Object.entries(props.record.geographical).reduce((data, [country, values]) => {\r\n    if (country !== \"null\") {\r\n      const value = values[0]; // Value is stored at index 0\r\n      const latitude = values[1]; // Latitude at index 1\r\n      const longitude = values[2]; // Longitude at index 2\r\n      \r\n      if (latitude !== null && longitude !== null) {\r\n        data.push({\r\n          country: country,\r\n          value: value,\r\n          coordinates: [latitude, longitude],\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }, []);\r\n  return (\r\n    <MapContainer style={{ height: \"500px\", width: \"600px\" }} center={[0, 0]} zoomSnap={0} zoom={1.25} doubleClickZoom={false} attributionControl={false} maxBounds={[[90, -180], [-90, 180]]}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" noWrap={true}/>\r\n      {heatmapData.map((data) => (\r\n        <CircleMarker\r\n          key={data.country}\r\n          center={data.coordinates}\r\n          radius= {(data.value) ** (1/5) * 5}\r\n          color=\"#F9E076\"\r\n          fillColor=\"#F9E076\"\r\n          fillOpacity={0.8}\r\n        >\r\n          <Popup>\r\n            <div>\r\n              <strong>Country: </strong>{data.country}\r\n            </div>\r\n            <div>\r\n              <strong>Value: </strong>{data.value}\r\n            </div>\r\n          </Popup>\r\n        </CircleMarker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default function Map() {\r\n  const { topic } = useParams();\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(\"https://bee-aware-08ab5a1c994e.herokuapp.com/api/statistics/\");\r\n        if (!response.ok) {\r\n          throw new Error(`An error occurred: ${response.statusText}`);\r\n        }\r\n        const records = await response.json();\r\n        const matchingRecords = records.filter((r) => r.topic === topic);\r\n        setRecords(matchingRecords);\r\n      } catch (error) {\r\n        window.alert(error.message);\r\n      }\r\n    }\r\n\r\n    getRecords();\r\n  }, [topic]);\r\n\r\n  if (!records.length) {\r\n    return <div>No record found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {records.map((record) => (\r\n        <Record record={record} key={record.topic} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport verifiedImage from '../../assets/images/verified.png';\r\nimport { FaHeart, FaRetweet, FaQuoteLeft, FaReply, FaEye, FaUser, FaRegSmileBeam, FaRegFrown, FaRegMeh } from 'react-icons/fa';\r\nimport Map from './Map Topic'\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, ResponsiveContainer, LabelList, Label, PieChart, Pie, Cell, Tooltip } from \"recharts\";\r\nimport ReactWordcloud from \"react-wordcloud\"; \r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/animations/scale.css'\r\n\r\nconst Record = ({ record, hashtags, filteredTop10, selectedFilter, handleFilterChange, options, keywordsArray, hashtagsArray }) => {\r\n  // Prepare data for the pie chart\r\n  const pieData = record ? [\r\n    { name: 'Positive', value: record.sentiment_count?.Positive || 0, color: '#76CC9D', perc: record.sentiment_percentages?.Positive },\r\n    { name: 'Neutral', value: record.sentiment_count?.Neutral || 0, color: '#FADB7C', perc: record.sentiment_percentages?.Neutral },\r\n    { name: 'Negative', value: record.sentiment_count?.Negative || 0, color: '#F46161', perc: record.sentiment_percentages?.Negative },\r\n  ] : [];\r\n\r\n  const PieGraphic = () => {\r\n    const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n    const handleMouseEnter = (data, index) => {\r\n      setActiveIndex(index);\r\n    };\r\n\r\n    const renderTooltipContent = (props) => {\r\n      const { payload } = props;\r\n      if (payload && payload.length > 0) {\r\n        const entry = payload[0];\r\n        const { name, perc } = entry.payload;\r\n\r\n        return (\r\n          <div style= {{marginRight:'10px', marginLeft:'10px', marginTop:'10px'}}>\r\n            <p><strong>{name}</strong>: {`${perc.toFixed(2)}%`}</p>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={pieData}\r\n          dataKey=\"value\"\r\n          cx={120}\r\n          cy={150}\r\n          innerRadius={75}\r\n          outerRadius={110}\r\n          paddingAngle={5}\r\n          onMouseEnter={handleMouseEnter}\r\n        >\r\n          {pieData.map((entry, index) => (\r\n            <Cell key={index} fill={entry.color} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip content={renderTooltipContent} active={activeIndex !== null} wrapperStyle={{ backgroundColor: \"white\", border: '1px solid #ccc' }} />\r\n      </PieChart>\r\n    );\r\n  };\r\n\r\n  const calculateKValue = (value) => {\r\n    const kValue = value / 1000;\r\n    // Use toFixed(1) to display one decimal if the value is less than 1\r\n    return kValue.toFixed(kValue < 1 ? 1 : 0);\r\n  };\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (record && record.engagement_metrics) {\r\n      const data = [\r\n        { name: 'Impressions', value: record.engagement_metrics.total_impressions, sqrtValue: Math.sqrt(record.engagement_metrics.total_impressions) * 0.9, kValue: calculateKValue(record.engagement_metrics.total_impressions), },\r\n        { name: 'Likes', value: record.engagement_metrics.total_likes, sqrtValue: Math.sqrt(record.engagement_metrics.total_likes), kValue: calculateKValue(record.engagement_metrics.total_likes),},\r\n        { name: 'Retweets', value: record.engagement_metrics.total_retweets, sqrtValue: Math.sqrt(record.engagement_metrics.total_retweets), kValue: calculateKValue(record.engagement_metrics.total_retweets), },\r\n        { name: 'Quotes', value: record.engagement_metrics.total_quotes, sqrtValue: Math.sqrt(record.engagement_metrics.total_quotes), kValue: calculateKValue(record.engagement_metrics.total_quotes)},\r\n        { name: 'Replys', value: record.engagement_metrics.total_replys, sqrtValue: Math.sqrt(record.engagement_metrics.total_replys), kValue: calculateKValue(record.engagement_metrics.total_replys) },\r\n      ];\r\n      setChartData(data);\r\n    }\r\n  }, [record]);\r\n  \r\n\r\n  const CustomTooltip = ({ active, payload, label, coordinate }) => {\r\n    if (active && payload && payload.length) {\r\n      const value = payload[0].payload.value;\r\n      return (\r\n        <div className=\"custom-tooltip\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <div style={{ marginTop: '10px', marginRight: '10px', marginLeft: '10px' }}>\r\n          <p className=\"intro\" style={{ textAlign: 'center' }}>Value: {value}</p></div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  };\r\n\r\n  const CustomBarLabel = ({ x, y, value }) => (\r\n    <text x={x + 0} y={y - 7} textAnchor=\"start\" fontWeight=\"bold\">\r\n      {value}\r\n    </text>\r\n  );\r\n  \r\n  return (\r\n    <div >\r\n      <table className=\"home-table1\" style={{ display: 'flex', alignItems: 'center', width:'100%', minWidth: '1280px', maxWidth:'1280px' }}>\r\n      <thead>\r\n        <tr>\r\n          <th colSpan=\"2\" style={{ textAlign: 'center', position: 'relative' }}>\r\n            <span style={{ position: 'relative', top: '3.6px' }}>{record?.topic}</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <div>\r\n        <div style={{ display: 'flex', marginTop: '40px'}}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '130px' }}>\r\n          <h3><strong>{record?.engagement_metrics?.total_tweets}</strong></h3>\r\n          <h6>Total</h6>\r\n          <p></p>\r\n          <h3 style={{ color: '#76CC9D' }}><strong>{record?.sentiment_count?.Positive}</strong></h3>\r\n          <h6>Positive</h6>\r\n          <p></p>\r\n          <h3 style={{ color: '#FADB7C' }}><strong>{record?.sentiment_count?.Neutral}</strong></h3>\r\n          <h6>Neutral</h6>\r\n          <p></p>\r\n          <h3 style={{ color: '#F46161' }}><strong>{record?.sentiment_count?.Negative}</strong></h3>\r\n          <h6>Negative</h6>\r\n        </div>\r\n        <div style={{ width: '350px', height: '350px', marginLeft: '150px' }}>\r\n          <PieGraphic />\r\n          </div>\r\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <ResponsiveContainer width={450} height={350}>\r\n            <BarChart layout=\"vertical\" data={chartData} barSize={35} margin={{ left: 60, right: 80, top:4, bottom: 20 }}> {/* Adjust the margins */}\r\n                <XAxis type=\"number\" dataKey=\"sqrtValue\" hide /> {/* Use \"sqrtValue\" for XAxis dataKey */}\r\n                <YAxis type=\"category\" dataKey=\"name\" hide/> {/* Use \"name\" for YAxis dataKey */}\r\n                <Tooltip content={<CustomTooltip />} wrapperStyle={{ backgroundColor: \"white\", border: '1px solid #ccc' }} />\r\n                <Bar dataKey=\"sqrtValue\" fill=\"#8884d8\">\r\n                  <LabelList\r\n                    dataKey=\"name\"\r\n                    position=\"top\"\r\n                    //offset={4}\r\n                    content={<CustomBarLabel />}\r\n                  />\r\n                  <LabelList\r\n                    dataKey=\"kValue\"\r\n                    position=\"right\"\r\n                    formatter={(value) => `${value}K`}\r\n                  />\r\n                </Bar>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      </table>\r\n      <br></br>\r\n      \r\n      <div className=\"container text\" >\r\n              <div className=\"row align-items-start\" style={{ display: 'flex', width:'100%', minWidth: '1280px', maxWidth:'1280px'}}>\r\n              <div className=\"col-lg-6 col-md-4 col-sm-8\" style={{marginRight:'15px'}}>\r\n              <div className=\"flex-container\">\r\n                  <div className=\"flex-item\">\r\n                    <div style={{ marginBottom: '20px'}}>\r\n                  <h3>Trending Tweets Today </h3></div>\r\n                  <div className=\"filter-buttons\">\r\n        <button\r\n          className={selectedFilter === \"top_10_global\" ? \"active\" : \"\"}\r\n          onClick={() => handleFilterChange(\"top_10_global\")}\r\n        >\r\n          Global\r\n        </button>\r\n        <button\r\n          className={selectedFilter === \"top_10_media\" ? \"active\" : \"\"}\r\n          onClick={() => handleFilterChange(\"top_10_media\")}\r\n        >\r\n          With Media\r\n        </button>\r\n        <button\r\n          className={selectedFilter === \"top_10_verified\" ? \"active\" : \"\"}\r\n          onClick={() => handleFilterChange(\"top_10_verified\")}\r\n        >\r\n          Verified\r\n        </button>\r\n        <button\r\n                    className={selectedFilter === \"top_10_question\" ? \"active\" : \"\"}\r\n                    onClick={() => handleFilterChange(\"top_10_question\")}\r\n                  >\r\n                   Concerns\r\n                  </button>\r\n      </div>\r\n      <br></br>\r\n  {filteredTop10.length > 0 ? (\r\n    filteredTop10.map((entry, index) => (\r\n          <div key={index} style={{ marginBottom: '20px', width: '620px', border: '1px solid #ccc', borderRadius: '8px'}}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start' }}>\r\n            <div style={{ marginRight: '10px', marginTop: '6px' }}>\r\n              <img src={entry.profile_photo} alt=\"Profile\" style={{ width: '65px', marginLeft: '5px' }} />\r\n            </div>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <div>\r\n                <strong>@{entry.username}</strong> {entry.verified && <img src={verifiedImage} alt=\"Verified\" style={{ width: '13px', height: '13px', verticalAlign: 'middle', marginBottom: '2px' }} />}\r\n              </div>\r\n              <div style={{ fontSize: '15px', marginRight: '5px' }}>\r\n                {entry.result}\r\n                <br />\r\n                {entry.media !== null ? (\r\n                <a href={entry.media} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {entry.media}\r\n                </a>\r\n              ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <div style={{ marginLeft: '75px', marginBottom: '5px'}}>\r\n            <FaEye title=\"Impressions\" /> {entry.total_impressions} &nbsp;&nbsp;&nbsp;\r\n            <FaHeart title=\"Likes\" /> {entry.total_likes} &nbsp;&nbsp;&nbsp;\r\n            <FaRetweet title=\"Retweets\" /> {entry.total_retweets} &nbsp;&nbsp;&nbsp;\r\n            <FaQuoteLeft title=\"Quotes\" /> {entry.total_quotes} &nbsp;&nbsp;&nbsp;\r\n            <FaReply title=\"Replies\" /> {entry.total_replys} &nbsp;&nbsp;&nbsp;\r\n            {entry.mentions > 1 ? <><FaUser title=\"Mentions\" /> {entry.mentions}</> : null}\r\n\r\n            <div style={{ marginLeft: '10px', display: 'inline-flex', alignItems: 'center'}}>\r\n              {entry.sentiment === \"Positive\" ? <p><FaRegSmileBeam style={{ color: \"#76CC9D\" }} /> Positive</p> : null}\r\n              {entry.sentiment === \"Negative\" ? <p><FaRegFrown style={{ color: \"#F46161\" }} /> Negative</p>: null}\r\n              {entry.sentiment === \"Neutral\" ? <p><FaRegMeh style={{ color: \"#FADB7C\" }} /> Neutral</p>: null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n ))\r\n ) : (\r\n   <p>No data available for the selected filter.</p>\r\n )}\r\n       </div>\r\n       </div>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-3 col-sm-4\"  style={{ marginLeft:'5px', marginTop: '20px', alignItems:'center'}}>\r\n              <br></br><br></br>\r\n              <div style={{ width: \"600px\", height: \"270px\" , marginBottom:'40px'}}>\r\n      <ReactWordcloud options={options} words={hashtagsArray} />\r\n      </div>\r\n        <Map/>\r\n        \r\n        <div style={{ width: \"600px\", height: \"270px\", marginTop:'40px' }}>\r\n      <ReactWordcloud options={options} words={keywordsArray} />\r\n      </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default function Hashtags() {\r\n  const { topic } = useParams();\r\n\r\n  // State to store the selected filter, defaulting to 'top_10_global'\r\n  const [selectedFilter, setSelectedFilter] = useState(\"top_10_global\");\r\n\r\n  // Declare keywordsArray outside the useEffect hook\r\n  const [record, setRecord] = useState(null);\r\n  const [keywordsArray, setKeywordsArray] = useState([]); // Initialize it as an empty array\r\n  const [hashtagsArray, setHashtagsArray] = useState([]); // Initialize it as an empty array\r\n\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(\"https://bee-aware-08ab5a1c994e.herokuapp.com/api/statistics/\");\r\n        if (!response.ok) {\r\n          throw new Error(`An error occurred: ${response.statusText}`);\r\n        }\r\n        const records = await response.json();\r\n        const matchingRecord = records.find((r) => r.topic === topic);\r\n        setRecord(matchingRecord || null);\r\n\r\n        // Convert the record.keywords object into an array of keyword objects\r\n        const keywords = matchingRecord?.keywords || {};\r\n        const keywordsArray = Object.entries(keywords).map(([keyword, count]) => ({\r\n          text: keyword,\r\n          value: count,\r\n        }));\r\n\r\n        setKeywordsArray(keywordsArray); // Set the keywordsArray state with the converted data\r\n\r\n        const hashtags = matchingRecord?.hashtags || {};\r\n        const hashtagsArray = Object.entries(hashtags).map(([hashtag, count]) => ({\r\n          text: hashtag,\r\n          value: count,\r\n        }));\r\n\r\n        setHashtagsArray(hashtagsArray); // \r\n\r\n      } catch (error) {\r\n        window.alert(error.message);\r\n      }\r\n    }\r\n\r\n    getRecords();\r\n  }, [topic]);\r\n\r\n  // Function to handle filter change\r\n  const handleFilterChange = (filter) => {\r\n    setSelectedFilter(filter);\r\n  };\r\n\r\n  if (!record) {\r\n    return null;\r\n  }\r\n\r\n  const hashtags = {\r\n    sentimentCount: record.sentiment_count || {},\r\n    engagementMetrics: Object.entries(record.engagement_metrics || {}),\r\n    sentimentPerc: Object.entries(record.sentiment_percentages || {}),\r\n    top_10_global: record.top_10_global || [],\r\n    top_10_media: record.top_10_media || [],\r\n    top_10_verified: record.top_10_verified || [],\r\n    top_10_question: record.top_10_question || [],\r\n  };\r\n\r\n  let filteredTop10 = [];\r\n  switch (selectedFilter) {\r\n    case \"top_10_global\":\r\n      filteredTop10 = hashtags.top_10_global;\r\n      break;\r\n    case \"top_10_media\":\r\n      filteredTop10 = hashtags.top_10_media;\r\n      break;\r\n    case \"top_10_verified\":\r\n      filteredTop10 = hashtags.top_10_verified;\r\n      break;\r\n    case \"top_10_question\":\r\n      filteredTop10 = hashtags.top_10_question;\r\n      break;\r\n    default:\r\n      filteredTop10 = hashtags.top_10_global;\r\n      break;\r\n    \r\n  }\r\n\r\n  const options = {\r\n    //colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\r\n    enableTooltip: true,\r\n    deterministic: false,\r\n    fontFamily: \"impact\",\r\n    fontSizes: [15, 50],\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    padding: 1,\r\n    rotations: 0,\r\n    //rotationAngles: [0, 80],\r\n    scale: \"sqrt\",\r\n    spiral: \"archimedean\",\r\n    transitionDuration: 1000\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Pass the filteredTop10 data and the handleFilterChange function as props to the Record component */}\r\n      <Record\r\n        record={record}\r\n        hashtags={hashtags}\r\n        filteredTop10={filteredTop10}\r\n        selectedFilter={selectedFilter}\r\n        handleFilterChange={handleFilterChange} // Pass the handleFilterChange function\r\n        options={options}\r\n        keywordsArray={keywordsArray}\r\n        hashtagsArray={hashtagsArray}\r\n      />\r\n    </div>\r\n  )}\r\n\r\n"],"names":["Record","props","heatmapData","Object","entries","record","geographical","reduce","data","country","values","value","latitude","longitude","push","coordinates","MapContainer","style","height","width","center","zoomSnap","zoom","doubleClickZoom","attributionControl","maxBounds","TileLayer","url","noWrap","map","CircleMarker","radius","color","fillColor","fillOpacity","Popup","Map","topic","useParams","useState","records","setRecords","useEffect","fetch","response","ok","Error","statusText","json","matchingRecords","filter","r","window","alert","message","getRecords","length","filteredTop10","hashtags","selectedFilter","handleFilterChange","options","keywordsArray","hashtagsArray","pieData","name","sentiment_count","Positive","perc","sentiment_percentages","Neutral","Negative","PieGraphic","activeIndex","setActiveIndex","PieChart","Pie","dataKey","cx","cy","innerRadius","outerRadius","paddingAngle","onMouseEnter","index","entry","Cell","fill","Tooltip","content","payload","marginRight","marginLeft","marginTop","toFixed","active","wrapperStyle","backgroundColor","border","calculateKValue","kValue","chartData","setChartData","engagement_metrics","total_impressions","sqrtValue","Math","sqrt","total_likes","total_retweets","total_quotes","total_replys","CustomTooltip","label","coordinate","className","display","alignItems","justifyContent","textAlign","CustomBarLabel","x","y","textAnchor","fontWeight","minWidth","maxWidth","colSpan","position","top","flexDirection","total_tweets","ResponsiveContainer","BarChart","layout","barSize","margin","left","right","bottom","XAxis","type","hide","YAxis","Bar","LabelList","formatter","marginBottom","onClick","borderRadius","src","profile_photo","alt","username","verified","verifiedImage","verticalAlign","fontSize","result","media","href","target","rel","title","mentions","sentiment","words","Hashtags","setSelectedFilter","setRecord","setKeywordsArray","setHashtagsArray","matchingRecord","find","keywords","text","sentimentCount","engagementMetrics","sentimentPerc","top_10_global","top_10_media","top_10_verified","top_10_question","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","padding","rotations","scale","spiral","transitionDuration"],"sourceRoot":""}