{"version":3,"file":"static/js/932.29609642.chunk.js","mappings":"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","sources":["views/dashboard/Perspectives_Updates.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ReactTinyLink } from \"react-tiny-link\";\n\nexport default function Hashtags() {\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    async function getRecords() {\n      try {\n        const response = await fetch(\"https://bee-aware-2b421aedee22.herokuapp.com/links/\");\n        if (!response.ok) {\n          throw new Error(`An error occurred: ${response.statusText}`);\n        }\n        const records = await response.json();\n        setRecords(records);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        window.alert(error.message);\n      }\n    }\n    getRecords();\n  }, []);\n\n  const redirectToTopicPage = (topic) => {\n    // Modify the URL to the desired topic page\n    const topicPageURL = `http:/#/topics/${topic}`;\n    window.open(topicPageURL, \"_blank\");\n  };\n\n  const validateUrl = (url) => {\n    try {\n      new URL(url); // Validate the URL format\n      return true;\n    } catch (error) {\n      console.error(\"Invalid URL:\", url);\n      return false;\n    }\n  };\n\n  // Remove duplicate records based on both URL and title\n  const uniqueRecords = records.filter(\n    (record, index, self) =>\n      index ===\n      self.findIndex(\n        (r) => r.url === record.url || r.title === record.title\n      )\n  );\n\n  return (\n    <div>\n            <h2>Perspectives and Updates</h2>\n      <br />\n    <div style={{ display: \"flex\" }}>\n      <div className=\"perspectivesg\" style={{ flex: 1 }}>\n        {uniqueRecords.slice(0, uniqueRecords.length / 2).map((record) => (\n          <div key={record._id}>\n            {validateUrl(record.url) ? (\n              <ReactTinyLink\n              cardSize=\"large\"\n              showGraphic={true}\n              maxLine={2}\n              minLine={1}\n              noCache={true}\n              url={record.url}\n              loadSecureUrl={true}\n                \n                \n              />\n            ) : (\n              <p>Invalid URL: {record.url}</p>\n            )}\n          <table className=\"newstable\" style={{fontSize:\"16px\"}}>\n                  <tbody>\n                    <tr>\n                    <td>Related Topics:&nbsp; \n  {Array.isArray(record.topic) ? (\n    record.topic.map((topic, index) => (\n      <span key={index}>\n        <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>{topic}</a>\n        {index < record.topic.length - 1 ? ', ' : ''}\n      </span>\n    ))\n  ) : (\n    <a href=\"#\" onClick={() => redirectToTopicPage(record.topic)}>{record.topic}</a>\n  )}\n</td>\n\n                    </tr>\n                  </tbody>\n                </table>\n            <br />\n          </div>\n        ))}\n      </div>\n      <div style={{ flex: 1 }} className=\"perspectivesg\">\n        {uniqueRecords.slice(uniqueRecords.length / 2).map((record) => (\n          <div key={record._id}>\n            {validateUrl(record.url) ? (\n              <ReactTinyLink\n                cardSize=\"large\"\n                showGraphic={true}\n                maxLine={2}\n                minLine={1}\n                noCache={true}\n                url={record.url}\n                loadSecureUrl={true}\n              />\n            ) : (\n              <p>Invalid URL: {record.url}</p>\n            )}\n            <table className=\"newstable\" style={{fontSize:\"16px\"}}>\n                  <tbody>\n                    <tr>\n                    <td>Related Topics:&nbsp; \n  {Array.isArray(record.topic) ? (\n    record.topic.map((topic, index) => (\n      <span key={index}>\n        <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>{topic}</a>\n        {index < record.topic.length - 1 ? ', ' : ''}\n      </span>\n    ))\n  ) : (\n    <a href=\"#\" onClick={() => redirectToTopicPage(record.topic)}>{record.topic}</a>\n  )}\n</td>\n</tr>\n                  </tbody>\n                </table>\n            <br />\n          </div>\n        ))}\n      </div>\n      <div style={{ flex: 1, maxWidth:\"280px\" }} className=\"perspectivesp\">\n        {uniqueRecords.map((record) => (\n          <div key={record._id}>\n            {validateUrl(record.url) ? (\n              <ReactTinyLink\n                cardSize=\"large\"\n                showGraphic={true}\n                maxLine={2}\n                minLine={1}\n                noCache={true}\n                url={record.url}\n                loadSecureUrl={true}\n              />\n            ) : (\n              <p>Invalid URL: {record.url}</p>\n            )}\n            <table className=\"newstable\" style={{fontSize:\"16px\"}}>\n                  <tbody>\n                    <tr>\n                    <td>Related Topics:&nbsp; \n  {Array.isArray(record.topic) ? (\n    record.topic.map((topic, index) => (\n      <span key={index}>\n        <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>{topic}</a>\n        {index < record.topic.length - 1 ? ', ' : ''}\n      </span>\n    ))\n  ) : (\n    <a href=\"#\" onClick={() => redirectToTopicPage(record.topic)}>{record.topic}</a>\n  )}\n</td>\n</tr>\n                  </tbody>\n                </table>\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n    </div>\n  );\n}\n"],"names":["Hashtags","useState","records","setRecords","useEffect","fetch","response","ok","Error","statusText","json","console","error","window","alert","message","getRecords","redirectToTopicPage","topic","topicPageURL","open","validateUrl","url","URL","uniqueRecords","filter","record","index","self","findIndex","r","title","style","display","className","flex","slice","length","map","ReactTinyLink","cardSize","showGraphic","maxLine","minLine","noCache","loadSecureUrl","fontSize","Array","isArray","href","onClick","_id","maxWidth"],"sourceRoot":""}