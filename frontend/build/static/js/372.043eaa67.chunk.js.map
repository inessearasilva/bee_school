{"version":3,"file":"static/js/372.043eaa67.chunk.js","mappings":"6VASe,SAASA,IAAa,IAAD,QAClC,GAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAG1B,GAA4CF,EAAAA,EAAAA,UAAS,iBAAgB,eAA9DG,EAAc,KAAEC,EAAiB,KACxC,GAA0CJ,EAAAA,EAAAA,UAAS,IAAG,eAA/CK,EAAa,KAAEC,EAAgB,KACtC,GAA0CN,EAAAA,EAAAA,UAAS,IAAG,eAAhCO,GAAF,KAAkB,OAEtCC,EAAAA,EAAAA,YAAU,WACiB,aAiCxB,OAjCwB,0BAAzB,4HAE2BC,MAAM,wEAAwE,KAAD,EAAtF,IAARC,EAAQ,QAEAC,GAAG,CAAD,qBACR,IAAIC,MAAM,oBAAD,OAAqBF,EAASG,aAAc,KAAD,kBAGtCH,EAASI,OAAO,KAAD,EAA/Bb,EAAO,OACbc,QAAQC,IAAI,mBAAoBf,GAEhCC,EAAWD,GAELgB,EAAWhB,EAAQ,GAAGgB,UAAY,CAAC,EACnCZ,EAAgBa,OAAOC,QAAQF,GAAUG,KAAI,+BAAgB,MAAO,CACxEC,KAD0D,KAE1DC,MAFiE,KAGlE,IAEDhB,EAAiBD,GAEXkB,EAAWtB,EAAQ,GAAGsB,UAAY,CAAC,EACnCC,EAAgBN,OAAOC,QAAQI,GAAUH,KAAI,+BAAgB,MAAO,CACxEC,KAD0D,KAE1DC,MAFiE,KAGlE,IAEDP,QAAQC,IAAI,gBAAiBQ,GAE7BjB,EAAiBiB,GAAe,kDAEhCC,OAAOC,MAAM,KAAMC,SAAS,2DAE/B,uBAlCc,WACU,wBAmCzBC,EACF,GAAG,IAGH,IAAMC,EAAqB,SAACC,GAC1B1B,EAAkB0B,EACpB,EAEMP,EAAW,CACfQ,eAAyB,QAAV,EAAA9B,EAAQ,UAAE,aAAV,EAAY8B,gBAAiB,GAC5CC,cAAwB,QAAV,EAAA/B,EAAQ,UAAE,aAAV,EAAY+B,eAAgB,GAC1CC,iBAA2B,QAAV,EAAAhC,EAAQ,UAAE,aAAV,EAAYgC,kBAAmB,GAChDC,iBAA2B,QAAV,EAAAjC,EAAQ,UAAE,aAAV,EAAYiC,kBAAmB,IAI9CC,EAAgB,GACpB,OAAQhC,GACN,IAAK,gBAYL,QACEgC,EAAgBZ,EAASQ,cACzB,MAXF,IAAK,eACHI,EAAgBZ,EAASS,aACzB,MACF,IAAK,kBACHG,EAAgBZ,EAASU,gBACzB,MACF,IAAK,kBACHE,EAAgBZ,EAASW,gBAO7B,IAgBME,EAAgB,SAACC,GACrB,IAAQC,EAAwBD,EAAxBC,EAAGC,EAAqBF,EAArBE,EAAGC,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OAErB,OACE,wBACE,iBACEH,EAAGA,EACHC,EAAGA,EACHC,MAAOA,EACPC,OAAQA,EACRC,GAAI,EACJC,GAAI,EACJC,KAAMP,EAAMO,QAIpB,EAEMC,EAAkB,SAAH,OAAMP,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGjB,EAAK,EAALA,MAAOwB,EAAK,EAALA,MAAK,OAC3C,iBACER,EAAGA,EACHC,EAAGA,EACHQ,IAAK,GACLH,KAAK,QACLI,SAAU,GACVC,WAAW,OACXC,WAAYJ,EAAM,SAEjBxB,GACI,EAGH6B,EAA2B,SAAH,GAAO,EAADb,EAAgC,IAA7BC,EAAC,EAADA,EAAUjB,GAAF,EAALkB,MAAY,EAALlB,OAAW,EAAJsB,KAQtD,GAAItB,EAAO,CACT,IACM8B,EADU,UAAM9B,EAAMA,MAAK,aAAKA,EAAM+B,KAAKC,QAAQ,GAAE,KACjCC,MAAM,MAEhC,OACE,uBACGH,EAAOhC,KAAI,SAACoC,EAAKC,GAAK,OACrB,iBAEEnB,EAAG,IACHC,EAAGA,EAfM,GAeYkB,GAhBf,EAiBNb,KAAK,QACLM,WAAW,MACXQ,iBAAiB,SAAS,UAE1B,kBACEV,SAAoB,IAAVS,EApBA,GACD,GAoBTV,GAAc,IAAVU,EAnBI,GAmBwB,EAChCR,WAAsB,IAAVQ,EAAc,OAAS,SAAS,SAE3CD,KAZEC,EAcA,KAIf,CAEA,OAAO,IACT,EAGME,EAAY1D,EAAQmB,KAAI,SAACwC,GAAM,MAAM,CACzCC,SAAU,CAAEvC,MAAOsC,EAAOE,gBAAgBC,SAAUV,KAAMO,EAAOI,sBAAsBD,SAAUE,UAAYL,EAAOE,gBAAgBC,SAAU,KAC9IG,QAAS,CAAE5C,MAAOsC,EAAOE,gBAAgBK,QAASd,KAAMO,EAAOI,sBAAsBG,QAASF,UAAYL,EAAOE,gBAAgBK,QAAS,IAAM,KAChJC,SAAU,CAAE9C,MAAOsC,EAAOE,gBAAgBO,SAAUhB,KAAMO,EAAOI,sBAAsBK,SAAUJ,UAAYL,EAAOE,gBAAgBO,SAAU,KAC/I,IAGD,OACE,4BACE,kDACA,mBACA,kBAAOC,UAAU,cAAcC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUjC,MAAM,OAAQkC,SAAU,SAAUC,SAAS,UAAW,UACrI,gBAAKL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,wBAAwBC,MAAO,CAACK,UAAW,QAAQ,WAChE,gBAAKN,UAAU,8BAA6B,UAChD,gBAAKC,MAAO,CAAE/B,MAAO,QAASC,OAAQ,QAASmC,UAAW,QAAS,UACjE,SAAC,IAAmB,WAClB,UAAC,IAAQ,CAACC,KAAMlB,EAAWmB,OAAO,WAAWC,OAAQ,GAAG,WACtD,SAAC,IAAK,CAACC,KAAK,SAASC,MAAI,KACzB,SAAC,IAAK,CAACD,KAAK,WAAWC,MAAI,KAC3B,SAAC,IAAM,CAACC,SAAS,UACjB,UAAC,IAAG,CACFC,QAAQ,qBACRvC,KAAK,UACLwC,KAAK,WACLC,OAAO,SAACjD,EAAa,CAACQ,KAAK,YAAc,WAEzC,SAAC,IAAS,CACRuC,QAAQ,WACRG,SAAS,QACTC,QAAS,SAAClD,GAAK,OAAK,SAACc,GAAwB,UAAKd,GAAS,KAE7D,SAAC,IAAS,CACR8C,QAAQ,WACRG,SAAS,MACTC,QAAS,gBAAGjD,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAC,OAAO,SAACM,EAAe,CAACP,EAAGA,EAAGC,EAAGA,EAAGjB,MAAM,WAAWwB,MAAM,QAAS,QAGxF,UAAC,IAAG,CACFqC,QAAQ,oBACRvC,KAAK,UACLwC,KAAK,UACLC,OAAO,SAACjD,EAAa,CAACQ,KAAK,YAAc,WAEzC,SAAC,IAAS,CACRuC,QAAQ,UACRG,SAAS,QACTC,QAAS,SAAClD,GAAK,OAAK,SAACc,GAAwB,UAAKd,GAAS,KAE7D,SAAC,IAAS,CACR8C,QAAQ,UACRG,SAAS,MACTC,QAAS,gBAAGjD,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAC,OAAO,SAACM,EAAe,CAACP,EAAGA,EAAGC,EAAGA,EAAGjB,MAAM,UAAUwB,MAAM,QAAS,QAGvF,UAAC,IAAG,CACFqC,QAAQ,qBACRvC,KAAK,UACLwC,KAAK,WACLC,OAAO,SAACjD,EAAa,CAACQ,KAAK,YAAc,WAEzC,SAAC,IAAS,CACRuC,QAAQ,WACRG,SAAS,QACTC,QAAS,SAAClD,GAAK,OAAK,SAACc,GAAwB,UAAKd,GAAS,KAE7D,SAAC,IAAS,CACR8C,QAAQ,WACRG,SAAS,MACTC,QAAS,gBAAGjD,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAC,OAAO,SAACM,EAAe,CAACP,EAAGA,EAAGC,EAAGA,EAAGjB,MAAM,WAAWwB,MAAM,QAAS,iBAO5F,gBAAKwB,UAAU,8BAA6B,UAC5C,gBAAKC,MAAO,CAAE/B,MAAO,QAASC,OAAQ,QAASmC,UAAU,QAAS,UAC5D,SAAC,KAAc,CAACY,QAtKZ,CAEdC,eAAe,EACfC,eAAe,EACfC,WAAY,SACZC,UAAW,CAAC,GAAI,IAChBC,UAAW,SACX5C,WAAY,SACZ6C,QAAS,EACTC,UAAW,EAEXC,MAAO,OACPC,OAAQ,cACRC,mBAAoB,KAyJwBC,MAAO9F,gBAOjD,mBACA,gBAAKiE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,8BAA6B,UAC1C,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,YAAW,WAC1B,gBAAKC,MAAO,CAAE6B,aAAc,QAAQ,UAChC,sDACF,iBAAK9B,UAAU,iBAAgB,WAC7B,mBACEA,UAA8B,kBAAnBnE,EAAqC,SAAW,GAC3DkG,QAAS,kBAAMxE,EAAmB,gBAAgB,EAAC,qBAIrD,mBACEyC,UAA8B,iBAAnBnE,EAAoC,SAAW,GAC1DkG,QAAS,kBAAMxE,EAAmB,eAAe,EAAC,yBAIpD,mBACEyC,UAA8B,oBAAnBnE,EAAuC,SAAW,GAC7DkG,QAAS,kBAAMxE,EAAmB,kBAAkB,EAAC,uBAIvD,mBACEyC,UAA8B,oBAAnBnE,EAAuC,SAAW,GAC7DkG,QAAS,kBAAMxE,EAAmB,kBAAkB,EAAC,0BAKzD,kBACCM,EAAcmE,OAAS,EACtBnE,EAAcf,KAAI,SAACmF,EAAO9C,GAAK,OAC7B,iBAAiBc,MAAO,CAAE6B,aAAc,OAAQ5D,MAAO,SAAUgE,OAAQ,iBAAkBC,aAAc,OAAQ,WAC/G,iBAAKlC,MAAO,CAAEC,QAAS,OAAQC,WAAY,cAAe,WACxD,gBAAKF,MAAO,CAAEmC,YAAa,OAAQ9B,UAAW,OAAQ,UACpD,gBAAK+B,IAAKJ,EAAMK,cAAeC,IAAI,SAAStC,MAAO,CAAE/B,MAAO,OAAQsE,WAAY,YAElF,iBAAKvC,MAAO,CAAEC,QAAS,OAAQuC,cAAe,UAAW,WACvD,4BACE,kCAAUR,EAAMS,YAAkB,IAAET,EAAMU,WAAY,gBAAKN,IAAKO,EAAeL,IAAI,aAAatC,MAAO,CAAE/B,MAAO,OAAQC,OAAQ,OAAQ0E,cAAe,SAAUf,aAAc,aAEjL,iBAAK7B,MAAO,CAAEvB,SAAU,OAAQ0D,YAAa,OAAQ,UAClDH,EAAMa,QACP,kBACiB,OAAhBb,EAAMc,OACP,cAAGC,KAAMf,EAAMc,MAAOE,OAAO,SAASC,IAAI,sBAAqB,SAC5DjB,EAAMc,QAEP,eAIR,mBACA,iBAAK9C,MAAO,CAAEuC,WAAY,OAAQV,aAAc,OAAQ,WACtD,SAAC,MAAK,CAACqB,MAAM,gBAAgB,IAAElB,EAAMmB,kBAAiB,iBACtD,SAAC,MAAO,CAACD,MAAM,UAAU,IAAElB,EAAMoB,YAAW,iBAC5C,SAAC,MAAS,CAACF,MAAM,aAAa,IAAElB,EAAMqB,eAAc,iBACpD,SAAC,MAAW,CAACH,MAAM,WAAW,IAAElB,EAAMsB,aAAY,iBAClD,SAAC,MAAO,CAACJ,MAAM,YAAY,IAAElB,EAAMuB,aAAY,gBAC9CvB,EAAMwB,SAAW,GAAI,iCAAE,SAAC,MAAM,CAACN,MAAM,aAAa,IAAElB,EAAMwB,YAAe,MAE1E,iBAAKxD,MAAO,CAAEuC,WAAY,OAAQtC,QAAS,cAAeC,WAAY,UAAU,UACzD,aAApB8B,EAAMyB,WAA2B,0BAAG,SAAC,MAAc,CAACzD,MAAO,CAAE0D,MAAO,aAAe,eAAgB,KAC/E,aAApB1B,EAAMyB,WAA2B,0BAAG,SAAC,MAAU,CAACzD,MAAO,CAAE0D,MAAO,aAAe,eAAe,KAC1E,YAApB1B,EAAMyB,WAA0B,0BAAG,SAAC,MAAQ,CAACzD,MAAO,CAAE0D,MAAO,aAAe,cAAc,aAhCvFxE,EAmCJ,KAGR,gGAKR,iBAAKa,UAAU,6BAA6BC,MAAO,CAAEuC,WAAY,OAAQlC,UAAW,OAAQH,WAAY,UAAW,WACjH,mBAAM,4BAMlB,C","sources":["views/dashboard/TweetStats Worldwide.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, ResponsiveContainer, LabelList, Label, Tooltip } from \"recharts\";\r\nimport ReactWordcloud from \"react-wordcloud\"; \r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/animations/scale.css'\r\nimport verifiedImage from '../../assets/images/verified.png';\r\nimport { FaHeart, FaRetweet, FaQuoteLeft, FaReply, FaEye, FaUser, FaRegSmileBeam, FaRegFrown, FaRegMeh } from 'react-icons/fa';\r\n\r\n\r\nexport default function Sentiment() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // Estado para armazenar o filtro selecionado, padrão é 'top_10_global'\r\n  const [selectedFilter, setSelectedFilter] = useState(\"top_10_global\");\r\n  const [keywordsArray, setKeywordsArray] = useState([]); // Inicializa como um array vazio\r\n  const [hashtagsArray, setHashtagsArray] = useState([]); // Inicializa como um array vazio\r\n\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(\"https://bee-aware-08ab5a1c994e.herokuapp.com/api/statistics_general/\");\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Ocorreu um erro: ${response.statusText}`);\r\n        }\r\n\r\n        const records = await response.json();\r\n        console.log('Fetched records:', records);\r\n\r\n        setRecords(records);\r\n\r\n        const keywords = records[0].keywords || {};\r\n        const keywordsArray = Object.entries(keywords).map(([keyword, count]) => ({\r\n          text: keyword,\r\n          value: count,\r\n        }));\r\n        \r\n        setKeywordsArray(keywordsArray);\r\n        \r\n        const hashtags = records[0].hashtags || {};\r\n        const hashtagsArray = Object.entries(hashtags).map(([hashtag, count]) => ({\r\n          text: hashtag,\r\n          value: count,\r\n        }));\r\n        \r\n        console.log('hashtag array', hashtagsArray);\r\n        \r\n        setHashtagsArray(hashtagsArray);\r\n      } catch (error) {\r\n        window.alert(error.message);\r\n      }\r\n    }\r\n\r\n    getRecords();\r\n  }, []);\r\n\r\n  // Função para lidar com a mudança de filtro\r\n  const handleFilterChange = (filter) => {\r\n    setSelectedFilter(filter);\r\n  };\r\n\r\n  const hashtags = {\r\n    top_10_global: records[0]?.top_10_global || [],\r\n    top_10_media: records[0]?.top_10_media || [],\r\n    top_10_verified: records[0]?.top_10_verified || [],\r\n    top_10_question: records[0]?.top_10_question || [],\r\n  };\r\n  \r\n\r\n  let filteredTop10 = [];\r\n  switch (selectedFilter) {\r\n    case \"top_10_global\":\r\n      filteredTop10 = hashtags.top_10_global;\r\n      break;\r\n    case \"top_10_media\":\r\n      filteredTop10 = hashtags.top_10_media;\r\n      break;\r\n    case \"top_10_verified\":\r\n      filteredTop10 = hashtags.top_10_verified;\r\n      break;\r\n    case \"top_10_question\":\r\n      filteredTop10 = hashtags.top_10_question;\r\n      break;\r\n    default:\r\n      filteredTop10 = hashtags.top_10_global;\r\n      break;\r\n  }\r\n\r\n  const options = {\r\n    //cores: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\r\n    enableTooltip: true,\r\n    deterministic: false,\r\n    fontFamily: \"impact\",\r\n    fontSizes: [15, 50],\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    padding: 1,\r\n    rotations: 0,\r\n    //rotationAngles: [0, 80],\r\n    scale: \"sqrt\",\r\n    spiral: \"archimedean\",\r\n    transitionDuration: 1000\r\n  };\r\n\r\n  const CustomizedBar = (props) => {\r\n    const { x, y, width, height } = props;\r\n\r\n    return (\r\n      <g>\r\n        <rect\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          rx={4} // Ajustar o raio para mudar o grau de arredondamento\r\n          ry={4} // Ajustar o raio para mudar o grau de arredondamento\r\n          fill={props.fill}\r\n        />\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const CustomizedLabel = ({ x, y, value, align }) => (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      dy={-12}\r\n      fill=\"black\"\r\n      fontSize={20}\r\n      fontWeight=\"bold\"\r\n      textAnchor={align}\r\n    >\r\n      {value}\r\n    </text>\r\n  );\r\n\r\n  const CustomizedLabelSentiment = ({ x, y, width, value, fill }) => {\r\n    const labelX = x + width + 10; // Ajustar a coordenada x para posicionar as etiquetas em relação à barra\r\n    const yOffset = -8;\r\n    const lineHeight = 16; // Ajustar a altura da linha conforme necessário\r\n    const valueFontSize = 25; // Tamanho da fonte para value.value\r\n    const percFontSize = 18; // Tamanho da fonte para value.perc\r\n    const lineSpacing = 20; // Ajustar o espaçamento entre os dois valores\r\n\r\n    if (value) {\r\n      const labelValue = `${value.value}\\n${value.perc.toFixed(2)}%`;\r\n      const values = labelValue.split('\\n');\r\n\r\n      return (\r\n        <g>\r\n          {values.map((val, index) => (\r\n            <text\r\n              key={index}\r\n              x={500} // Definir um valor fixo para a coordenada x\r\n              y={y + (lineHeight * index) + yOffset}\r\n              fill=\"black\"\r\n              textAnchor=\"end\" // Alinhar as etiquetas à direita\r\n              dominantBaseline=\"middle\" // Centralizar verticalmente as etiquetas\r\n            >\r\n              <tspan\r\n                fontSize={index === 0 ? valueFontSize : percFontSize}\r\n                dy={index === 1 ? lineSpacing : 0}\r\n                fontWeight={index === 0 ? \"bold\" : \"normal\"}\r\n              >\r\n                {val}\r\n              </tspan>\r\n            </text>\r\n          ))}\r\n        </g>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  // Preparar os dados para o gráfico\r\n  const chartData = records.map((record) => ({\r\n    negative: { value: record.sentiment_count.Negative, perc: record.sentiment_percentages.Negative, sqrtValue: (record.sentiment_count.Negative)/1.1 },\r\n    neutral: { value: record.sentiment_count.Neutral, perc: record.sentiment_percentages.Neutral, sqrtValue: (record.sentiment_count.Neutral)/1.1 - 220 },\r\n    positive: { value: record.sentiment_count.Positive, perc: record.sentiment_percentages.Positive, sqrtValue: (record.sentiment_count.Positive)/1.1 }\r\n  }));\r\n\r\n  // Esta seção a seguir exibirá os registros e o gráfico\r\n  return (\r\n    <div>\r\n      <h2>TweetStats Worldwide</h2>\r\n      <br />\r\n      <table className=\"home-table1\" style={{ display: 'flex', alignItems: 'center', width:'100%', minWidth: '1280px', maxWidth:'1280px' }}>\r\n      <div className=\"container text\">\r\n        <div className=\"row align-items-start\" style={{marginTop: '30px'}}>\r\n          <div className=\"col-lg-6 col-md-4 col-sm-10\">\r\n      <div style={{ width: \"500px\", height: \"300px\", marginTop: '10px' }}>\r\n        <ResponsiveContainer>\r\n          <BarChart data={chartData} layout=\"vertical\" barGap={55}>\r\n            <XAxis type=\"number\" hide />\r\n            <YAxis type=\"category\" hide />\r\n            <Legend iconType=\"none\" />\r\n            <Bar\r\n              dataKey=\"positive.sqrtValue\"\r\n              fill=\"#76CC9D\"\r\n              name=\"Positive\"\r\n              shape={<CustomizedBar fill=\"#76CC9D\" />} // Usar o componente de forma personalizada para a barra\r\n            >\r\n              <LabelList\r\n                dataKey=\"positive\"\r\n                position=\"right\"\r\n                content={(props) => <CustomizedLabelSentiment {...props} />}\r\n              />\r\n              <LabelList\r\n                dataKey=\"positive\"\r\n                position=\"top\"\r\n                content={({ x, y }) => <CustomizedLabel x={x} y={y} value=\"Positive\" align=\"left\" />}\r\n              />\r\n            </Bar>\r\n            <Bar\r\n              dataKey=\"neutral.sqrtValue\"\r\n              fill=\"#FADB7C\"\r\n              name=\"Neutral\"\r\n              shape={<CustomizedBar fill=\"#FADB7C\" />} // Usar o componente de forma personalizada para a barra\r\n            >\r\n              <LabelList\r\n                dataKey=\"neutral\"\r\n                position=\"right\"\r\n                content={(props) => <CustomizedLabelSentiment {...props} />}\r\n              />\r\n              <LabelList\r\n                dataKey=\"neutral\"\r\n                position=\"top\"\r\n                content={({ x, y }) => <CustomizedLabel x={x} y={y} value=\"Neutral\" align=\"left\" />}\r\n              />\r\n            </Bar>\r\n            <Bar\r\n              dataKey=\"negative.sqrtValue\"\r\n              fill=\"#F46161\"\r\n              name=\"Negative\"\r\n              shape={<CustomizedBar fill=\"#F46161\" />} // Usar o componente de forma personalizada para a barra\r\n            >\r\n              <LabelList\r\n                dataKey=\"negative\"\r\n                position=\"right\"\r\n                content={(props) => <CustomizedLabelSentiment {...props} />}\r\n              />\r\n              <LabelList\r\n                dataKey=\"negative\"\r\n                position=\"top\"\r\n                content={({ x, y }) => <CustomizedLabel x={x} y={y} value=\"Negative\" align=\"left\" />}\r\n              />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n        </div>\r\n        <div className=\"col-lg-6 col-md-4 col-sm-10\">\r\n        <div style={{ width: \"600px\", height: \"270px\", marginTop:'10px' }}>\r\n              <ReactWordcloud options={options} words={keywordsArray} />\r\n            </div>\r\n      </div>\r\n\r\n      </div>\r\n      </div>\r\n      </table>\r\n      <br></br>\r\n      <div className=\"container text\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-lg-8 col-md-6 col-sm-12\">\r\n            <div className=\"flex-container\">\r\n              <div className=\"flex-item\">\r\n              <div style={{ marginBottom: '20px'}}>\r\n                  <h3>Trending Tweets Today </h3></div>\r\n                <div className=\"filter-buttons\">\r\n                  <button\r\n                    className={selectedFilter === \"top_10_global\" ? \"active\" : \"\"}\r\n                    onClick={() => handleFilterChange(\"top_10_global\")}\r\n                  >\r\n                    Global\r\n                  </button>\r\n                  <button\r\n                    className={selectedFilter === \"top_10_media\" ? \"active\" : \"\"}\r\n                    onClick={() => handleFilterChange(\"top_10_media\")}\r\n                  >\r\n                    With Media\r\n                  </button>\r\n                  <button\r\n                    className={selectedFilter === \"top_10_verified\" ? \"active\" : \"\"}\r\n                    onClick={() => handleFilterChange(\"top_10_verified\")}\r\n                  >\r\n                   Verified\r\n                  </button>\r\n                  <button\r\n                    className={selectedFilter === \"top_10_question\" ? \"active\" : \"\"}\r\n                    onClick={() => handleFilterChange(\"top_10_question\")}\r\n                  >\r\n                   Concerns\r\n                  </button>\r\n                </div>\r\n                <br />\r\n                {filteredTop10.length > 0 ? (\r\n                  filteredTop10.map((entry, index) => (\r\n                    <div key={index} style={{ marginBottom: '20px', width: '1270px', border: '1px solid #ccc', borderRadius: '8px' }}>\r\n                      <div style={{ display: 'flex', alignItems: 'flex-start' }}>\r\n                        <div style={{ marginRight: '10px', marginTop: '6px' }}>\r\n                          <img src={entry.profile_photo} alt=\"Perfil\" style={{ width: '65px', marginLeft: '5px' }} />\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                          <div>\r\n                            <strong>@{entry.username}</strong> {entry.verified && <img src={verifiedImage} alt=\"Verificado\" style={{ width: '13px', height: '13px', verticalAlign: 'middle', marginBottom: '2px' }} />}\r\n                          </div>\r\n                          <div style={{ fontSize: '15px', marginRight: '5px' }}>\r\n                            {entry.result}\r\n                            <br />\r\n                            {entry.media !== null ? (\r\n                            <a href={entry.media} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                              {entry.media}\r\n                            </a>\r\n                          ) : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br></br>\r\n                      <div style={{ marginLeft: '75px', marginBottom: '5px' }}>\r\n                        <FaEye title=\"Impressions\" /> {entry.total_impressions} &nbsp;&nbsp;&nbsp;\r\n                        <FaHeart title=\"Likes\" /> {entry.total_likes} &nbsp;&nbsp;&nbsp;\r\n                        <FaRetweet title=\"Retweets\" /> {entry.total_retweets} &nbsp;&nbsp;&nbsp;\r\n                        <FaQuoteLeft title=\"Quotes\" /> {entry.total_quotes} &nbsp;&nbsp;&nbsp;\r\n                        <FaReply title=\"Replies\" /> {entry.total_replys} &nbsp;&nbsp;&nbsp;\r\n                        {entry.mentions > 1 ? <><FaUser title=\"Mentions\" /> {entry.mentions}</> : null}\r\n\r\n                        <div style={{ marginLeft: '10px', display: 'inline-flex', alignItems: 'center'}}>\r\n                          {entry.sentiment === \"Positive\" ? <p><FaRegSmileBeam style={{ color: \"#76CC9D\" }} /> Positive</p> : null}\r\n                          {entry.sentiment === \"Negative\" ? <p><FaRegFrown style={{ color: \"#F46161\" }} /> Negative</p>: null}\r\n                          {entry.sentiment === \"Neutral\" ? <p><FaRegMeh style={{ color: \"#FADB7C\" }} /> Neutral</p>: null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>Não há dados disponíveis para o filtro selecionado.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-2 col-md-3 col-sm-6\" style={{ marginLeft: '20px', marginTop: '20px', alignItems: 'center' }}>\r\n            <br /><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Sentiment","useState","records","setRecords","selectedFilter","setSelectedFilter","keywordsArray","setKeywordsArray","setHashtagsArray","useEffect","fetch","response","ok","Error","statusText","json","console","log","keywords","Object","entries","map","text","value","hashtags","hashtagsArray","window","alert","message","getRecords","handleFilterChange","filter","top_10_global","top_10_media","top_10_verified","top_10_question","filteredTop10","CustomizedBar","props","x","y","width","height","rx","ry","fill","CustomizedLabel","align","dy","fontSize","fontWeight","textAnchor","CustomizedLabelSentiment","values","perc","toFixed","split","val","index","dominantBaseline","chartData","record","negative","sentiment_count","Negative","sentiment_percentages","sqrtValue","neutral","Neutral","positive","Positive","className","style","display","alignItems","minWidth","maxWidth","marginTop","data","layout","barGap","type","hide","iconType","dataKey","name","shape","position","content","options","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","padding","rotations","scale","spiral","transitionDuration","words","marginBottom","onClick","length","entry","border","borderRadius","marginRight","src","profile_photo","alt","marginLeft","flexDirection","username","verified","verifiedImage","verticalAlign","result","media","href","target","rel","title","total_impressions","total_likes","total_retweets","total_quotes","total_replys","mentions","sentiment","color"],"sourceRoot":""}