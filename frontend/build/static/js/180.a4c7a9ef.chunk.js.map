{"version":3,"file":"static/js/180.a4c7a9ef.chunk.js","mappings":"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","sources":["views/dashboard/All Topics.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FaAngleRight } from 'react-icons/fa';\n\n\nconst Record = (props) => {\n  const topicsArray = Object.keys(props.record.topics);\n  const halfLength = Math.ceil(topicsArray.length / 2);\n\n  const redirectToTopicPage = (topic) => {\n    const topicPageURL = `http:/#/topics/${topic}`;\n    window.open(topicPageURL, \"_blank\");\n  };\n\n  return (\n\n    <table className=\"home-table1\" style={{ width:'100%', textAlign:\"center\"}}>\n    <div className=\"row align-items-start\" style={{ display: 'flex', alignItems: 'center', width: '100%', justifyContent: 'center' }}>\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\n        <table>\n          <tbody>\n          {props.filteredTopics.slice(0, Math.ceil(props.filteredTopics.length / 3)).map((topic, index) => (\n            <table key={topic} className=\"home-table2\" style={{ marginTop:'20px', marginBottom:'20px', alignItems: 'center', width: '100%'}}>\n              <thead>\n                <tr>\n                  <th style={{ display: 'flex', padding:'12px' }}>\n                    <span style={{ marginLeft:'8px' ,marginRight: 'auto' }}>{topic}</span>\n                    <a style={{ marginRight: '8px' }} href=\"#\" onClick={() => redirectToTopicPage(topic)}>\n                      <FaAngleRight />\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td style={{ display: 'flex', padding:'12px' }}>\n                  <span style={{ marginLeft:'8px' , marginRight: 'auto' }}>Total Tweets</span>\n                  <span style={{ marginRight: '8px' }}>{props.record.topics[topic]}</span>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\n        <table>\n          <tbody>\n\n            {props.filteredTopics.slice(Math.ceil(props.filteredTopics.length / 3), Math.ceil(props.filteredTopics.length / 3 * 2)).map((topic, index) => (\n            <table key={topic} className=\"home-table2\" style={{ marginTop:'20px', marginBottom:'20px', alignItems: 'center', width: '100%'}}>\n              <thead>\n                <tr>\n                  <th style={{ display: 'flex', padding:'12px' }}>\n                    <span style={{ marginLeft:'8px' ,marginRight: 'auto' }}>{topic}</span>\n                    <a style={{ marginRight: '8px' }} href=\"#\" onClick={() => redirectToTopicPage(topic)}>\n                      <FaAngleRight />\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td style={{ display: 'flex', padding:'12px' }}>\n                  <span style={{ marginLeft:'8px' , marginRight: 'auto' }}>Total Tweets</span>\n                  <span style={{ marginRight: '8px' }}>{props.record.topics[topic]}</span>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\n        <table>\n          <tbody>\n          {props.filteredTopics.slice(Math.ceil(props.filteredTopics.length / 3 * 2)).map((topic, index) => (\n            <table key={topic} className=\"home-table2\" style={{ marginTop:'20px', marginBottom:'20px', alignItems: 'center', width: '100%'}}>\n            <thead>\n                <tr>\n                  <th style={{ display: 'flex', padding:'12px' }}>\n                    <span style={{ marginLeft:'8px' ,marginRight: 'auto' }}>{topic}</span>\n                    <a style={{ marginRight: '8px' }} href=\"#\" onClick={() => redirectToTopicPage(topic)}>\n                      <FaAngleRight />\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td style={{ display: 'flex', padding:'12px' }}>\n                  <span style={{ marginLeft:'8px' , marginRight: 'auto' }}>Total Tweets</span>\n                  <span style={{ marginRight: '8px'}}>{props.record.topics[topic]}</span>\n                </td>\n              </tr>\n              </tbody>\n          </table>\n  ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n    </table>\n  );\n};\n\nexport default function Sentiment() {\n  const [records, setRecords] = useState([]);\n  const [selectedLetter, setSelectedLetter] = useState('');\n  const [availableLetters, setAvailableLetters] = useState(new Set());\n  const handleLetterClick = (letter) => {\n    setSelectedLetter(letter);\n\n    let newAvailableLetters = new Set();\n    records.forEach((record) => {\n      const topicsArray = Object.keys(record.topics);\n      topicsArray.forEach((topic) => {\n        newAvailableLetters.add(topic[0].toUpperCase());\n      });\n    });\n    setAvailableLetters(newAvailableLetters);\n  };\n\n  useEffect(() => {\n    async function getRecords() {\n      try {\n        const response = await fetch(\"https://bee-aware-2b421aedee22.herokuapp.com/statistics_general/\");\n\n        if (!response.ok) {\n          throw new Error(`An error occurred: ${response.statusText}`);\n        }\n\n        const records = await response.json();\n        setRecords(records);\n      } catch (error) {\n        window.alert(error.message);\n      }\n    }\n\n    getRecords();\n  }, []);\n\n  useEffect(() => {\n    let newAvailableLetters = new Set();\n    records.forEach((record) => {\n      const topicsArray = Object.keys(record.topics);\n      topicsArray.forEach((topic) => {\n        if (topic.toLowerCase().startsWith(selectedLetter.toLowerCase())) {\n          newAvailableLetters.add(topic[0].toUpperCase());\n        }\n      });\n    });\n    setAvailableLetters(newAvailableLetters);\n  }, [selectedLetter, records]);\n\n  function recordList() {\n    return records.map((record) => {\n      const topicsArray = Object.keys(record.topics);\n      const filteredTopics = selectedLetter\n        ? topicsArray.filter((topic) =>\n            topic.toLowerCase().startsWith(selectedLetter.toLowerCase())\n          )\n        : topicsArray;\n\n      return (\n        <Record\n          record={record}\n          key={record._id}\n          filteredTopics={filteredTopics}\n        />\n      );\n    });\n  }\n\n  return (\n    <div>\n      <div>\n        <button\n          className={selectedLetter === '' ? 'active' : ''}\n          onClick={() => handleLetterClick('')}\n          style={{padding:'8px 19px'}}>\n          All\n        </button>\n        {Array.from({ length: 26 }, (_, index) => (\n          <button\n            key={index}\n            className={selectedLetter === String.fromCharCode(65 + index) ? 'active' : ''}\n            onClick={() => handleLetterClick(String.fromCharCode(65 + index))}\n            style={{padding:'8px 17.6px'}}>\n            {String.fromCharCode(65 + index)}\n          </button>\n        ))}\n      </div>\n      <br />\n      <div>\n        {recordList()}\n      </div>\n    </div>\n  );\n}"],"names":["Record","props","topicsArray","Object","keys","record","topics","redirectToTopicPage","Math","ceil","length","topic","topicPageURL","window","open","className","style","width","textAlign","display","alignItems","justifyContent","filteredTopics","slice","map","index","marginTop","marginBottom","padding","marginLeft","marginRight","href","onClick","Sentiment","useState","records","setRecords","selectedLetter","setSelectedLetter","Set","setAvailableLetters","handleLetterClick","letter","newAvailableLetters","forEach","add","toUpperCase","useEffect","fetch","response","ok","Error","statusText","json","alert","message","getRecords","toLowerCase","startsWith","Array","from","_","String","fromCharCode","filter","_id"],"sourceRoot":""}