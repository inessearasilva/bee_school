{"version":3,"file":"static/js/932.1075ab11.chunk.js","mappings":"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","sources":["views/dashboard/Perspectives_Updates.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ReactTinyLink } from \"react-tiny-link\";\r\n\r\nexport default function Hashtags() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5050/links/\");\r\n        if (!response.ok) {\r\n          throw new Error(`An error occurred: ${response.statusText}`);\r\n        }\r\n        const records = await response.json();\r\n        setRecords(records);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        window.alert(error.message);\r\n      }\r\n    }\r\n    getRecords();\r\n  }, []);\r\n\r\n  const redirectToTopicPage = (topic) => {\r\n    // Modify the URL to the desired topic page\r\n    const topicPageURL = `http:/#/topics/${topic}`;\r\n    window.open(topicPageURL, \"_blank\");\r\n  };\r\n\r\n  const validateUrl = (url) => {\r\n    try {\r\n      new URL(url); // Validate the URL format\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Invalid URL:\", url);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Remove duplicate records based on both URL and title\r\n  const uniqueRecords = records.filter(\r\n    (record, index, self) =>\r\n      index ===\r\n      self.findIndex(\r\n        (r) => r.url === record.url || r.title === record.title\r\n      )\r\n  );\r\n\r\n  return (\r\n    <div>\r\n            <h2>Perspectives and Updates</h2>\r\n      <br />\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ flex: 1 }}>\r\n        {uniqueRecords.slice(0, uniqueRecords.length / 2).map((record) => (\r\n          <div key={record._id}>\r\n            {validateUrl(record.url) ? (\r\n              <ReactTinyLink\r\n                cardSize=\"large\"\r\n                showGraphic={true}\r\n                defaultMedia={record.photo}\r\n                maxLine={2}\r\n                minLine={1}\r\n                noCache={true}\r\n                url={record.url}\r\n                loadSecureUrl={true}\r\n                \r\n              />\r\n            ) : (\r\n              <p>Invalid URL: {record.url}</p>\r\n            )}\r\n          <table className=\"newstable\" style={{fontSize:\"16px\"}}>\r\n                  <tbody>\r\n                    <tr>\r\n                    <td>Related Topics:&nbsp; \r\n  {Array.isArray(record.topic) ? (\r\n    record.topic.map((topic, index) => (\r\n      <span key={index}>\r\n        <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>{topic}</a>\r\n        {index < record.topic.length - 1 ? ', ' : ''}\r\n      </span>\r\n    ))\r\n  ) : (\r\n    <a href=\"#\" onClick={() => redirectToTopicPage(record.topic)}>{record.topic}</a>\r\n  )}\r\n</td>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ flex: 1 }}>\r\n        {uniqueRecords.slice(uniqueRecords.length / 2).map((record) => (\r\n          <div key={record._id}>\r\n            {validateUrl(record.url) ? (\r\n              <ReactTinyLink\r\n                cardSize=\"large\"\r\n                showGraphic={true}\r\n                defaultMedia={record.photo}\r\n                maxLine={2}\r\n                minLine={1}\r\n                noCache={true}\r\n                url={record.url}\r\n                loadSecureUrl={true}\r\n              />\r\n            ) : (\r\n              <p>Invalid URL: {record.url}</p>\r\n            )}\r\n            <table className=\"newstable\" style={{fontSize:\"16px\"}}>\r\n                  <tbody>\r\n                    <tr>\r\n                    <td>Related Topics:&nbsp; \r\n  {Array.isArray(record.topic) ? (\r\n    record.topic.map((topic, index) => (\r\n      <span key={index}>\r\n        <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>{topic}</a>\r\n        {index < record.topic.length - 1 ? ', ' : ''}\r\n      </span>\r\n    ))\r\n  ) : (\r\n    <a href=\"#\" onClick={() => redirectToTopicPage(record.topic)}>{record.topic}</a>\r\n  )}\r\n</td>\r\n</tr>\r\n                  </tbody>\r\n                </table>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Hashtags","useState","records","setRecords","useEffect","fetch","response","ok","Error","statusText","json","console","error","window","alert","message","getRecords","redirectToTopicPage","topic","topicPageURL","open","validateUrl","url","URL","uniqueRecords","filter","record","index","self","findIndex","r","title","style","display","flex","slice","length","map","ReactTinyLink","cardSize","showGraphic","defaultMedia","photo","maxLine","minLine","noCache","loadSecureUrl","className","fontSize","Array","isArray","href","onClick","_id"],"sourceRoot":""}