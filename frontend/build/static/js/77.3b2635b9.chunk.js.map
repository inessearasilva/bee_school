{"version":3,"file":"static/js/77.3b2635b9.chunk.js","mappings":"wSAKMA,EAAS,SAACC,GACd,IAAMC,EAAcC,OAAOC,QAAQH,EAAMI,OAAOC,cAAcC,QAAO,SAACC,EAAK,GAAwB,IAAD,eAArBC,EAAO,KAAEC,EAAM,KAC1F,GAAgB,SAAZD,EAAoB,CACtB,IAAME,EAAQD,EAAO,GACfE,EAAWF,EAAO,GAClBG,EAAYH,EAAO,GAER,OAAbE,GAAmC,OAAdC,GACvBL,EAAKM,KAAK,CACRL,QAASA,EACTE,MAAOA,EACPI,YAAa,CAACH,EAAUC,IAG9B,CACA,OAAOL,CACT,GAAG,IACH,OACE,UAACQ,EAAA,EAAY,CAACC,UAAU,WAAWC,OAAQ,CAAC,EAAG,GAAIC,SAAU,EAAGC,KAAM,KAAMC,iBAAiB,EAAOC,oBAAoB,EAAOC,UAAW,CAAC,CAAC,IAAK,KAAM,EAAE,GAAI,MAAM,WACjK,SAACC,EAAA,EAAS,CAACC,IAAI,qDAAqDC,QAAQ,IAC3ExB,EAAYyB,KAAI,SAACnB,GAAI,OACpB,SAACoB,EAAA,EAAY,CAEXV,OAAQV,EAAKO,YACbc,OAAiC,EAAxB,SAACrB,EAAKG,MAAW,IAC1BmB,MAAM,UACNC,UAAU,UACVC,YAAa,GAAI,UAEjB,UAACC,EAAA,EAAK,YACJ,4BACE,0CAA2BzB,EAAKC,YAElC,4BACE,wCAAyBD,EAAKG,aAZ7BH,EAAKC,QAeG,MAIvB,EAEe,SAASyB,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAoB1B,OAlBAC,EAAAA,EAAAA,YAAU,WACiB,aAYxB,OAZwB,0BAAzB,sHAE2BC,MAAM,4DAA4D,KAAD,EAA1E,IAARC,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,sBAAD,OAAuBF,EAASG,aAAc,KAAD,kBAExCH,EAASI,OAAO,KAAD,EAA/BR,EAAO,OACPS,EAAkBT,EAAQU,QAAO,SAACC,GAAC,OAAKA,EAAEd,QAAUA,CAAK,IAC/DI,EAAWQ,GAAiB,kDAE5BG,OAAOC,MAAM,KAAMC,SAAS,2DAE/B,uBAbc,WACU,wBAczBC,EACF,GAAG,CAAClB,IAECG,EAAQgB,QAKX,yBACGhB,EAAQX,KAAI,SAACtB,GAAM,OAClB,SAACL,EAAM,CAACK,OAAQA,GAAaA,EAAO8B,MAAS,OAN1C,4CAUX,C,8ICvEe,SAASoB,IACtB,IAAQpB,GAAUC,EAAAA,EAAAA,MAAVD,MAGR,GAA4CE,EAAAA,EAAAA,UAAS,iBAAgB,eAA9DmB,EAAc,KAAEC,EAAiB,KAGxC,GAA4BpB,EAAAA,EAAAA,UAAS,MAAK,eAAnChC,EAAM,KAAEqD,EAAS,KACxB,GAA0CrB,EAAAA,EAAAA,UAAS,IAAG,eAA/CsB,EAAa,KAAEC,EAAgB,KACtC,GAA0CvB,EAAAA,EAAAA,UAAS,IAAG,eAA/CwB,EAAa,KAAEC,EAAgB,MAEtCtB,EAAAA,EAAAA,YAAU,WACiB,aA8BxB,OA9BwB,0BAAzB,8HAE2BC,MAAM,4DAA4D,KAAD,EAA1E,IAARC,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,sBAAD,OAAuBF,EAASG,aAAc,KAAD,kBAExCH,EAASI,OAAO,KAAD,EAA/BR,EAAO,OACPyB,EAAiBzB,EAAQ0B,MAAK,SAACf,GAAC,OAAKA,EAAEd,QAAUA,CAAK,IAC5DuB,EAAUK,GAAkB,MAGtBE,GAAyB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,WAAY,CAAC,EACxCN,EAAgBxD,OAAOC,QAAQ6D,GAAUtC,KAAI,+BAAgB,MAAO,CACxEuC,KAD0D,KAE1DvD,MAFiE,KAGlE,IAEDiD,EAAiBD,GAEXQ,GAAyB,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,WAAY,CAAC,EACxCN,EAAgB1D,OAAOC,QAAQ+D,GAAUxC,KAAI,+BAAgB,MAAO,CACxEuC,KAD0D,KAE1DvD,MAFiE,KAGlE,IAEDmD,EAAiBD,GAAgB,kDAGjCX,OAAOC,MAAM,KAAMC,SAAS,2DAE/B,uBA/Bc,WACU,wBAgCzBC,EACF,GAAG,CAAClB,IAOJ,IAAK9B,EACH,OAAO,KAGT,IAAM8D,EAAW,CACfC,eAAgB/D,EAAOgE,iBAAmB,CAAC,EAC3CC,kBAAmBnE,OAAOC,QAAQC,EAAOkE,oBAAsB,CAAC,GAChEC,cAAerE,OAAOC,QAAQC,EAAOoE,uBAAyB,CAAC,GAC/DC,cAAerE,EAAOqE,eAAiB,GACvCC,aAActE,EAAOsE,cAAgB,GACrCC,gBAAiBvE,EAAOuE,iBAAmB,GAC3CC,gBAAiBxE,EAAOwE,iBAAmB,IAGzCC,EAAgB,GACpB,OAAQtB,GACN,IAAK,gBAYL,QACEsB,EAAgBX,EAASO,cACzB,MAXF,IAAK,eACHI,EAAgBX,EAASQ,aACzB,MACF,IAAK,kBACHG,EAAgBX,EAASS,gBACzB,MACF,IAAK,kBACHE,EAAgBX,EAASU,gBAyB7B,OACE,0BAEE,SAAC,EAAM,CACLxE,OAAQA,EACR8D,SAAUA,EACVW,cAAeA,EACftB,eAAgBA,EAChBuB,mBA/DqB,SAAC/B,GAC1BS,EAAkBT,EACpB,EA8DMgC,QA1BU,CAEdC,eAAe,EACfC,eAAe,EACfC,WAAY,SACZC,UAAW,CAAC,GAAI,IAChBC,UAAW,SACXC,WAAY,SACZC,QAAS,EACTC,UAAW,EAEXC,MAAO,OACPC,OAAQ,cACRC,mBAAoB,KAchBhC,cAAeA,EACfE,cAAeA,KAGpB,CAEH,IAAM7D,EAAS,SAAH,GAAwH,IAAD,oBAAjHK,EAAM,EAANA,OAAkByE,GAAF,EAARX,SAAuB,EAAbW,eAAetB,EAAc,EAAdA,eAAgBuB,EAAkB,EAAlBA,mBAAoBC,EAAO,EAAPA,QAASrB,EAAa,EAAbA,cAAeE,EAAa,EAAbA,cAEvG+B,EAAUvF,EAAS,CACvB,CAAEwF,KAAM,WAAYlF,OAA6B,QAAtB,EAAAN,EAAOgE,uBAAe,aAAtB,EAAwByB,WAAY,EAAGhE,MAAO,UAAWiE,KAAkC,QAA9B,EAAE1F,EAAOoE,6BAAqB,aAA5B,EAA8BqB,UACxH,CAAED,KAAM,UAAWlF,OAA6B,QAAtB,EAAAN,EAAOgE,uBAAe,aAAtB,EAAwB2B,UAAW,EAAGlE,MAAO,UAAWiE,KAAkC,QAA9B,EAAE1F,EAAOoE,6BAAqB,aAA5B,EAA8BuB,SACtH,CAAEH,KAAM,WAAYlF,OAA6B,QAAtB,EAAAN,EAAOgE,uBAAe,aAAtB,EAAwB4B,WAAY,EAAGnE,MAAO,UAAWiE,KAAkC,QAA9B,EAAE1F,EAAOoE,6BAAqB,aAA5B,EAA8BwB,WACtH,GAEEC,EAAa,WACjB,OAAsC7D,EAAAA,EAAAA,UAAS,MAAK,eAA7C8D,EAAW,KAAEC,EAAc,KAoBlC,OACE,UAACC,EAAA,EAAQ,CAACC,MAAO,IAAKC,OAAQ,IAAI,WAChC,SAACC,EAAA,EAAG,CACFhG,KAAMoF,EACNa,QAAQ,QACRC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,IACbC,aAAc,EACdC,aA5BmB,SAACvG,EAAMwG,GAC9BZ,EAAeY,EACjB,EA0BqC,SAE9BpB,EAAQjE,KAAI,SAACsF,EAAOD,GAAK,OACxB,SAACE,EAAA,EAAI,CAAaC,KAAMF,EAAMnF,OAAnBkF,EAA4B,OAG3C,SAACI,EAAA,EAAO,CAACC,QA9BgB,SAACpH,GAC5B,IAAQqH,EAAYrH,EAAZqH,QACR,GAAIA,GAAWA,EAAQhE,OAAS,EAAG,CACjC,IACA,EADcgE,EAAQ,GACOA,QAArBzB,EAAI,EAAJA,KAAME,EAAI,EAAJA,KAEd,OACE,gBAAKwB,MAAQ,CAACC,UAAU,QAAQ,UAC9B,0BAAG,4BAAS3B,IAAc,eAAME,EAAK0B,QAAQ,GAAE,SAGrD,CACF,EAkB4CC,OAAwB,OAAhBvB,EAAsBwB,aAAc,CAAEC,gBAAiB,QAASC,OAAQ,sBAG9H,EAEMC,EAAkB,SAACnH,GACvB,IAAMoH,EAASpH,EAAQ,IAEvB,OAAOoH,EAAON,QAAQM,EAAS,EAAI,EAAI,EACzC,EAEA,GAAkC1F,EAAAA,EAAAA,UAAS,IAAG,eAAvC2F,EAAS,KAAEC,EAAY,MAE9BzF,EAAAA,EAAAA,YAAU,WACR,GAAInC,GAAUA,EAAOkE,mBAAoB,CACvC,IAAM/D,EAAO,CACX,CAAEqF,KAAM,cAAelF,MAAON,EAAOkE,mBAAmB2D,kBAAmBC,UAAoE,GAAzDC,KAAKC,KAAKhI,EAAOkE,mBAAmB2D,mBAA0BH,OAAQD,EAAgBzH,EAAOkE,mBAAmB2D,oBACtM,CAAErC,KAAM,QAASlF,MAAON,EAAOkE,mBAAmB+D,YAAaH,UAAWC,KAAKC,KAAKhI,EAAOkE,mBAAmB+D,aAAcP,OAAQD,EAAgBzH,EAAOkE,mBAAmB+D,cAC9K,CAAEzC,KAAM,WAAYlF,MAAON,EAAOkE,mBAAmBgE,eAAgBJ,UAAWC,KAAKC,KAAKhI,EAAOkE,mBAAmBgE,gBAAiBR,OAAQD,EAAgBzH,EAAOkE,mBAAmBgE,iBACvL,CAAE1C,KAAM,SAAUlF,MAAON,EAAOkE,mBAAmBiE,aAAcL,UAAWC,KAAKC,KAAKhI,EAAOkE,mBAAmBiE,cAAeT,OAAQD,EAAgBzH,EAAOkE,mBAAmBiE,eACjL,CAAE3C,KAAM,SAAUlF,MAAON,EAAOkE,mBAAmBkE,aAAcN,UAAWC,KAAKC,KAAKhI,EAAOkE,mBAAmBkE,cAAeV,OAAQD,EAAgBzH,EAAOkE,mBAAmBkE,gBAEnLR,EAAazH,EACf,CACF,GAAG,CAACH,IAGJ,IAAMqI,EAAgB,SAAH,GAAgD,IAA1ChB,EAAM,EAANA,OAAQJ,EAAO,EAAPA,QAAc,EAALqB,MAAiB,EAAVC,WAC/C,GAAIlB,GAAUJ,GAAWA,EAAQhE,OAAQ,CACvC,IAAM3C,EAAQ2G,EAAQ,GAAGA,QAAQ3G,MACjC,OACE,gBAAKM,UAAU,iBAAiBsG,MAAO,CAAEsB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAW,UACzG,gBAAKxB,MAAO,CAAEC,UAAW,QAAQ,UACjC,eAAGvG,UAAU,QAAQsG,MAAO,CAAEyB,UAAW,UAAW,oBAASrI,QAGnE,CAEA,OAAO,IACT,EAEMsI,EAAiB,SAAH,OAAMC,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGxI,EAAK,EAALA,MAAK,OACnC,iBAAMuI,EAAGA,EAAI,EAAGC,EAAGA,EAAI,EAAGC,WAAW,QAAQ9D,WAAW,OAAM,SAC3D3E,GACI,EAGT,OACE,4BACE,kBAAOM,UAAU,cAAcsG,MAAO,CAACjB,MAAM,QAAS,UACtD,gBAAKrF,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,8BAA6B,UAC1C,gBAAKA,UAAU,YAAW,UAC1B,uBAAU,OAANZ,QAAM,IAANA,OAAM,EAANA,EAAQ8B,aAElB,gBAAKlB,UAAU,8BAA6B,UAC1C,gBAAKA,UAAU,eAAc,UAC7B,iBAAKA,UAAU,cAAcsG,MAAO,CAAEsB,QAAS,OAAQQ,cAAe,UAAU,WAC9E,yBAAI,4BAAe,OAANhJ,QAAM,IAANA,GAA0B,QAApB,EAANA,EAAQkE,0BAAkB,WAApB,EAAN,EAA4B+E,kBACzC,mCACA,kBACA,eAAI/B,MAAO,CAAEzF,MAAO,WAAY,UAAC,4BAAe,OAANzB,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQgE,uBAAe,WAAjB,EAAN,EAAyByB,cACnE,sCACA,kBACA,eAAIyB,MAAO,CAAEzF,MAAO,WAAY,UAAC,4BAAe,OAANzB,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQgE,uBAAe,WAAjB,EAAN,EAAyB2B,aACnE,qCACA,kBACA,eAAIuB,MAAO,CAAEzF,MAAO,WAAY,UAAC,4BAAe,OAANzB,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQgE,uBAAe,WAAjB,EAAN,EAAyB4B,cACnE,6CAEJ,gBAAKhF,UAAU,8BAA6B,UAC5C,gBAAKA,UAAU,aAAasG,MAAO,CAAEjB,MAAO,QAASC,OAAQ,SAAU,UACnE,SAACL,EAAU,SAGb,gBAAKjF,UAAU,8BAA6B,UAC5C,gBAAKA,UAAU,YAAYsG,MAAO,CAAEsB,QAAS,OAAQQ,cAAe,SAAUP,WAAY,UAAU,UAChG,SAACS,EAAA,EAAmB,CAACjD,MAAO,IAAKC,OAAQ,IAAI,UAC7C,UAACiD,EAAA,EAAQ,CAACC,OAAO,WAAWjJ,KAAMwH,EAAW0B,QAAS,GAAIC,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAI,EAAGC,OAAQ,IAAK,eACzG,SAACC,EAAA,EAAK,CAACC,KAAK,SAASxD,QAAQ,YAAYyD,MAAI,IAAG,KAChD,SAACC,EAAA,EAAK,CAACF,KAAK,WAAWxD,QAAQ,OAAOyD,MAAI,IAAE,KAC5C,SAAC9C,EAAA,EAAO,CAACC,SAAS,SAACqB,EAAa,IAAKf,aAAc,CAAEC,gBAAiB,QAASC,OAAQ,qBACvF,UAACuC,EAAA,EAAG,CAAC3D,QAAQ,YAAYU,KAAK,UAAS,WACrC,SAACkD,EAAA,EAAS,CACR5D,QAAQ,OACR6D,SAAS,MAETjD,SAAS,SAAC4B,EAAc,OAE1B,SAACoB,EAAA,EAAS,CACR5D,QAAQ,SACR6D,SAAS,QACTC,UAAW,SAAC5J,GAAK,gBAAQA,EAAK,4BAU5C,mBAEA,gBAAKM,UAAU,iBAAgB,UACvB,iBAAKA,UAAU,wBAAwBsG,MAAO,CAAEsB,QAAS,OAAQvC,MAAM,QAAQ,WAC/E,gBAAKrF,UAAU,8BAA8BsG,MAAO,CAACiD,YAAY,QAAQ,UACzE,gBAAKvJ,UAAU,iBAAgB,UAC3B,iBAAKA,UAAU,YAAW,WACxB,gBAAKsG,MAAO,CAAEkD,aAAc,QAAQ,UACtC,sDACA,iBAAKxJ,UAAU,iBAAgB,WACzC,mBACEA,UAA8B,kBAAnBuC,EAAqC,SAAW,GAC3DkH,QAAS,kBAAM3F,EAAmB,gBAAgB,EAAC,qBAIrD,mBACE9D,UAA8B,iBAAnBuC,EAAoC,SAAW,GAC1DkH,QAAS,kBAAM3F,EAAmB,eAAe,EAAC,yBAIpD,mBACE9D,UAA8B,oBAAnBuC,EAAuC,SAAW,GAC7DkH,QAAS,kBAAM3F,EAAmB,kBAAkB,EAAC,uBAIvD,mBACY9D,UAA8B,oBAAnBuC,EAAuC,SAAW,GAC7DkH,QAAS,kBAAM3F,EAAmB,kBAAkB,EAAC,0BAKnE,kBACCD,EAAcxB,OAAS,EACZwB,EAAcnD,KAAI,SAACsF,EAAOD,GAAK,OAC7B,iBAAK/F,UAAU,UAAsBsG,MAAO,CAAEkD,aAAc,OAAQ5C,OAAQ,iBAAkB8C,aAAc,OAAQ,WAClH,iBAAKpD,MAAO,CAAEsB,QAAS,OAAQC,WAAY,cAAe,WACxD,gBAAKvB,MAAO,CAAEiD,YAAa,OAAQhD,UAAW,OAAQ,UACpD,gBAAKoD,IAAK3D,EAAM4D,cAAeC,IAAI,SAASvD,MAAO,CAAEjB,MAAO,OAAQyE,WAAY,YAElF,iBAAKxD,MAAO,CAAEsB,QAAS,OAAQQ,cAAe,UAAW,WACvD,4BACE,kCAAUpC,EAAM+D,YAAkB,IAAE/D,EAAMgE,WAAY,gBAAKL,IAAKM,EAAeJ,IAAI,aAAavD,MAAO,CAAEjB,MAAO,OAAQC,OAAQ,OAAQ4E,cAAe,SAAUV,aAAc,aAEjL,iBAAKlD,MAAO,CAAE6D,SAAU,OAAQZ,YAAa,OAAQ,UAClDvD,EAAMoE,QACP,kBACiB,OAAhBpE,EAAMqE,OACP,cAAGrK,UAAU,QAAQsK,KAAMtE,EAAMqE,MAAOE,OAAO,SAASC,IAAI,sBAAqB,SAC9ExE,EAAMqE,QAEP,eAIR,mBACA,iBAAK/D,MAAO,CAAEwD,WAAY,OAAQN,aAAc,OAAQ,WACtD,SAAC,MAAK,CAACiB,MAAM,gBAAgB,IAAEzE,EAAMiB,kBAAiB,iBACtD,SAAC,MAAO,CAACwD,MAAM,UAAU,IAAEzE,EAAMqB,YAAW,iBAC5C,SAAC,MAAS,CAACoD,MAAM,aAAa,IAAEzE,EAAMsB,eAAc,iBACpD,SAAC,MAAW,CAACmD,MAAM,WAAW,IAAEzE,EAAMuB,aAAY,iBAClD,SAAC,MAAO,CAACkD,MAAM,YAAY,IAAEzE,EAAMwB,aAAY,gBAC9CxB,EAAM0E,SAAW,GAAI,iCAAE,SAAC,MAAM,CAACD,MAAM,aAAa,IAAEzE,EAAM0E,YAAe,MAE1E,iBAAKpE,MAAO,CAAEwD,WAAY,OAAQlC,QAAS,cAAeC,WAAY,UAAU,UACzD,aAApB7B,EAAM2E,WAA2B,0BAAG,SAAC,MAAc,CAACrE,MAAO,CAAEzF,MAAO,aAAe,eAAgB,KAC/E,aAApBmF,EAAM2E,WAA2B,0BAAG,SAAC,MAAU,CAACrE,MAAO,CAAEzF,MAAO,aAAe,eAAe,KAC1E,YAApBmF,EAAM2E,WAA0B,0BAAG,SAAC,MAAQ,CAACrE,MAAO,CAAEzF,MAAO,aAAe,cAAc,aAhCnEkF,EAmCxB,KAGR,8EAKN,iBAAK/F,UAAU,6BAA8BsG,MAAO,CAAEwD,WAAW,MAAOvD,UAAW,OAAQsB,WAAW,UAAU,WAC9G,gBAAK7H,UAAU,YAAW,UAClC,SAAC,KAAc,CAAC+D,QAASA,EAAS6G,MAAOhI,OAEvC,SAAC3B,EAAG,KAEJ,gBAAKjB,UAAU,YAAW,UAC5B,SAAC,KAAc,CAAC+D,QAASA,EAAS6G,MAAOlI,gBAS/C,C","sources":["views/dashboard/Map Topic.js","views/dashboard/TopicPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useParams } from 'react-router-dom';\n\nconst Record = (props) => {\n  const heatmapData = Object.entries(props.record.geographical).reduce((data, [country, values]) => {\n    if (country !== \"null\") {\n      const value = values[0]; // Value is stored at index 0\n      const latitude = values[1]; // Latitude at index 1\n      const longitude = values[2]; // Longitude at index 2\n      \n      if (latitude !== null && longitude !== null) {\n        data.push({\n          country: country,\n          value: value,\n          coordinates: [latitude, longitude],\n        });\n      }\n    }\n    return data;\n  }, []);\n  return (\n    <MapContainer className=\"topicmap\" center={[0, 0]} zoomSnap={0} zoom={1.25} doubleClickZoom={false} attributionControl={false} maxBounds={[[90, -180], [-90, 180]]}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" noWrap={true}/>\n      {heatmapData.map((data) => (\n        <CircleMarker\n          key={data.country}\n          center={data.coordinates}\n          radius= {(data.value) ** (1/5) * 5}\n          color=\"#F9E076\"\n          fillColor=\"#F9E076\"\n          fillOpacity={0.8}\n        >\n          <Popup>\n            <div>\n              <strong>Country: </strong>{data.country}\n            </div>\n            <div>\n              <strong>Value: </strong>{data.value}\n            </div>\n          </Popup>\n        </CircleMarker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default function Map() {\n  const { topic } = useParams();\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    async function getRecords() {\n      try {\n        const response = await fetch(\"https://bee-aware-2b421aedee22.herokuapp.com/statistics/\");\n        if (!response.ok) {\n          throw new Error(`An error occurred: ${response.statusText}`);\n        }\n        const records = await response.json();\n        const matchingRecords = records.filter((r) => r.topic === topic);\n        setRecords(matchingRecords);\n      } catch (error) {\n        window.alert(error.message);\n      }\n    }\n\n    getRecords();\n  }, [topic]);\n\n  if (!records.length) {\n    return <div>No record found</div>;\n  }\n\n  return (\n    <div>\n      {records.map((record) => (\n        <Record record={record} key={record.topic} />\n      ))}\n    </div>\n  );\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport verifiedImage from '../../assets/images/verified.png';\nimport { FaHeart, FaRetweet, FaQuoteLeft, FaReply, FaEye, FaUser, FaRegSmileBeam, FaRegFrown, FaRegMeh } from 'react-icons/fa';\nimport Map from './Map Topic'\nimport { BarChart, Bar, XAxis, YAxis, Legend, ResponsiveContainer, LabelList, Label, PieChart, Pie, Cell, Tooltip } from \"recharts\";\nimport ReactWordcloud from \"react-wordcloud\"; \nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css'\n\nexport default function Hashtags() {\n  const { topic } = useParams();\n\n  // State to store the selected filter, defaulting to 'top_10_global'\n  const [selectedFilter, setSelectedFilter] = useState(\"top_10_global\");\n\n  // Declare keywordsArray outside the useEffect hook\n  const [record, setRecord] = useState(null);\n  const [keywordsArray, setKeywordsArray] = useState([]); // Initialize it as an empty array\n  const [hashtagsArray, setHashtagsArray] = useState([]); // Initialize it as an empty array\n\n  useEffect(() => {\n    async function getRecords() {\n      try {\n        const response = await fetch(\"https://bee-aware-2b421aedee22.herokuapp.com/statistics/\");\n        if (!response.ok) {\n          throw new Error(`An error occurred: ${response.statusText}`);\n        }\n        const records = await response.json();\n        const matchingRecord = records.find((r) => r.topic === topic);\n        setRecord(matchingRecord || null);\n\n        // Convert the record.keywords object into an array of keyword objects\n        const keywords = matchingRecord?.keywords || {};\n        const keywordsArray = Object.entries(keywords).map(([keyword, count]) => ({\n          text: keyword,\n          value: count,\n        }));\n\n        setKeywordsArray(keywordsArray); // Set the keywordsArray state with the converted data\n\n        const hashtags = matchingRecord?.hashtags || {};\n        const hashtagsArray = Object.entries(hashtags).map(([hashtag, count]) => ({\n          text: hashtag,\n          value: count,\n        }));\n\n        setHashtagsArray(hashtagsArray); // \n\n      } catch (error) {\n        window.alert(error.message);\n      }\n    }\n\n    getRecords();\n  }, [topic]);\n\n  // Function to handle filter change\n  const handleFilterChange = (filter) => {\n    setSelectedFilter(filter);\n  };\n\n  if (!record) {\n    return null;\n  }\n\n  const hashtags = {\n    sentimentCount: record.sentiment_count || {},\n    engagementMetrics: Object.entries(record.engagement_metrics || {}),\n    sentimentPerc: Object.entries(record.sentiment_percentages || {}),\n    top_10_global: record.top_10_global || [],\n    top_10_media: record.top_10_media || [],\n    top_10_verified: record.top_10_verified || [],\n    top_10_question: record.top_10_question || [],\n  };\n\n  let filteredTop10 = [];\n  switch (selectedFilter) {\n    case \"top_10_global\":\n      filteredTop10 = hashtags.top_10_global;\n      break;\n    case \"top_10_media\":\n      filteredTop10 = hashtags.top_10_media;\n      break;\n    case \"top_10_verified\":\n      filteredTop10 = hashtags.top_10_verified;\n      break;\n    case \"top_10_question\":\n      filteredTop10 = hashtags.top_10_question;\n      break;\n    default:\n      filteredTop10 = hashtags.top_10_global;\n      break;\n    \n  }\n\n  const options = {\n    //colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n    enableTooltip: true,\n    deterministic: false,\n    fontFamily: \"impact\",\n    fontSizes: [15, 50],\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    padding: 1,\n    rotations: 0,\n    //rotationAngles: [0, 80],\n    scale: \"sqrt\",\n    spiral: \"archimedean\",\n    transitionDuration: 1000\n  };\n\n\n  return (\n    <div>\n      {/* Pass the filteredTop10 data and the handleFilterChange function as props to the Record component */}\n      <Record\n        record={record}\n        hashtags={hashtags}\n        filteredTop10={filteredTop10}\n        selectedFilter={selectedFilter}\n        handleFilterChange={handleFilterChange} // Pass the handleFilterChange function\n        options={options}\n        keywordsArray={keywordsArray}\n        hashtagsArray={hashtagsArray}\n      />\n    </div>\n  )}\n\nconst Record = ({ record, hashtags, filteredTop10, selectedFilter, handleFilterChange, options, keywordsArray, hashtagsArray }) => {\n  // Prepare data for the pie chart\n  const pieData = record ? [\n    { name: 'Positive', value: record.sentiment_count?.Positive || 0, color: '#76CC9D', perc: record.sentiment_percentages?.Positive },\n    { name: 'Neutral', value: record.sentiment_count?.Neutral || 0, color: '#FADB7C', perc: record.sentiment_percentages?.Neutral },\n    { name: 'Negative', value: record.sentiment_count?.Negative || 0, color: '#F46161', perc: record.sentiment_percentages?.Negative },\n  ] : [];\n\n  const PieGraphic = () => {\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const handleMouseEnter = (data, index) => {\n      setActiveIndex(index);\n    };\n\n    const renderTooltipContent = (props) => {\n      const { payload } = props;\n      if (payload && payload.length > 0) {\n        const entry = payload[0];\n        const { name, perc } = entry.payload;\n\n        return (\n          <div style= {{marginTop:'10px'}}>\n            <p><strong>{name}</strong>: {`${perc.toFixed(2)}%`}</p>\n          </div>\n        );\n      }\n    };\n\n    return (\n      <PieChart width={400} height={400}>\n        <Pie\n          data={pieData}\n          dataKey=\"value\"\n          cx={120}\n          cy={150}\n          innerRadius={75}\n          outerRadius={110}\n          paddingAngle={5}\n          onMouseEnter={handleMouseEnter}\n        >\n          {pieData.map((entry, index) => (\n            <Cell key={index} fill={entry.color} />\n          ))}\n        </Pie>\n        <Tooltip content={renderTooltipContent} active={activeIndex !== null} wrapperStyle={{ backgroundColor: \"white\", border: '1px solid #ccc' }} />\n      </PieChart>\n    );\n  };\n\n  const calculateKValue = (value) => {\n    const kValue = value / 1000;\n    // Use toFixed(1) to display one decimal if the value is less than 1\n    return kValue.toFixed(kValue < 1 ? 1 : 0);\n  };\n\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    if (record && record.engagement_metrics) {\n      const data = [\n        { name: 'Impressions', value: record.engagement_metrics.total_impressions, sqrtValue: Math.sqrt(record.engagement_metrics.total_impressions) * 0.9, kValue: calculateKValue(record.engagement_metrics.total_impressions), },\n        { name: 'Likes', value: record.engagement_metrics.total_likes, sqrtValue: Math.sqrt(record.engagement_metrics.total_likes), kValue: calculateKValue(record.engagement_metrics.total_likes),},\n        { name: 'Retweets', value: record.engagement_metrics.total_retweets, sqrtValue: Math.sqrt(record.engagement_metrics.total_retweets), kValue: calculateKValue(record.engagement_metrics.total_retweets), },\n        { name: 'Quotes', value: record.engagement_metrics.total_quotes, sqrtValue: Math.sqrt(record.engagement_metrics.total_quotes), kValue: calculateKValue(record.engagement_metrics.total_quotes)},\n        { name: 'Replys', value: record.engagement_metrics.total_replys, sqrtValue: Math.sqrt(record.engagement_metrics.total_replys), kValue: calculateKValue(record.engagement_metrics.total_replys) },\n      ];\n      setChartData(data);\n    }\n  }, [record]);\n  \n\n  const CustomTooltip = ({ active, payload, label, coordinate }) => {\n    if (active && payload && payload.length) {\n      const value = payload[0].payload.value;\n      return (\n        <div className=\"custom-tooltip\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <div style={{ marginTop: '10px'}}>\n          <p className=\"intro\" style={{ textAlign: 'center' }}>Value: {value}</p></div>\n        </div>\n      );\n    }\n  \n    return null;\n  };\n\n  const CustomBarLabel = ({ x, y, value }) => (\n    <text x={x + 0} y={y - 7} textAnchor=\"start\" fontWeight=\"bold\">\n      {value}\n    </text>\n  );\n  \n  return (\n    <div>\n      <table className=\"home-table1\" style={{width:'100%' }}>\n      <div className=\"container text\">\n        <div className=\"row align-items-start\">\n          <div className=\"col-lg-2 col-md-2 col-sm-12\">\n            <div className=\"topicname\">\n            <p>{record?.topic}</p></div>\n            </div>\n      <div className=\"col-lg-2 col-md-1 col-sm-12\">\n        <div className=\"numbertopics\">\n        <div className=\"numbertopic\" style={{ display: 'flex', flexDirection: 'column'}}>\n          <h3><strong>{record?.engagement_metrics?.total_tweets}</strong></h3>\n          <h6>Total</h6>\n          <p></p>\n          <h3 style={{ color: '#76CC9D' }}><strong>{record?.sentiment_count?.Positive}</strong></h3>\n          <h6>Positive</h6>\n          <p></p>\n          <h3 style={{ color: '#FADB7C' }}><strong>{record?.sentiment_count?.Neutral}</strong></h3>\n          <h6>Neutral</h6>\n          <p></p>\n          <h3 style={{ color: '#F46161' }}><strong>{record?.sentiment_count?.Negative}</strong></h3>\n          <h6>Negative</h6>\n        </div></div></div>\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\n      <div className=\"piegraphic\" style={{ width: '350px', height: '350px' }}>\n          <PieGraphic />\n          </div>\n        </div>\n        <div className=\"col-lg-4 col-md-5 col-sm-12\">\n        <div className=\"percchart\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n            <ResponsiveContainer width={450} height={350}>\n            <BarChart layout=\"vertical\" data={chartData} barSize={35} margin={{ left: 60, right: 80, top:4, bottom: 20 }}> {/* Adjust the margins */}\n                <XAxis type=\"number\" dataKey=\"sqrtValue\" hide /> {/* Use \"sqrtValue\" for XAxis dataKey */}\n                <YAxis type=\"category\" dataKey=\"name\" hide/> {/* Use \"name\" for YAxis dataKey */}\n                <Tooltip content={<CustomTooltip />} wrapperStyle={{ backgroundColor: \"white\", border: '1px solid #ccc' }} />\n                <Bar dataKey=\"sqrtValue\" fill=\"#8884d8\">\n                  <LabelList\n                    dataKey=\"name\"\n                    position=\"top\"\n                    //offset={4}\n                    content={<CustomBarLabel />}\n                  />\n                  <LabelList\n                    dataKey=\"kValue\"\n                    position=\"right\"\n                    formatter={(value) => `${value}K`}\n                  />\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n      </div>\n      </table>\n      <br></br>\n    \n      <div className=\"container text\" >\n              <div className=\"row align-items-start\" style={{ display: 'flex', width:'100%'}}>\n              <div className=\"col-lg-6 col-md-4 col-sm-12\" style={{marginRight:'15px'}}>\n              <div className=\"flex-container\">\n                  <div className=\"flex-item\">\n                    <div style={{ marginBottom: '20px'}}>\n                  <h3>Trending Tweets Today </h3></div>\n                  <div className=\"filter-buttons\">\n        <button\n          className={selectedFilter === \"top_10_global\" ? \"active\" : \"\"}\n          onClick={() => handleFilterChange(\"top_10_global\")}\n        >\n          Global\n        </button>\n        <button\n          className={selectedFilter === \"top_10_media\" ? \"active\" : \"\"}\n          onClick={() => handleFilterChange(\"top_10_media\")}\n        >\n          With Media\n        </button>\n        <button\n          className={selectedFilter === \"top_10_verified\" ? \"active\" : \"\"}\n          onClick={() => handleFilterChange(\"top_10_verified\")}\n        >\n          Verified\n        </button>\n        <button\n                    className={selectedFilter === \"top_10_question\" ? \"active\" : \"\"}\n                    onClick={() => handleFilterChange(\"top_10_question\")}\n                  >\n                   Concerns\n                  </button>\n      </div>\n      <br></br>\n      {filteredTop10.length > 0 ? (\n                  filteredTop10.map((entry, index) => (\n                    <div className=\"tweetst\" key={index} style={{ marginBottom: '20px', border: '1px solid #ccc', borderRadius: '8px' }}>\n                      <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n                        <div style={{ marginRight: '10px', marginTop: '6px' }}>\n                          <img src={entry.profile_photo} alt=\"Perfil\" style={{ width: '65px', marginLeft: '5px' }} />\n                        </div>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <div>\n                            <strong>@{entry.username}</strong> {entry.verified && <img src={verifiedImage} alt=\"Verificado\" style={{ width: '13px', height: '13px', verticalAlign: 'middle', marginBottom: '2px' }} />}\n                          </div>\n                          <div style={{ fontSize: '15px', marginRight: '5px' }}>\n                            {entry.result}\n                            <br />\n                            {entry.media !== null ? (\n                            <a className=\"media\" href={entry.media} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {entry.media}\n                            </a>\n                          ) : null}\n                          </div>\n                        </div>\n                      </div>\n                      <br></br>\n                      <div style={{ marginLeft: '75px', marginBottom: '5px' }}>\n                        <FaEye title=\"Impressions\" /> {entry.total_impressions} &nbsp;&nbsp;&nbsp;\n                        <FaHeart title=\"Likes\" /> {entry.total_likes} &nbsp;&nbsp;&nbsp;\n                        <FaRetweet title=\"Retweets\" /> {entry.total_retweets} &nbsp;&nbsp;&nbsp;\n                        <FaQuoteLeft title=\"Quotes\" /> {entry.total_quotes} &nbsp;&nbsp;&nbsp;\n                        <FaReply title=\"Replies\" /> {entry.total_replys} &nbsp;&nbsp;&nbsp;\n                        {entry.mentions > 1 ? <><FaUser title=\"Mentions\" /> {entry.mentions}</> : null}\n\n                        <div style={{ marginLeft: '10px', display: 'inline-flex', alignItems: 'center'}}>\n                          {entry.sentiment === \"Positive\" ? <p><FaRegSmileBeam style={{ color: \"#76CC9D\" }} /> Positive</p> : null}\n                          {entry.sentiment === \"Negative\" ? <p><FaRegFrown style={{ color: \"#F46161\" }} /> Negative</p>: null}\n                          {entry.sentiment === \"Neutral\" ? <p><FaRegMeh style={{ color: \"#FADB7C\" }} /> Neutral</p>: null}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <p>No data available for the selected filter.</p>\n )}\n       </div>\n       </div>\n            </div>\n            <div className=\"col-lg-2 col-md-3 col-sm-4\"  style={{ marginLeft:'5px', marginTop: '20px', alignItems:'center'}}>\n              <div className=\"wordcloud\">\n      <ReactWordcloud options={options} words={hashtagsArray} />\n      </div>\n        <Map />\n        \n        <div className=\"wordcloud\">\n      <ReactWordcloud options={options} words={keywordsArray} />\n      </div>\n      </div>\n\n\n    </div>\n</div>\n    </div>\n  );\n}\n"],"names":["Record","props","heatmapData","Object","entries","record","geographical","reduce","data","country","values","value","latitude","longitude","push","coordinates","MapContainer","className","center","zoomSnap","zoom","doubleClickZoom","attributionControl","maxBounds","TileLayer","url","noWrap","map","CircleMarker","radius","color","fillColor","fillOpacity","Popup","Map","topic","useParams","useState","records","setRecords","useEffect","fetch","response","ok","Error","statusText","json","matchingRecords","filter","r","window","alert","message","getRecords","length","Hashtags","selectedFilter","setSelectedFilter","setRecord","keywordsArray","setKeywordsArray","hashtagsArray","setHashtagsArray","matchingRecord","find","keywords","text","hashtags","sentimentCount","sentiment_count","engagementMetrics","engagement_metrics","sentimentPerc","sentiment_percentages","top_10_global","top_10_media","top_10_verified","top_10_question","filteredTop10","handleFilterChange","options","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","scale","spiral","transitionDuration","pieData","name","Positive","perc","Neutral","Negative","PieGraphic","activeIndex","setActiveIndex","PieChart","width","height","Pie","dataKey","cx","cy","innerRadius","outerRadius","paddingAngle","onMouseEnter","index","entry","Cell","fill","Tooltip","content","payload","style","marginTop","toFixed","active","wrapperStyle","backgroundColor","border","calculateKValue","kValue","chartData","setChartData","total_impressions","sqrtValue","Math","sqrt","total_likes","total_retweets","total_quotes","total_replys","CustomTooltip","label","coordinate","display","alignItems","justifyContent","textAlign","CustomBarLabel","x","y","textAnchor","flexDirection","total_tweets","ResponsiveContainer","BarChart","layout","barSize","margin","left","right","top","bottom","XAxis","type","hide","YAxis","Bar","LabelList","position","formatter","marginRight","marginBottom","onClick","borderRadius","src","profile_photo","alt","marginLeft","username","verified","verifiedImage","verticalAlign","fontSize","result","media","href","target","rel","title","mentions","sentiment","words"],"sourceRoot":""}