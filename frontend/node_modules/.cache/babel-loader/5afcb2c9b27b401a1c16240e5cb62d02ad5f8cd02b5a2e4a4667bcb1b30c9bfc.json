{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { Formik } from \"formik\";\nimport ob from \"object-path\";\nimport React, { Component } from \"react\";\nimport * as Yup from \"yup\";\nimport { handleCardinality } from \"../../../assets/functions/HandleCardinality/HandleCardinality\";\nimport { handleSectionValidation } from \"../../../assets/functions/HandleSectionValidation/handleSectionValidation\";\nimport { processItemSection } from \"../../../assets/functions/HandleSectionValidation/processItemSection\";\nimport { maxValueArray } from \"../../../assets/functions/Maximum/maxValueArray\";\nimport SectionsListEditMode from \"../../../components/SubForm/SectionsListEditMode\";\nimport SubForm from \"../../../components/SubForm/SubForm\";\nimport AddSectionContainer from \"../../../components/UI/AddSection/AddSectionContainer\";\nimport AddSectionButton from \"../../../components/UI/AddSectionButton/AddSectionButton\";\nimport BodyContainer from \"../../../components/UI/BodyContainer/BodyContainer\";\nimport CancelButton from \"../../../components/UI/CancelButton/CancelButton\";\nimport FormContainer from \"../../../components/UI/FormContainer/FormContainer\";\nimport FormHeader from \"../../../components/UI/FormHeader/FormHeader\";\nimport SaveButton from \"../../../components/UI/SaveButton/SaveButton\";\nimport SectionContainer from \"../../../components/UI/SectionContainer/SectionContainer\";\nimport SubmitButton from \"../../../components/UI/SubmitButton/SubmitButton\";\nimport { buildSectionInitialValue } from \"../FormInitialValues/BuildSectionInitialValue/BuildSectionInitialValue\";\nimport { buildSectionValidation } from \"../FormValidation/BuildSectionValidation/BuildSectionValidation\";\nimport CombinedContext from \"../../../contexts/CombinedContext\";\nimport ProviderCombinedContext from \"../../../contexts/ProviderCombinedContext\";\nimport * as buildDatatypeEditMode from \"../BuildItems/BuildItemEditMode/BuildItemEditMode/BuildItemEditMode\";\nimport axios from \"axios\";\nimport { getEnvUrl } from \"../../../environment\";\nclass FormEditComponent extends Component {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    _defineProperty(this, \"state\", {\n      isCollapsed: false,\n      checkValidation: false,\n      subForm: {\n        openSubForm: false,\n        sectionId: \"\",\n        type: \"\",\n        path: \"\",\n        jdt: \"\",\n        setFieldValue: \"\"\n      }\n    });\n    _defineProperty(this, \"handleCollapseSections\", () => {\n      // Atualizar o isCollapsed\n      this.setState(prevState => ({\n        ...prevState,\n        isCollapsed: !prevState.isCollapsed\n      }));\n      this.accordionsSectionContainerEdit.forEach(obj => {\n        const level = obj.id.split(\"-\").filter(x => x === \"items\").length; // Colapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          obj.accordionOpen = this.state.isCollapsed;\n        }\n      });\n      this.forceUpdate();\n    });\n    _defineProperty(this, \"handleAccordionSectionContainerMode\", path => {\n      this.accordionsSectionContainerEdit.forEach(function (obj) {\n        if (obj.id === path) {\n          let newMode = obj.accordionOpen;\n          obj.accordionOpen = !newMode;\n        }\n      }); // Ver se o formulário está collapsed\n\n      let breaked = false;\n      for (let i = 0; i < this.accordionsSectionContainerEdit.length; i++) {\n        const level = this.accordionsSectionContainerEdit[i].id.split(\"-\").filter(x => x === \"items\").length; // Collapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          if (this.accordionsSectionContainerEdit[i].accordionOpen) {\n            this.setState({\n              isCollapsed: false\n            });\n            breaked = true;\n            break;\n          }\n        }\n      }\n      if (!breaked) {\n        this.setState({\n          isCollapsed: true\n        });\n      }\n      this.forceUpdate();\n    });\n    _defineProperty(this, \"handleAddSection\", (pathArray, setFieldValue, setFieldTouched) => {\n      const section = this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0];\n      this.setState(prevState => ({\n        ...prevState,\n        subForm: {\n          ...prevState.subForm,\n          openSubForm: true,\n          jdt: section.jdt,\n          path: section.path,\n          type: \"new\",\n          sectionId: \"\",\n          setFieldValue: setFieldValue\n        }\n      }));\n      setFieldTouched(pathArray.join(\"-\"));\n    });\n    _defineProperty(this, \"handleCancelSubForm\", () => {\n      this.setState(prevState => ({\n        ...prevState,\n        subForm: {\n          ...prevState.subForm,\n          openSubForm: false,\n          jdt: \"\",\n          path: \"\",\n          type: \"\",\n          sectionId: \"\",\n          setFieldValue: \"\"\n        }\n      }));\n    });\n    _defineProperty(this, \"handleSubmitSubForm\", function (values, path, type, sectionId) {\n      let setFieldValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      _this.context.fields.updateValue(`${path}-value`);\n      if (type === \"new\") {\n        _this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            const occurrence = obj.occurrences;\n            const valuesSections = obj.values;\n            let maxId = 0;\n            valuesSections.forEach(function (val) {\n              if (val.id >= maxId) {\n                maxId = val.id;\n              }\n            });\n            obj.occurrences = occurrence + 1;\n            obj.values = [...valuesSections, {\n              id: maxId + 1,\n              values: values\n            }];\n            setFieldValue(path, occurrence + 1);\n          }\n        });\n      } else if (type === \"edit\") {\n        _this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            const valuesSections = obj.values.filter(section => section.id !== sectionId);\n            obj.values = [...valuesSections, {\n              id: sectionId,\n              values: values\n            }];\n          }\n        });\n      }\n      _this.handleCancelSubForm();\n    });\n    _defineProperty(this, \"handleRemoveSectionValue\", (sectionPath, id, setFieldValue) => {\n      this.context.fields.updateValue(`${sectionPath}-value`);\n      this.multipleSections.forEach(function (obj) {\n        if (obj.path === sectionPath) {\n          const occurrence = obj.occurrences;\n          const valuesSections = obj.values.filter(obj => obj.id !== id);\n          obj.occurrences = occurrence - 1;\n          obj.values = valuesSections;\n          setFieldValue(sectionPath, occurrence - 1);\n        }\n      });\n      this.forceUpdate();\n    });\n    _defineProperty(this, \"handleEditSectionValue\", (sectionPath, id) => {\n      const section = this.multipleSections.filter(obj => obj.path === sectionPath)[0];\n      const sectionValues = section.values.filter(obj => obj.id === id)[0].values;\n      let mergedJSON = JSON.parse(JSON.stringify(section.jdt));\n      Object.keys(sectionValues).forEach(function (label) {\n        const indexRemove = sectionPath.split(\"-\").length;\n        const jdtLabel = label.split(\".\").slice(indexRemove);\n        ob.set(mergedJSON, jdtLabel, sectionValues[label]);\n      });\n      this.setState(prevState => ({\n        ...prevState,\n        subForm: {\n          ...prevState.subForm,\n          openSubForm: true,\n          jdt: mergedJSON,\n          path: section.path,\n          type: \"edit\",\n          sectionId: id\n        }\n      }));\n    });\n    _defineProperty(this, \"buildSingleItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\n      const itemSection = processItemSection(pathArray, isAny, sectionNotMandatoryObject);\n      return buildDatatypeEditMode.buildItemEditMode(item.dataType, item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, this.initialValuesEdit, this.validationSchemaEdit, itemSection, this.multipleSections, this.props.professionalTasks, this.context.order, this.context.datatypes.datatypes[pathArray.join(\".\")], this.props.template.templateRules, this.props.idJDT, this.props.idComposition, this.props.userInfo);\n    });\n    _defineProperty(this, \"buildInitialValueSection\", (occurrences, pathLabel) => {\n      buildSectionInitialValue(occurrences, pathLabel, this.initialValuesEdit);\n    });\n    _defineProperty(this, \"buildValidationSection\", (minOccurrences, pathLabel) => {\n      buildSectionValidation(minOccurrences, pathLabel, this.validationSchemaEdit);\n    });\n    _defineProperty(this, \"sectionConstructor\", (item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\n      let path = pathArray.join(\"-\");\n      if (buildAccordion && this.accordionsSectionContainerEdit.filter(obj => obj.id === path).length === 0) {\n        let sections = this.accordionsSectionContainerEdit;\n        sections.push({\n          id: path,\n          accordionOpen: true\n        });\n        this.accordionsSectionContainerEdit = sections;\n      } // A cardinalidade só é processada se for um campo que não pode ser repetido => depois será validado no seu respetivo subForm\n\n      if (item.occurrences.upperOccurrences === 1 && item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences > 0) {\n        cardinalityObject[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, item.cardinality.interval.lowerOccurrences];\n      }\n      sectionNotMandatoryObject[path] = [...handleSectionValidation(item, pathArray, this.props.professionalTasks), item.node.text, item.occurrences.lowerOccurrences]; // Só processo a validação da secção se for um campo que não pode ser repetido (depois será validado no seu respetivo subForm)\n      // e se tiver upperOccurrences diferente de 0\n\n      if (item.occurrences.lowerOccurrences !== 0 && item.occurrences.upperOccurrences === 1) {\n        // Por defeito, queremos que pelo menos um campo esteja preenchido => logo tenho 1\n        sectionValidation[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, 1];\n      }\n    });\n    _defineProperty(this, \"buildSectionEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion) => {\n      const path = pathArray.join(\"-\");\n      const section = pathArray.filter(x => x === \"items\").length;\n      if (item.occurrences.upperOccurrences !== 1) {\n        if (this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\")).length === 0) {\n          let sections = this.multipleSections;\n          let vals = [];\n          let occs = 0;\n          if (item.value) {\n            if (item.value.length > 0) {\n              vals = item.value;\n              occs = item.value.length;\n            }\n          }\n          sections.push({\n            path: pathArray.join(\"-\"),\n            jdt: item,\n            occurrences: occs,\n            minOccurrences: item.occurrences.lowerOccurrences,\n            values: vals\n          });\n          this.multipleSections = sections;\n          this.buildInitialValueSection(occs, pathArray.join(\"-\"));\n          this.buildValidationSection(item.occurrences.lowerOccurrences, pathArray.join(\"-\"));\n        }\n        return /*#__PURE__*/React.createElement(SectionContainer, {\n          item: item,\n          values: values,\n          subForm: false,\n          sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\n          isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n          idJDT: this.props.idJDT,\n          templateRules: this.props.template.templateRules,\n          isMandatory: item.occurrences.lowerOccurrences !== 0,\n          order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\n          hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\n          handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\n          path: item.itemPath,\n          pathArray: pathArray,\n          accordionOpen: this.accordionsSectionContainerEdit,\n          description: item.node === null ? \"\" : item.node.description,\n          key: itemIndex,\n          label: item.node.text,\n          professionalTasks: this.props.professionalTasks\n        }, /*#__PURE__*/React.createElement(AddSectionButton, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          handleAddSection: () => this.handleAddSection(pathArray, setFieldValue, setFieldTouched),\n          disabled: item.occurrences.upperOccurrences === \"*\" ? false : this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0].occurrences >= item.occurrences.upperOccurrences\n        }), /*#__PURE__*/React.createElement(SectionsListEditMode, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          onEditSection: (sectionPath, id) => this.handleEditSectionValue(sectionPath, id),\n          onRemoveSection: (sectionPath, id) => this.handleRemoveSectionValue(sectionPath, id, setFieldValue),\n          sections: this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0]\n        }));\n      }\n      return /*#__PURE__*/React.createElement(SectionContainer, {\n        idJDT: this.props.idJDT,\n        item: item,\n        values: values,\n        section: section,\n        sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\n        subForm: false,\n        isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n        isMandatory: item.occurrences.lowerOccurrences !== 0,\n        templateRules: this.props.template.templateRules,\n        order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\n        hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\n        cardinality: item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences,\n        handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\n        path: item.itemPath,\n        pathArray: pathArray,\n        accordionOpen: this.accordionsSectionContainerEdit,\n        description: item.node === null ? \"\" : item.node.description,\n        key: itemIndex,\n        label: item.node.text,\n        professionalTasks: this.props.professionalTasks\n      }, item.items.map((subItem, subItemIndex) => {\n        let array = [];\n        array.push(\"items\", subItemIndex);\n        return this.buildItemEditMode(subItem, subItemIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n      }), this.props.formRM && this.props.formRM.length > 0 && this.props.formRM.flatMap((rm_item, rm_index) => {\n        if (item.itemPath === rm_item.parentPath) {\n          return this.buildItemEditMode(rm_item, rm_index, [\"rm\"].concat(rm_item.itemPath.split(\".\")), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n        } else {\n          return [];\n        }\n      }), Object.keys(this.context.sectionArchetype.sectionArchetype).filter(x => this.context.sectionArchetype.sectionArchetype[x].parentPath === pathArray.join(\".\")).map(x => {\n        return /*#__PURE__*/React.createElement(AddSectionContainer, {\n          key: x,\n          path: x,\n          order: this.context.order ? this.context.order[x] : null,\n          label: this.context.sectionArchetype.sectionArchetype[x].sectionName\n        });\n      }));\n    });\n    _defineProperty(this, \"buildItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, buildAccordion, sectionNotMandatoryObject, sectionValidation) => {\n      if (item.data_type === \"Title\") {\n        return this.buildSectionEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion);\n      } else {\n        if (Array.isArray(item)) {\n          return item.map((itemAny, itemAnyIndex) => {\n            let array = [];\n            array.push(itemAnyIndex);\n            return this.buildSingleItemEditMode(itemAny, itemAnyIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, true, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n          });\n        } else {\n          return this.buildSingleItemEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, false, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n        }\n      }\n    });\n    this.multipleSections = []; // controlar as secções que podem ser multiplicadas\n\n    this.accordionsSectionContainerEdit = []; // controlar o accordionMode\n\n    this.initialValuesEdit = {}; // initialValues do formulário\n\n    this.validationSchemaEdit = {}; // validationSchema do formulário\n  }\n\n  render() {\n    const form = /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.initialValuesEdit,\n      validationSchema: this.props.buttonClickType !== \"save\" && Yup.object().shape(this.validationSchemaEdit),\n      validateOnMount: this.props.buttonClickType !== \"save\" && true,\n      onSubmit: async values => {\n        let valuesToSend = {\n          ...values\n        }; // ver se existem ficheiros multimedia carregados\n        // em caso afirmativo, chamar o serviço do Eng. Bruno para cada entrada do array - sem o ID da composition nem do ficheiro\n\n        let files = this.props.multimediaFields; // array de objetos c/ o path + o file em base 64\n\n        let count1 = 0; // criar um array de objetos c/ os paths e os índices a remover no fim do processo\n\n        let indexFiles = [];\n        if (files.length > 0) {\n          for (let file of files) {\n            let count2 = 0;\n            let path = Object.keys(file)[0].concat(\".value\").split(\".\").join(\"-\");\n            let pathValue = values[path];\n            for (let f of pathValue) {\n              if (count1 === count2) {\n                let res = await axios({\n                  method: \"post\",\n                  url: `${getEnvUrl('aidaauth', '4000')}/saveMultimedia`,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: \"Bearer \" + this.context.token\n                  },\n                  data: {\n                    file: file,\n                    formTitle: this.props.formTitle,\n                    patientData: this.props.patientData,\n                    userInfo: this.props.userInfo,\n                    values: values,\n                    estado: \"1\"\n                  }\n                }); // DEVIDO À FIREWALL FOI NECESSÁRIO MIGRAR AS CHAMADAS PARA UM SERVIÇO FORA DA APP\n                // let uri = await saveMultimediaFiles(file, this.props.formTitle, this.props.patientData, this.props.userInfo, values);\n\n                if (res.data.success) {\n                  let uri = res.data.fileData;\n                  f['URI'] = uri;\n                } //caso dê erro remover a info do ficheiro e remover o ficheiro\n                else {\n                  let obj = {};\n                  obj[path] = count2;\n                  indexFiles.push(obj);\n                }\n              }\n              count2 += 1;\n            }\n            count1 += 1;\n            valuesToSend = {\n              ...values,\n              pathValue\n            };\n          } //no fim de fazer todas as chamadas ao serviço, caso existam índices a remover\n\n          indexFiles.length > 0 && indexFiles.forEach(item => {\n            let pathOfFileToRemove = Object.keys(item)[0];\n            let pathValueOfFileToRemove = valuesToSend[pathOfFileToRemove];\n            pathValueOfFileToRemove.splice(item[pathOfFileToRemove], 1);\n          });\n        }\n        this.props.handleSubmit(valuesToSend, this.multipleSections);\n      }\n    }, _ref => {\n      let {\n        values,\n        handleSubmit,\n        setFieldValue,\n        errors,\n        touched,\n        setFieldTouched\n      } = _ref;\n      return /*#__PURE__*/React.createElement(FormContainer, {\n        formTitle: this.props.formTitle,\n        description: this.props.template.node.description\n      }, /*#__PURE__*/React.createElement(FormHeader, {\n        accordions: this.accordionsSectionContainerEdit,\n        collapseSections: () => this.handleCollapseSections(),\n        isCollapsed: this.state.isCollapsed,\n        showPrint: this.props.showPrint,\n        showInformacaoComplementar: this.props.showInformacaoComplementar,\n        showHeader: this.props.showHeader,\n        professionalTasks: this.props.professionalTasks,\n        template: this.props.template,\n        fields: this.context.formData.referenceModel\n      }), /*#__PURE__*/React.createElement(BodyContainer, null, this.props.template.items.map((attribute, index) => {\n        return attribute.map((att, attIndex) => {\n          let array = [];\n          array.push(\"items\", index, attIndex);\n          return this.buildItemEditMode(att, attIndex, array, setFieldValue, values, errors, touched, setFieldTouched, {}, true, {}, {});\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          order: this.context.order ? maxValueArray(Object.values(this.context.order)) + 1 : null\n        },\n        className: \"flex flex-row\"\n      }, this.props.canSave && /*#__PURE__*/React.createElement(SaveButton, {\n        canSubmit: this.props.canSubmit,\n        label: \"Gravar\",\n        disabled: this.props.saveButtonDisabled === true,\n        clicked: () => {\n          this.props.handleButtonClicked(\"save\");\n          this.setState(prevState => ({\n            ...prevState,\n            checkValidation: !prevState.checkValidation\n          }), () => {\n            //this.props.handleButtonClicked(\"save\");\n            handleSubmit();\n          });\n        }\n      }), this.props.canSubmit && /*#__PURE__*/React.createElement(SubmitButton, {\n        label: \"Submeter\",\n        disabled: this.props.submitButtonDisabled === true ? true : !this.context.dlm.isDlmFinished,\n        clicked: () => this.setState(prevState => ({\n          ...prevState,\n          checkValidation: !prevState.checkValidation\n        }), () => {\n          this.props.handleButtonClicked(\"submit\");\n          handleSubmit();\n        })\n      }), this.props.canCancel && /*#__PURE__*/React.createElement(CancelButton, {\n        clicked: this.props.handleCancelForm\n      })));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", null, this.state.subForm.openSubForm && /*#__PURE__*/React.createElement(SubForm, {\n      level: this.state.subForm.path.split(\"-\").filter(x => x === \"items\").length,\n      template: this.props.template,\n      professionalTasks: this.props.professionalTasks,\n      idJDT: this.props.idJDT,\n      templateRules: this.props.template.templateRules,\n      editMode: true,\n      path: this.state.subForm.path,\n      onSubmitSubForm: values => this.handleSubmitSubForm(values, this.state.subForm.path, this.state.subForm.type, this.state.subForm.sectionId, this.state.subForm.setFieldValue),\n      onCancel: () => this.handleCancelSubForm(),\n      jdt: this.state.subForm.jdt\n    }), form);\n  }\n}\n_defineProperty(FormEditComponent, \"contextType\", CombinedContext);\nconst FormEditMode = props => {\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(FormEditComponent, props));\n};\nexport default FormEditMode;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Formik","ob","React","Component","Yup","handleCardinality","handleSectionValidation","processItemSection","maxValueArray","SectionsListEditMode","SubForm","AddSectionContainer","AddSectionButton","BodyContainer","CancelButton","FormContainer","FormHeader","SaveButton","SectionContainer","SubmitButton","buildSectionInitialValue","buildSectionValidation","CombinedContext","ProviderCombinedContext","buildDatatypeEditMode","axios","getEnvUrl","FormEditComponent","constructor","isCollapsed","checkValidation","subForm","openSubForm","sectionId","type","path","jdt","setFieldValue","setState","prevState","accordionsSectionContainerEdit","forEach","level","id","split","filter","x","length","accordionOpen","state","forceUpdate","newMode","breaked","i","pathArray","setFieldTouched","section","multipleSections","join","values","context","fields","updateValue","occurrence","occurrences","valuesSections","maxId","val","handleCancelSubForm","sectionPath","sectionValues","mergedJSON","JSON","parse","stringify","keys","label","indexRemove","jdtLabel","slice","set","item","itemIndex","errors","touched","isAny","cardinalityObject","sectionNotMandatoryObject","sectionValidation","itemSection","buildItemEditMode","dataType","initialValuesEdit","validationSchemaEdit","props","professionalTasks","order","datatypes","template","templateRules","idJDT","idComposition","userInfo","pathLabel","minOccurrences","buildAccordion","sections","push","upperOccurrences","cardinality","undefined","interval","lowerOccurrences","node","text","vals","occs","buildInitialValueSection","buildValidationSection","createElement","sectionConstructor","isTitleVisible","showSectionTitle","isMandatory","hsize","sizes","handleAccordionMode","handleAccordionSectionContainerMode","itemPath","description","error","handleAddSection","disabled","onEditSection","handleEditSectionValue","onRemoveSection","handleRemoveSectionValue","items","map","subItem","subItemIndex","array","concat","formRM","flatMap","rm_item","rm_index","parentPath","sectionArchetype","sectionName","data_type","buildSectionEditMode","Array","isArray","itemAny","itemAnyIndex","buildSingleItemEditMode","render","form","initialValues","validationSchema","buttonClickType","object","shape","validateOnMount","onSubmit","valuesToSend","files","multimediaFields","count1","indexFiles","file","count2","pathValue","f","res","method","url","headers","Authorization","token","data","formTitle","patientData","estado","success","uri","fileData","pathOfFileToRemove","pathValueOfFileToRemove","splice","handleSubmit","accordions","collapseSections","handleCollapseSections","showPrint","showInformacaoComplementar","showHeader","formData","referenceModel","attribute","index","att","attIndex","style","className","canSave","canSubmit","saveButtonDisabled","clicked","handleButtonClicked","submitButtonDisabled","dlm","isDlmFinished","canCancel","handleCancelForm","editMode","onSubmitSubForm","handleSubmitSubForm","onCancel","FormEditMode"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/FormModes/FormEditMode.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Formik } from \"formik\";\nimport ob from \"object-path\";\nimport React, { Component } from \"react\";\nimport * as Yup from \"yup\";\nimport { handleCardinality } from \"../../../assets/functions/HandleCardinality/HandleCardinality\";\nimport { handleSectionValidation } from \"../../../assets/functions/HandleSectionValidation/handleSectionValidation\";\nimport { processItemSection } from \"../../../assets/functions/HandleSectionValidation/processItemSection\";\nimport { maxValueArray } from \"../../../assets/functions/Maximum/maxValueArray\";\nimport SectionsListEditMode from \"../../../components/SubForm/SectionsListEditMode\";\nimport SubForm from \"../../../components/SubForm/SubForm\";\nimport AddSectionContainer from \"../../../components/UI/AddSection/AddSectionContainer\";\nimport AddSectionButton from \"../../../components/UI/AddSectionButton/AddSectionButton\";\nimport BodyContainer from \"../../../components/UI/BodyContainer/BodyContainer\";\nimport CancelButton from \"../../../components/UI/CancelButton/CancelButton\";\nimport FormContainer from \"../../../components/UI/FormContainer/FormContainer\";\nimport FormHeader from \"../../../components/UI/FormHeader/FormHeader\";\nimport SaveButton from \"../../../components/UI/SaveButton/SaveButton\";\nimport SectionContainer from \"../../../components/UI/SectionContainer/SectionContainer\";\nimport SubmitButton from \"../../../components/UI/SubmitButton/SubmitButton\";\nimport { buildSectionInitialValue } from \"../FormInitialValues/BuildSectionInitialValue/BuildSectionInitialValue\";\nimport { buildSectionValidation } from \"../FormValidation/BuildSectionValidation/BuildSectionValidation\";\nimport CombinedContext from \"../../../contexts/CombinedContext\";\nimport ProviderCombinedContext from \"../../../contexts/ProviderCombinedContext\";\nimport * as buildDatatypeEditMode from \"../BuildItems/BuildItemEditMode/BuildItemEditMode/BuildItemEditMode\";\nimport axios from \"axios\";\nimport { getEnvUrl } from \"../../../environment\";\n\nclass FormEditComponent extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      isCollapsed: false,\n      checkValidation: false,\n      subForm: {\n        openSubForm: false,\n        sectionId: \"\",\n        type: \"\",\n        path: \"\",\n        jdt: \"\",\n        setFieldValue: \"\"\n      }\n    });\n\n    _defineProperty(this, \"handleCollapseSections\", () => {\n      // Atualizar o isCollapsed\n      this.setState(prevState => ({ ...prevState,\n        isCollapsed: !prevState.isCollapsed\n      }));\n      this.accordionsSectionContainerEdit.forEach(obj => {\n        const level = obj.id.split(\"-\").filter(x => x === \"items\").length; // Colapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          obj.accordionOpen = this.state.isCollapsed;\n        }\n      });\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"handleAccordionSectionContainerMode\", path => {\n      this.accordionsSectionContainerEdit.forEach(function (obj) {\n        if (obj.id === path) {\n          let newMode = obj.accordionOpen;\n          obj.accordionOpen = !newMode;\n        }\n      }); // Ver se o formulário está collapsed\n\n      let breaked = false;\n\n      for (let i = 0; i < this.accordionsSectionContainerEdit.length; i++) {\n        const level = this.accordionsSectionContainerEdit[i].id.split(\"-\").filter(x => x === \"items\").length; // Collapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          if (this.accordionsSectionContainerEdit[i].accordionOpen) {\n            this.setState({\n              isCollapsed: false\n            });\n            breaked = true;\n            break;\n          }\n        }\n      }\n\n      if (!breaked) {\n        this.setState({\n          isCollapsed: true\n        });\n      }\n\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"handleAddSection\", (pathArray, setFieldValue, setFieldTouched) => {\n      const section = this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0];\n      this.setState(prevState => ({ ...prevState,\n        subForm: { ...prevState.subForm,\n          openSubForm: true,\n          jdt: section.jdt,\n          path: section.path,\n          type: \"new\",\n          sectionId: \"\",\n          setFieldValue: setFieldValue\n        }\n      }));\n      setFieldTouched(pathArray.join(\"-\"));\n    });\n\n    _defineProperty(this, \"handleCancelSubForm\", () => {\n      this.setState(prevState => ({ ...prevState,\n        subForm: { ...prevState.subForm,\n          openSubForm: false,\n          jdt: \"\",\n          path: \"\",\n          type: \"\",\n          sectionId: \"\",\n          setFieldValue: \"\"\n        }\n      }));\n    });\n\n    _defineProperty(this, \"handleSubmitSubForm\", (values, path, type, sectionId, setFieldValue = null) => {\n      this.context.fields.updateValue(`${path}-value`);\n\n      if (type === \"new\") {\n        this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            const occurrence = obj.occurrences;\n            const valuesSections = obj.values;\n            let maxId = 0;\n            valuesSections.forEach(function (val) {\n              if (val.id >= maxId) {\n                maxId = val.id;\n              }\n            });\n            obj.occurrences = occurrence + 1;\n            obj.values = [...valuesSections, {\n              id: maxId + 1,\n              values: values\n            }];\n            setFieldValue(path, occurrence + 1);\n          }\n        });\n      } else if (type === \"edit\") {\n        this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            const valuesSections = obj.values.filter(section => section.id !== sectionId);\n            obj.values = [...valuesSections, {\n              id: sectionId,\n              values: values\n            }];\n          }\n        });\n      }\n\n      this.handleCancelSubForm();\n    });\n\n    _defineProperty(this, \"handleRemoveSectionValue\", (sectionPath, id, setFieldValue) => {\n      this.context.fields.updateValue(`${sectionPath}-value`);\n      this.multipleSections.forEach(function (obj) {\n        if (obj.path === sectionPath) {\n          const occurrence = obj.occurrences;\n          const valuesSections = obj.values.filter(obj => obj.id !== id);\n          obj.occurrences = occurrence - 1;\n          obj.values = valuesSections;\n          setFieldValue(sectionPath, occurrence - 1);\n        }\n      });\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"handleEditSectionValue\", (sectionPath, id) => {\n      const section = this.multipleSections.filter(obj => obj.path === sectionPath)[0];\n      const sectionValues = section.values.filter(obj => obj.id === id)[0].values;\n      let mergedJSON = JSON.parse(JSON.stringify(section.jdt));\n      Object.keys(sectionValues).forEach(function (label) {\n        const indexRemove = sectionPath.split(\"-\").length;\n        const jdtLabel = label.split(\".\").slice(indexRemove);\n        ob.set(mergedJSON, jdtLabel, sectionValues[label]);\n      });\n      this.setState(prevState => ({ ...prevState,\n        subForm: { ...prevState.subForm,\n          openSubForm: true,\n          jdt: mergedJSON,\n          path: section.path,\n          type: \"edit\",\n          sectionId: id\n        }\n      }));\n    });\n\n    _defineProperty(this, \"buildSingleItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\n      const itemSection = processItemSection(pathArray, isAny, sectionNotMandatoryObject);\n      return buildDatatypeEditMode.buildItemEditMode(item.dataType, item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, this.initialValuesEdit, this.validationSchemaEdit, itemSection, this.multipleSections, this.props.professionalTasks, this.context.order, this.context.datatypes.datatypes[pathArray.join(\".\")], this.props.template.templateRules, this.props.idJDT, this.props.idComposition, this.props.userInfo);\n    });\n\n    _defineProperty(this, \"buildInitialValueSection\", (occurrences, pathLabel) => {\n      buildSectionInitialValue(occurrences, pathLabel, this.initialValuesEdit);\n    });\n\n    _defineProperty(this, \"buildValidationSection\", (minOccurrences, pathLabel) => {\n      buildSectionValidation(minOccurrences, pathLabel, this.validationSchemaEdit);\n    });\n\n    _defineProperty(this, \"sectionConstructor\", (item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\n      let path = pathArray.join(\"-\");\n\n      if (buildAccordion && this.accordionsSectionContainerEdit.filter(obj => obj.id === path).length === 0) {\n        let sections = this.accordionsSectionContainerEdit;\n        sections.push({\n          id: path,\n          accordionOpen: true\n        });\n        this.accordionsSectionContainerEdit = sections;\n      } // A cardinalidade só é processada se for um campo que não pode ser repetido => depois será validado no seu respetivo subForm\n\n\n      if (item.occurrences.upperOccurrences === 1 && item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences > 0) {\n        cardinalityObject[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, item.cardinality.interval.lowerOccurrences];\n      }\n\n      sectionNotMandatoryObject[path] = [...handleSectionValidation(item, pathArray, this.props.professionalTasks), item.node.text, item.occurrences.lowerOccurrences]; // Só processo a validação da secção se for um campo que não pode ser repetido (depois será validado no seu respetivo subForm)\n      // e se tiver upperOccurrences diferente de 0\n\n      if (item.occurrences.lowerOccurrences !== 0 && item.occurrences.upperOccurrences === 1) {\n        // Por defeito, queremos que pelo menos um campo esteja preenchido => logo tenho 1\n        sectionValidation[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, 1];\n      }\n    });\n\n    _defineProperty(this, \"buildSectionEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion) => {\n      const path = pathArray.join(\"-\");\n      const section = pathArray.filter(x => x === \"items\").length;\n\n      if (item.occurrences.upperOccurrences !== 1) {\n        if (this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\")).length === 0) {\n          let sections = this.multipleSections;\n          let vals = [];\n          let occs = 0;\n\n          if (item.value) {\n            if (item.value.length > 0) {\n              vals = item.value;\n              occs = item.value.length;\n            }\n          }\n\n          sections.push({\n            path: pathArray.join(\"-\"),\n            jdt: item,\n            occurrences: occs,\n            minOccurrences: item.occurrences.lowerOccurrences,\n            values: vals\n          });\n          this.multipleSections = sections;\n          this.buildInitialValueSection(occs, pathArray.join(\"-\"));\n          this.buildValidationSection(item.occurrences.lowerOccurrences, pathArray.join(\"-\"));\n        }\n\n        return /*#__PURE__*/React.createElement(SectionContainer, {\n          item: item,\n          values: values,\n          subForm: false,\n          sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\n          isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n          idJDT: this.props.idJDT,\n          templateRules: this.props.template.templateRules,\n          isMandatory: item.occurrences.lowerOccurrences !== 0,\n          order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\n          hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\n          handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\n          path: item.itemPath,\n          pathArray: pathArray,\n          accordionOpen: this.accordionsSectionContainerEdit,\n          description: item.node === null ? \"\" : item.node.description,\n          key: itemIndex,\n          label: item.node.text,\n          professionalTasks: this.props.professionalTasks\n        }, /*#__PURE__*/React.createElement(AddSectionButton, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          handleAddSection: () => this.handleAddSection(pathArray, setFieldValue, setFieldTouched),\n          disabled: item.occurrences.upperOccurrences === \"*\" ? false : this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0].occurrences >= item.occurrences.upperOccurrences\n        }), /*#__PURE__*/React.createElement(SectionsListEditMode, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          onEditSection: (sectionPath, id) => this.handleEditSectionValue(sectionPath, id),\n          onRemoveSection: (sectionPath, id) => this.handleRemoveSectionValue(sectionPath, id, setFieldValue),\n          sections: this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0]\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(SectionContainer, {\n        idJDT: this.props.idJDT,\n        item: item,\n        values: values,\n        section: section,\n        sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\n        subForm: false,\n        isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n        isMandatory: item.occurrences.lowerOccurrences !== 0,\n        templateRules: this.props.template.templateRules,\n        order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\n        hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\n        cardinality: item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences,\n        handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\n        path: item.itemPath,\n        pathArray: pathArray,\n        accordionOpen: this.accordionsSectionContainerEdit,\n        description: item.node === null ? \"\" : item.node.description,\n        key: itemIndex,\n        label: item.node.text,\n        professionalTasks: this.props.professionalTasks\n      }, item.items.map((subItem, subItemIndex) => {\n        let array = [];\n        array.push(\"items\", subItemIndex);\n        return this.buildItemEditMode(subItem, subItemIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n      }), this.props.formRM && this.props.formRM.length > 0 && this.props.formRM.flatMap((rm_item, rm_index) => {\n        if (item.itemPath === rm_item.parentPath) {\n          return this.buildItemEditMode(rm_item, rm_index, [\"rm\"].concat(rm_item.itemPath.split(\".\")), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n        } else {\n          return [];\n        }\n      }), Object.keys(this.context.sectionArchetype.sectionArchetype).filter(x => this.context.sectionArchetype.sectionArchetype[x].parentPath === pathArray.join(\".\")).map(x => {\n        return /*#__PURE__*/React.createElement(AddSectionContainer, {\n          key: x,\n          path: x,\n          order: this.context.order ? this.context.order[x] : null,\n          label: this.context.sectionArchetype.sectionArchetype[x].sectionName\n        });\n      }));\n    });\n\n    _defineProperty(this, \"buildItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, buildAccordion, sectionNotMandatoryObject, sectionValidation) => {\n      if (item.data_type === \"Title\") {\n        return this.buildSectionEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion);\n      } else {\n        if (Array.isArray(item)) {\n          return item.map((itemAny, itemAnyIndex) => {\n            let array = [];\n            array.push(itemAnyIndex);\n            return this.buildSingleItemEditMode(itemAny, itemAnyIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, true, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n          });\n        } else {\n          return this.buildSingleItemEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, false, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n        }\n      }\n    });\n\n    this.multipleSections = []; // controlar as secções que podem ser multiplicadas\n\n    this.accordionsSectionContainerEdit = []; // controlar o accordionMode\n\n    this.initialValuesEdit = {}; // initialValues do formulário\n\n    this.validationSchemaEdit = {}; // validationSchema do formulário\n  }\n\n  render() {\n    const form = /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.initialValuesEdit,\n      validationSchema: this.props.buttonClickType !== \"save\" && Yup.object().shape(this.validationSchemaEdit),\n      validateOnMount: this.props.buttonClickType !== \"save\" && true,\n      onSubmit: async values => {\n        let valuesToSend = { ...values\n        }; // ver se existem ficheiros multimedia carregados\n        // em caso afirmativo, chamar o serviço do Eng. Bruno para cada entrada do array - sem o ID da composition nem do ficheiro\n\n        let files = this.props.multimediaFields; // array de objetos c/ o path + o file em base 64\n\n        let count1 = 0; // criar um array de objetos c/ os paths e os índices a remover no fim do processo\n\n        let indexFiles = [];\n\n        if (files.length > 0) {\n          for (let file of files) {\n            let count2 = 0;\n            let path = Object.keys(file)[0].concat(\".value\").split(\".\").join(\"-\");\n            let pathValue = values[path];\n\n            for (let f of pathValue) {\n              if (count1 === count2) {\n                let res = await axios({\n                  method: \"post\",\n                  url: `${getEnvUrl('aidaauth', '4000')}/saveMultimedia`,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: \"Bearer \" + this.context.token\n                  },\n                  data: {\n                    file: file,\n                    formTitle: this.props.formTitle,\n                    patientData: this.props.patientData,\n                    userInfo: this.props.userInfo,\n                    values: values,\n                    estado: \"1\"\n                  }\n                }); // DEVIDO À FIREWALL FOI NECESSÁRIO MIGRAR AS CHAMADAS PARA UM SERVIÇO FORA DA APP\n                // let uri = await saveMultimediaFiles(file, this.props.formTitle, this.props.patientData, this.props.userInfo, values);\n\n                if (res.data.success) {\n                  let uri = res.data.fileData;\n                  f['URI'] = uri;\n                } //caso dê erro remover a info do ficheiro e remover o ficheiro\n                else {\n                    let obj = {};\n                    obj[path] = count2;\n                    indexFiles.push(obj);\n                  }\n              }\n\n              count2 += 1;\n            }\n\n            count1 += 1;\n            valuesToSend = { ...values,\n              pathValue\n            };\n          } //no fim de fazer todas as chamadas ao serviço, caso existam índices a remover\n\n\n          indexFiles.length > 0 && indexFiles.forEach(item => {\n            let pathOfFileToRemove = Object.keys(item)[0];\n            let pathValueOfFileToRemove = valuesToSend[pathOfFileToRemove];\n            pathValueOfFileToRemove.splice(item[pathOfFileToRemove], 1);\n          });\n        }\n\n        this.props.handleSubmit(valuesToSend, this.multipleSections);\n      }\n    }, ({\n      values,\n      handleSubmit,\n      setFieldValue,\n      errors,\n      touched,\n      setFieldTouched\n    }) => /*#__PURE__*/React.createElement(FormContainer, {\n      formTitle: this.props.formTitle,\n      description: this.props.template.node.description\n    }, /*#__PURE__*/React.createElement(FormHeader, {\n      accordions: this.accordionsSectionContainerEdit,\n      collapseSections: () => this.handleCollapseSections(),\n      isCollapsed: this.state.isCollapsed,\n      showPrint: this.props.showPrint,\n      showInformacaoComplementar: this.props.showInformacaoComplementar,\n      showHeader: this.props.showHeader,\n      professionalTasks: this.props.professionalTasks,\n      template: this.props.template,\n      fields: this.context.formData.referenceModel\n    }), /*#__PURE__*/React.createElement(BodyContainer, null, this.props.template.items.map((attribute, index) => {\n      return attribute.map((att, attIndex) => {\n        let array = [];\n        array.push(\"items\", index, attIndex);\n        return this.buildItemEditMode(att, attIndex, array, setFieldValue, values, errors, touched, setFieldTouched, {}, true, {}, {});\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        order: this.context.order ? maxValueArray(Object.values(this.context.order)) + 1 : null\n      },\n      className: \"flex flex-row\"\n    }, this.props.canSave && /*#__PURE__*/React.createElement(SaveButton, {\n      canSubmit: this.props.canSubmit,\n      label: \"Gravar\",\n      disabled: this.props.saveButtonDisabled === true,\n      clicked: () => {\n        this.props.handleButtonClicked(\"save\");\n        this.setState(prevState => ({ ...prevState,\n          checkValidation: !prevState.checkValidation\n        }), () => {\n          //this.props.handleButtonClicked(\"save\");\n          handleSubmit();\n        });\n      }\n    }), this.props.canSubmit && /*#__PURE__*/React.createElement(SubmitButton, {\n      label: \"Submeter\",\n      disabled: this.props.submitButtonDisabled === true ? true : !this.context.dlm.isDlmFinished,\n      clicked: () => this.setState(prevState => ({ ...prevState,\n        checkValidation: !prevState.checkValidation\n      }), () => {\n        this.props.handleButtonClicked(\"submit\");\n        handleSubmit();\n      })\n    }), this.props.canCancel && /*#__PURE__*/React.createElement(CancelButton, {\n      clicked: this.props.handleCancelForm\n    }))));\n    return /*#__PURE__*/React.createElement(\"div\", null, this.state.subForm.openSubForm && /*#__PURE__*/React.createElement(SubForm, {\n      level: this.state.subForm.path.split(\"-\").filter(x => x === \"items\").length,\n      template: this.props.template,\n      professionalTasks: this.props.professionalTasks,\n      idJDT: this.props.idJDT,\n      templateRules: this.props.template.templateRules,\n      editMode: true,\n      path: this.state.subForm.path,\n      onSubmitSubForm: values => this.handleSubmitSubForm(values, this.state.subForm.path, this.state.subForm.type, this.state.subForm.sectionId, this.state.subForm.setFieldValue),\n      onCancel: () => this.handleCancelSubForm(),\n      jdt: this.state.subForm.jdt\n    }), form);\n  }\n\n}\n\n_defineProperty(FormEditComponent, \"contextType\", CombinedContext);\n\nconst FormEditMode = props => {\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(FormEditComponent, props));\n};\n\nexport default FormEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}