{"ast":null,"code":"import React, { useContext } from \"react\";\nimport CountRange from \"../../../../../components/Datatypes/CountRange/CountRange\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\nconst BuildCountRangeEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order) => {\n  const context = useContext(CombinedContext);\n  let isVisible;\n  if (!item.TaskVisible) {\n    isVisible = false;\n  } else {\n    isVisible = handleIsVisible(item, professionalTasks);\n  }\n  let isEditable;\n  if (!item.TaskEditable) {\n    isEditable = false;\n  } else {\n    isEditable = handleIsEditable(item, professionalTasks);\n  }\n  const isRM = pathArray[0] === \"rm\";\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\n  if (isVisible || item.value.start !== null && item.value.end !== null) {\n    const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n    let arrayStart = [];\n    let arrayEnd = [];\n    arrayStart.push(\"value\", \"start\");\n    arrayEnd.push(\"value\", \"end\");\n    const pathLabelStart = pathArray.concat(arrayStart).join(\"-\");\n    const pathLabelEnd = pathArray.concat(arrayEnd).join(\"-\");\n    buildInitialValueEditMode(item, pathLabelStart, initialValues);\n    buildInitialValueEditMode(item, pathLabelEnd, initialValues);\n    let ruleVisibility;\n    if (!item.ruleVisibility) {\n      ruleVisibility = true;\n    } else {\n      ruleVisibility = handleRules(item, values, \"visibility\");\n    }\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabelStart, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n      buildValidationEditMode(item, pathLabelEnd, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n    }\n    if (isVisible && ruleVisibility) {\n      const ruleMandatory = handleRules(item, values, \"mandatory\");\n      if (isEditable) {\n        return /*#__PURE__*/React.createElement(CountRange, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: true,\n          startValue: values[pathLabelStart],\n          endValue: values[pathLabelEnd],\n          onCountRangeChange: setFieldValue,\n          label: label,\n          path: pathArray.join(\".\"),\n          pathLabelStart: pathLabelStart,\n          pathLabelEnd: pathLabelEnd,\n          errorStart: touched[pathLabelStart] && errors[pathLabelStart] || touched[pathLabelEnd] && errors[pathLabelStart],\n          errorEnd: touched[pathLabelEnd] && errors[pathLabelEnd] || touched[pathLabelStart] && errors[pathLabelEnd],\n          onTouch: setFieldTouched,\n          sectionOccurrence: itemSection[itemSection.length - 1],\n          optional: item.occurrences.lowerOccurrences === 0,\n          optionalMandatory: !ruleMandatory,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(CountRange, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          endValue: values[pathLabelEnd] === \"\" ? \"\" : values[pathLabelEnd],\n          startValue: values[pathLabelStart] === \"\" ? \"\" : values[pathLabelStart],\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      }\n    }\n  }\n};\nexport default BuildCountRangeEditMode;","map":{"version":3,"names":["React","useContext","CountRange","buildValidationEditMode","buildInitialValueEditMode","handleIsVisible","handleIsEditable","handleRules","firstAnyItem","CombinedContext","getParent","BuildCountRangeEditMode","item","itemIndex","pathArray","setFieldValue","values","errors","touched","setFieldTouched","isAny","cardinalityObject","sectionValidation","initialValues","validationSchema","itemSection","multipleSections","professionalTasks","order","context","isVisible","TaskVisible","isEditable","TaskEditable","isRM","parentSection","parentPath","split","composition","template","parentSectionVisibility","indexOf","value","start","end","label","itemName","node","text","arrayStart","arrayEnd","push","pathLabelStart","concat","join","pathLabelEnd","ruleVisibility","ruleMandatory","createElement","key","showLabel","editMode","startValue","endValue","onCountRangeChange","path","errorStart","errorEnd","onTouch","sectionOccurrence","length","optional","occurrences","lowerOccurrences","optionalMandatory","description"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemEditMode/BuildCountRange/BuildCountRange.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport CountRange from \"../../../../../components/Datatypes/CountRange/CountRange\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\n\nconst BuildCountRangeEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order) => {\n  const context = useContext(CombinedContext);\n  let isVisible;\n\n  if (!item.TaskVisible) {\n    isVisible = false;\n  } else {\n    isVisible = handleIsVisible(item, professionalTasks);\n  }\n\n  let isEditable;\n\n  if (!item.TaskEditable) {\n    isEditable = false;\n  } else {\n    isEditable = handleIsEditable(item, professionalTasks);\n  }\n\n  const isRM = pathArray[0] === \"rm\";\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\n\n  if (isVisible || item.value.start !== null && item.value.end !== null) {\n    const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n    let arrayStart = [];\n    let arrayEnd = [];\n    arrayStart.push(\"value\", \"start\");\n    arrayEnd.push(\"value\", \"end\");\n    const pathLabelStart = pathArray.concat(arrayStart).join(\"-\");\n    const pathLabelEnd = pathArray.concat(arrayEnd).join(\"-\");\n    buildInitialValueEditMode(item, pathLabelStart, initialValues);\n    buildInitialValueEditMode(item, pathLabelEnd, initialValues);\n    let ruleVisibility;\n\n    if (!item.ruleVisibility) {\n      ruleVisibility = true;\n    } else {\n      ruleVisibility = handleRules(item, values, \"visibility\");\n    }\n\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabelStart, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n      buildValidationEditMode(item, pathLabelEnd, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n    }\n\n    if (isVisible && ruleVisibility) {\n      const ruleMandatory = handleRules(item, values, \"mandatory\");\n\n      if (isEditable) {\n        return /*#__PURE__*/React.createElement(CountRange, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: true,\n          startValue: values[pathLabelStart],\n          endValue: values[pathLabelEnd],\n          onCountRangeChange: setFieldValue,\n          label: label,\n          path: pathArray.join(\".\"),\n          pathLabelStart: pathLabelStart,\n          pathLabelEnd: pathLabelEnd,\n          errorStart: touched[pathLabelStart] && errors[pathLabelStart] || touched[pathLabelEnd] && errors[pathLabelStart],\n          errorEnd: touched[pathLabelEnd] && errors[pathLabelEnd] || touched[pathLabelStart] && errors[pathLabelEnd],\n          onTouch: setFieldTouched,\n          sectionOccurrence: itemSection[itemSection.length - 1],\n          optional: item.occurrences.lowerOccurrences === 0,\n          optionalMandatory: !ruleMandatory,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(CountRange, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          endValue: values[pathLabelEnd] === \"\" ? \"\" : values[pathLabelEnd],\n          startValue: values[pathLabelStart] === \"\" ? \"\" : values[pathLabelStart],\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      }\n    }\n  }\n};\n\nexport default BuildCountRangeEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}