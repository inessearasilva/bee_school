{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar Immutable = require(\"immutable\");\nvar insertIntoList = require(\"./insertIntoList\");\nvar invariant = require(\"fbjs/lib/invariant\");\nvar Repeat = Immutable.Repeat;\nfunction insertTextIntoContentState(contentState, selectionState, text, characterMetadata) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`insertText` should only be called with a collapsed range.') : invariant(false) : void 0;\n  var len = null;\n  if (text != null) {\n    len = text.length;\n  }\n  if (len == null || len === 0) {\n    return contentState;\n  }\n  var blockMap = contentState.getBlockMap();\n  var key = selectionState.getStartKey();\n  var offset = selectionState.getStartOffset();\n  var block = blockMap.get(key);\n  var blockText = block.getText();\n  var newBlock = block.merge({\n    text: blockText.slice(0, offset) + text + blockText.slice(offset, block.getLength()),\n    characterList: insertIntoList(block.getCharacterList(), Repeat(characterMetadata, len).toList(), offset)\n  });\n  var newOffset = offset + len;\n  return contentState.merge({\n    blockMap: blockMap.set(key, newBlock),\n    selectionAfter: selectionState.merge({\n      anchorOffset: newOffset,\n      focusOffset: newOffset\n    })\n  });\n}\nmodule.exports = insertTextIntoContentState;","map":{"version":3,"names":["Immutable","require","insertIntoList","invariant","Repeat","insertTextIntoContentState","contentState","selectionState","text","characterMetadata","isCollapsed","process","env","NODE_ENV","len","length","blockMap","getBlockMap","key","getStartKey","offset","getStartOffset","block","get","blockText","getText","newBlock","merge","slice","getLength","characterList","getCharacterList","toList","newOffset","set","selectionAfter","anchorOffset","focusOffset","module","exports"],"sources":["C:/Users/ines_/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/node_modules/draft-js/lib/insertTextIntoContentState.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar Immutable = require(\"immutable\");\r\n\r\nvar insertIntoList = require(\"./insertIntoList\");\r\n\r\nvar invariant = require(\"fbjs/lib/invariant\");\r\n\r\nvar Repeat = Immutable.Repeat;\r\n\r\nfunction insertTextIntoContentState(contentState, selectionState, text, characterMetadata) {\r\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`insertText` should only be called with a collapsed range.') : invariant(false) : void 0;\r\n  var len = null;\r\n\r\n  if (text != null) {\r\n    len = text.length;\r\n  }\r\n\r\n  if (len == null || len === 0) {\r\n    return contentState;\r\n  }\r\n\r\n  var blockMap = contentState.getBlockMap();\r\n  var key = selectionState.getStartKey();\r\n  var offset = selectionState.getStartOffset();\r\n  var block = blockMap.get(key);\r\n  var blockText = block.getText();\r\n  var newBlock = block.merge({\r\n    text: blockText.slice(0, offset) + text + blockText.slice(offset, block.getLength()),\r\n    characterList: insertIntoList(block.getCharacterList(), Repeat(characterMetadata, len).toList(), offset)\r\n  });\r\n  var newOffset = offset + len;\r\n  return contentState.merge({\r\n    blockMap: blockMap.set(key, newBlock),\r\n    selectionAfter: selectionState.merge({\r\n      anchorOffset: newOffset,\r\n      focusOffset: newOffset\r\n    })\r\n  });\r\n}\r\n\r\nmodule.exports = insertTextIntoContentState;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEhD,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIG,MAAM,GAAGJ,SAAS,CAACI,MAAM;AAE7B,SAASC,0BAA0B,CAACC,YAAY,EAAEC,cAAc,EAAEC,IAAI,EAAEC,iBAAiB,EAAE;EACzF,CAACF,cAAc,CAACG,WAAW,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGV,SAAS,CAAC,KAAK,EAAE,4DAA4D,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EAClL,IAAIW,GAAG,GAAG,IAAI;EAEd,IAAIN,IAAI,IAAI,IAAI,EAAE;IAChBM,GAAG,GAAGN,IAAI,CAACO,MAAM;EACnB;EAEA,IAAID,GAAG,IAAI,IAAI,IAAIA,GAAG,KAAK,CAAC,EAAE;IAC5B,OAAOR,YAAY;EACrB;EAEA,IAAIU,QAAQ,GAAGV,YAAY,CAACW,WAAW,EAAE;EACzC,IAAIC,GAAG,GAAGX,cAAc,CAACY,WAAW,EAAE;EACtC,IAAIC,MAAM,GAAGb,cAAc,CAACc,cAAc,EAAE;EAC5C,IAAIC,KAAK,GAAGN,QAAQ,CAACO,GAAG,CAACL,GAAG,CAAC;EAC7B,IAAIM,SAAS,GAAGF,KAAK,CAACG,OAAO,EAAE;EAC/B,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,KAAK,CAAC;IACzBnB,IAAI,EAAEgB,SAAS,CAACI,KAAK,CAAC,CAAC,EAAER,MAAM,CAAC,GAAGZ,IAAI,GAAGgB,SAAS,CAACI,KAAK,CAACR,MAAM,EAAEE,KAAK,CAACO,SAAS,EAAE,CAAC;IACpFC,aAAa,EAAE5B,cAAc,CAACoB,KAAK,CAACS,gBAAgB,EAAE,EAAE3B,MAAM,CAACK,iBAAiB,EAAEK,GAAG,CAAC,CAACkB,MAAM,EAAE,EAAEZ,MAAM;EACzG,CAAC,CAAC;EACF,IAAIa,SAAS,GAAGb,MAAM,GAAGN,GAAG;EAC5B,OAAOR,YAAY,CAACqB,KAAK,CAAC;IACxBX,QAAQ,EAAEA,QAAQ,CAACkB,GAAG,CAAChB,GAAG,EAAEQ,QAAQ,CAAC;IACrCS,cAAc,EAAE5B,cAAc,CAACoB,KAAK,CAAC;MACnCS,YAAY,EAAEH,SAAS;MACvBI,WAAW,EAAEJ;IACf,CAAC;EACH,CAAC,CAAC;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAGlC,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}