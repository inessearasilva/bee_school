{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ines_\\\\bee_v2\\\\bee_school\\\\frontend\\\\src\\\\views\\\\dashboard\\\\All Topics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTopics() {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    async function fetchRecords() {\n      try {\n        const response = await fetch(\"http://localhost:5050/statistics_general/\");\n        if (!response.ok) {\n          throw new Error(`An error occurred: ${response.statusText}`);\n        }\n        const recordsData = await response.json();\n        setRecords(recordsData);\n      } catch (error) {\n        window.alert(error.message);\n      }\n    }\n    fetchRecords();\n  }, []);\n  const redirectToTopicPage = topic => {\n    const topicPageURL = `http:/#/topics/${topic}`;\n    window.open(topicPageURL, \"_blank\");\n  };\n  const chunkArray = (array, size) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += size) {\n      result.push(array.slice(i, i + size));\n    }\n    return result;\n  };\n  const topicsPerColumn = Math.ceil(records.length / 2);\n  const chunkedRecords = chunkArray(records, topicsPerColumn);\n  const renderTopicRows = recordChunk => recordChunk.map(record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: Object.entries(record.topics).map(_ref => {\n      let [topic, value] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: '5px',\n            paddingLeft: '10px',\n            width: '50%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => redirectToTopicPage(topic),\n            children: topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"qtt-background\",\n          style: {\n            padding: '3px'\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, topic, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, record._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row align-items-start\",\n    style: {\n      display: 'flex',\n      width: '100%',\n      minWidth: '1280px',\n      maxWidth: '1280px'\n    },\n    children: chunkedRecords.map((recordChunk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-6 col-md-6 col-sm-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-item\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: renderTopicRows(recordChunk)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTopics, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = AllTopics;\nvar _c;\n$RefreshReg$(_c, \"AllTopics\");","map":{"version":3,"names":["React","useEffect","useState","AllTopics","records","setRecords","fetchRecords","response","fetch","ok","Error","statusText","recordsData","json","error","window","alert","message","redirectToTopicPage","topic","topicPageURL","open","chunkArray","array","size","result","i","length","push","slice","topicsPerColumn","Math","ceil","chunkedRecords","renderTopicRows","recordChunk","map","record","Object","entries","topics","value","padding","paddingLeft","width","_id","display","minWidth","maxWidth","index"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/src/views/dashboard/All Topics.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function AllTopics() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRecords() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5050/statistics_general/\");\r\n        if (!response.ok) {\r\n          throw new Error(`An error occurred: ${response.statusText}`);\r\n        }\r\n        const recordsData = await response.json();\r\n        setRecords(recordsData);\r\n      } catch (error) {\r\n        window.alert(error.message);\r\n      }\r\n    }\r\n\r\n    fetchRecords();\r\n  }, []);\r\n\r\n  const redirectToTopicPage = (topic) => {\r\n    const topicPageURL = `http:/#/topics/${topic}`;\r\n    window.open(topicPageURL, \"_blank\");\r\n  };\r\n\r\n  const chunkArray = (array, size) => {\r\n    const result = [];\r\n    for (let i = 0; i < array.length; i += size) {\r\n      result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const topicsPerColumn = Math.ceil(records.length / 2);\r\n  const chunkedRecords = chunkArray(records, topicsPerColumn);\r\n\r\n  const renderTopicRows = (recordChunk) =>\r\n    recordChunk.map((record) => (\r\n      <React.Fragment key={record._id}>\r\n        {Object.entries(record.topics).map(([topic, value]) => (\r\n          <tr key={topic}>\r\n            <td style={{ padding: '5px', paddingLeft: '10px', width: '50%' }}>\r\n              <a href=\"#\" onClick={() => redirectToTopicPage(topic)}>\r\n                {topic}\r\n              </a>\r\n            </td>\r\n            <td className=\"qtt-background\" style={{ padding: '3px' }}>\r\n              {value}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"row align-items-start\" style={{ display: 'flex', width: '100%', minWidth: '1280px', maxWidth: '1280px' }}>\r\n      {chunkedRecords.map((recordChunk, index) => (\r\n        <div className=\"col-lg-6 col-md-6 col-sm-6\" key={index}>\r\n          <div className=\"flex-container\">\r\n            <div className=\"flex-item\">\r\n              <table>\r\n                <tbody>\r\n                  {renderTopicRows(recordChunk)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}