{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n/**\r\n * If we have a selection, create a ContentState fragment and store\r\n * it in our internal clipboard. Subsequent paste events will use this\r\n * fragment if no external clipboard data is supplied.\r\n */\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\nmodule.exports = editOnCopy;","map":{"version":3,"names":["getFragmentFromSelection","require","editOnCopy","editor","e","editorState","_latestEditorState","selection","getSelection","isCollapsed","preventDefault","setClipboard","module","exports"],"sources":["C:/Users/ines_/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/node_modules/draft-js/lib/editOnCopy.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\r\n/**\r\n * If we have a selection, create a ContentState fragment and store\r\n * it in our internal clipboard. Subsequent paste events will use this\r\n * fragment if no external clipboard data is supplied.\r\n */\r\n\r\n\r\nfunction editOnCopy(editor, e) {\r\n  var editorState = editor._latestEditorState;\r\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\r\n\r\n  if (selection.isCollapsed()) {\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n\r\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\r\n}\r\n\r\nmodule.exports = editOnCopy;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACpE;AACA;AACA;AACA;AACA;;AAGA,SAASC,UAAU,CAACC,MAAM,EAAEC,CAAC,EAAE;EAC7B,IAAIC,WAAW,GAAGF,MAAM,CAACG,kBAAkB;EAC3C,IAAIC,SAAS,GAAGF,WAAW,CAACG,YAAY,EAAE,CAAC,CAAC;;EAE5C,IAAID,SAAS,CAACE,WAAW,EAAE,EAAE;IAC3BL,CAAC,CAACM,cAAc,EAAE;IAClB;EACF;EAEAP,MAAM,CAACQ,YAAY,CAACX,wBAAwB,CAACG,MAAM,CAACG,kBAAkB,CAAC,CAAC;AAC1E;AAEAM,MAAM,CAACC,OAAO,GAAGX,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}