{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\nvar EditorState = require(\"./EditorState\");\nvar adjustBlockDepthForContentState = require(\"./adjustBlockDepthForContentState\");\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n  /**\r\n   * For collapsed selections at the start of styled blocks, backspace should\r\n   * just remove the existing style.\r\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    } // First, try to remove a preceding atomic block.\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    } // If that doesn't succeed, try to remove the current block style.\n\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n    var blockAfter = content.getBlockAfter(startKey);\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n    event.preventDefault();\n    var depth = block.getDepth();\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n  /**\r\n   * Toggle the specified inline style for the selection. If the\r\n   * user's selection is collapsed, apply or remove the style for the\r\n   * internal state. If it is not collapsed, apply the change directly\r\n   * to the document state.\r\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    } // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n\n    var content = editorState.getCurrentContent();\n    var newContent; // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n  /**\r\n   * When a collapsed cursor is at the start of a styled block, changes block\r\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\r\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;","map":{"version":3,"names":["DraftModifier","require","EditorState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","contentState","getCurrentContent","entityMap","getEntityMap","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","__get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","eventTimeStamp","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","blockMap","getBlockMap","getKey","withoutAtomicBlock","merge","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","atomicBlockTarget","focusKey","focusOffset","removeRange","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","depth","getDepth","shiftKey","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","anchorKey","anchorOffset","isBackward","hasAtomicBlock","skipWhile","_","k","reverse","typeToSet","setBlockType","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","module","exports"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/node_modules/draft-js/lib/RichTextEditorUtil.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar DraftModifier = require(\"./DraftModifier\");\r\n\r\nvar EditorState = require(\"./EditorState\");\r\n\r\nvar adjustBlockDepthForContentState = require(\"./adjustBlockDepthForContentState\");\r\n\r\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\r\n\r\nvar RichTextEditorUtil = {\r\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var contentState = editorState.getCurrentContent();\r\n    var entityMap = contentState.getEntityMap();\r\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\r\n      var entity = v.getEntity();\r\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\r\n    });\r\n  },\r\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\r\n    var selection = editorState.getSelection();\r\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n  },\r\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\r\n    return {\r\n      url: uri.toString()\r\n    };\r\n  },\r\n  handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\r\n    switch (command) {\r\n      case 'bold':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\r\n\r\n      case 'italic':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\r\n\r\n      case 'underline':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\r\n\r\n      case 'code':\r\n        return RichTextEditorUtil.toggleCode(editorState);\r\n\r\n      case 'backspace':\r\n      case 'backspace-word':\r\n      case 'backspace-to-start-of-line':\r\n        return RichTextEditorUtil.onBackspace(editorState);\r\n\r\n      case 'delete':\r\n      case 'delete-word':\r\n      case 'delete-to-end-of-block':\r\n        return RichTextEditorUtil.onDelete(editorState);\r\n\r\n      default:\r\n        // they may have custom editor commands; ignore those\r\n        return null;\r\n    }\r\n  },\r\n  insertSoftNewline: function insertSoftNewline(editorState) {\r\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\r\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\r\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\r\n  },\r\n\r\n  /**\r\n   * For collapsed selections at the start of styled blocks, backspace should\r\n   * just remove the existing style.\r\n   */\r\n  onBackspace: function onBackspace(editorState) {\r\n    var selection = editorState.getSelection();\r\n\r\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\r\n      return null;\r\n    } // First, try to remove a preceding atomic block.\r\n\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var startKey = selection.getStartKey();\r\n    var blockBefore = content.getBlockBefore(startKey);\r\n\r\n    if (blockBefore && blockBefore.getType() === 'atomic') {\r\n      var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\r\n      var withoutAtomicBlock = content.merge({\r\n        blockMap: blockMap,\r\n        selectionAfter: selection\r\n      });\r\n\r\n      if (withoutAtomicBlock !== content) {\r\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\r\n      }\r\n    } // If that doesn't succeed, try to remove the current block style.\r\n\r\n\r\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\r\n\r\n    if (withoutBlockStyle) {\r\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\r\n    }\r\n\r\n    return null;\r\n  },\r\n  onDelete: function onDelete(editorState) {\r\n    var selection = editorState.getSelection();\r\n\r\n    if (!selection.isCollapsed()) {\r\n      return null;\r\n    }\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var startKey = selection.getStartKey();\r\n    var block = content.getBlockForKey(startKey);\r\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\r\n\r\n    if (selection.getStartOffset() < length) {\r\n      return null;\r\n    }\r\n\r\n    var blockAfter = content.getBlockAfter(startKey);\r\n\r\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\r\n      return null;\r\n    }\r\n\r\n    var atomicBlockTarget = selection.merge({\r\n      focusKey: blockAfter.getKey(),\r\n      focusOffset: blockAfter.getLength()\r\n    });\r\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\r\n\r\n    if (withoutAtomicBlock !== content) {\r\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\r\n    }\r\n\r\n    return null;\r\n  },\r\n  onTab: function onTab(event, editorState, maxDepth) {\r\n    var selection = editorState.getSelection();\r\n    var key = selection.getAnchorKey();\r\n\r\n    if (key !== selection.getFocusKey()) {\r\n      return editorState;\r\n    }\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var block = content.getBlockForKey(key);\r\n    var type = block.getType();\r\n\r\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\r\n      return editorState;\r\n    }\r\n\r\n    event.preventDefault();\r\n    var depth = block.getDepth();\r\n\r\n    if (!event.shiftKey && depth === maxDepth) {\r\n      return editorState;\r\n    }\r\n\r\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\r\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\r\n  },\r\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\r\n    var selection = editorState.getSelection();\r\n    var startKey = selection.getStartKey();\r\n    var endKey = selection.getEndKey();\r\n    var content = editorState.getCurrentContent();\r\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\r\n    // following block. The `SelectionState` for this case is accurate, but\r\n    // we should avoid toggling block type for the trailing block because it\r\n    // is a confusing interaction.\r\n\r\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\r\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\r\n      endKey = blockBefore.getKey();\r\n      target = target.merge({\r\n        anchorKey: startKey,\r\n        anchorOffset: selection.getStartOffset(),\r\n        focusKey: endKey,\r\n        focusOffset: blockBefore.getLength(),\r\n        isBackward: false\r\n      });\r\n    }\r\n\r\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\r\n      return k !== startKey;\r\n    }).reverse().skipWhile(function (_, k) {\r\n      return k !== endKey;\r\n    }).some(function (v) {\r\n      return v.getType() === 'atomic';\r\n    });\r\n\r\n    if (hasAtomicBlock) {\r\n      return editorState;\r\n    }\r\n\r\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\r\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\r\n  },\r\n  toggleCode: function toggleCode(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var anchorKey = selection.getAnchorKey();\r\n    var focusKey = selection.getFocusKey();\r\n\r\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\r\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\r\n    }\r\n\r\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\r\n  },\r\n\r\n  /**\r\n   * Toggle the specified inline style for the selection. If the\r\n   * user's selection is collapsed, apply or remove the style for the\r\n   * internal state. If it is not collapsed, apply the change directly\r\n   * to the document state.\r\n   */\r\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\r\n    var selection = editorState.getSelection();\r\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\r\n    // set the result as the new inline style override. This will then be\r\n    // used as the inline style for the next character to be inserted.\r\n\r\n    if (selection.isCollapsed()) {\r\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\r\n    } // If characters are selected, immediately apply or remove the\r\n    // inline style on the document state itself.\r\n\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var newContent; // If the style is already present for the selection range, remove it.\r\n    // Otherwise, apply it.\r\n\r\n    if (currentStyle.has(inlineStyle)) {\r\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\r\n    } else {\r\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\r\n    }\r\n\r\n    return EditorState.push(editorState, newContent, 'change-inline-style');\r\n  },\r\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\r\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\r\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\r\n  },\r\n\r\n  /**\r\n   * When a collapsed cursor is at the start of a styled block, changes block\r\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\r\n   */\r\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var offset = selection.getAnchorOffset();\r\n\r\n    if (selection.isCollapsed() && offset === 0) {\r\n      var key = selection.getAnchorKey();\r\n      var content = editorState.getCurrentContent();\r\n      var block = content.getBlockForKey(key);\r\n      var type = block.getType();\r\n      var blockBefore = content.getBlockBefore(key);\r\n\r\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\r\n        return null;\r\n      }\r\n\r\n      if (type !== 'unstyled') {\r\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n};\r\nmodule.exports = RichTextEditorUtil;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIE,+BAA+B,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AAElF,IAAIG,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAE/C,IAAII,kBAAkB,GAAG;EACvBC,wBAAwB,EAAE,SAASA,wBAAwB,CAACC,WAAW,EAAE;IACvE,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAIC,YAAY,GAAGH,WAAW,CAACI,iBAAiB,EAAE;IAClD,IAAIC,SAAS,GAAGF,YAAY,CAACG,YAAY,EAAE;IAC3C,OAAOH,YAAY,CAACI,cAAc,CAACN,SAAS,CAACO,YAAY,EAAE,CAAC,CAACC,gBAAgB,EAAE,CAACC,KAAK,CAACT,SAAS,CAACU,cAAc,EAAE,EAAEV,SAAS,CAACW,YAAY,EAAE,CAAC,CAACC,IAAI,CAAC,UAAUC,CAAC,EAAE;MAC5J,IAAIC,MAAM,GAAGD,CAAC,CAACE,SAAS,EAAE;MAC1B,OAAO,CAAC,CAACD,MAAM,IAAIV,SAAS,CAACY,KAAK,CAACF,MAAM,CAAC,CAACG,OAAO,EAAE,KAAK,MAAM;IACjE,CAAC,CAAC;EACJ,CAAC;EACDC,mBAAmB,EAAE,SAASA,mBAAmB,CAACnB,WAAW,EAAE;IAC7D,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,OAAOF,WAAW,CAACI,iBAAiB,EAAE,CAACG,cAAc,CAACN,SAAS,CAACmB,WAAW,EAAE,CAAC,CAACF,OAAO,EAAE;EAC1F,CAAC;EACDG,uBAAuB,EAAE,SAASA,uBAAuB,CAACC,GAAG,EAAE;IAC7D,OAAO;MACLC,GAAG,EAAED,GAAG,CAACE,QAAQ;IACnB,CAAC;EACH,CAAC;EACDC,gBAAgB,EAAE,SAASA,gBAAgB,CAACzB,WAAW,EAAE0B,OAAO,EAAEC,cAAc,EAAE;IAChF,QAAQD,OAAO;MACb,KAAK,MAAM;QACT,OAAO5B,kBAAkB,CAAC8B,iBAAiB,CAAC5B,WAAW,EAAE,MAAM,CAAC;MAElE,KAAK,QAAQ;QACX,OAAOF,kBAAkB,CAAC8B,iBAAiB,CAAC5B,WAAW,EAAE,QAAQ,CAAC;MAEpE,KAAK,WAAW;QACd,OAAOF,kBAAkB,CAAC8B,iBAAiB,CAAC5B,WAAW,EAAE,WAAW,CAAC;MAEvE,KAAK,MAAM;QACT,OAAOF,kBAAkB,CAAC+B,UAAU,CAAC7B,WAAW,CAAC;MAEnD,KAAK,WAAW;MAChB,KAAK,gBAAgB;MACrB,KAAK,4BAA4B;QAC/B,OAAOF,kBAAkB,CAACgC,WAAW,CAAC9B,WAAW,CAAC;MAEpD,KAAK,QAAQ;MACb,KAAK,aAAa;MAClB,KAAK,wBAAwB;QAC3B,OAAOF,kBAAkB,CAACiC,QAAQ,CAAC/B,WAAW,CAAC;MAEjD;QACE;QACA,OAAO,IAAI;IAAC;EAElB,CAAC;EACDgC,iBAAiB,EAAE,SAASA,iBAAiB,CAAChC,WAAW,EAAE;IACzD,IAAIG,YAAY,GAAGV,aAAa,CAACwC,UAAU,CAACjC,WAAW,CAACI,iBAAiB,EAAE,EAAEJ,WAAW,CAACE,YAAY,EAAE,EAAE,IAAI,EAAEF,WAAW,CAACkC,qBAAqB,EAAE,EAAE,IAAI,CAAC;IACzJ,IAAIC,cAAc,GAAGxC,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEG,YAAY,EAAE,mBAAmB,CAAC;IACrF,OAAOR,WAAW,CAAC0C,cAAc,CAACF,cAAc,EAAEhC,YAAY,CAACmC,iBAAiB,EAAE,CAAC;EACrF,CAAC;EAED;AACF;AACA;AACA;EACER,WAAW,EAAE,SAASA,WAAW,CAAC9B,WAAW,EAAE;IAC7C,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAE1C,IAAI,CAACD,SAAS,CAACsC,WAAW,EAAE,IAAItC,SAAS,CAACuC,eAAe,EAAE,IAAIvC,SAAS,CAACwC,cAAc,EAAE,EAAE;MACzF,OAAO,IAAI;IACb,CAAC,CAAC;;IAGF,IAAIC,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;IAC7C,IAAIuC,QAAQ,GAAG1C,SAAS,CAACmB,WAAW,EAAE;IACtC,IAAIwB,WAAW,GAAGF,OAAO,CAACG,cAAc,CAACF,QAAQ,CAAC;IAElD,IAAIC,WAAW,IAAIA,WAAW,CAAC1B,OAAO,EAAE,KAAK,QAAQ,EAAE;MACrD,IAAI4B,QAAQ,GAAGJ,OAAO,CAACK,WAAW,EAAE,CAAC,QAAQ,CAAC,CAACH,WAAW,CAACI,MAAM,EAAE,CAAC;MACpE,IAAIC,kBAAkB,GAAGP,OAAO,CAACQ,KAAK,CAAC;QACrCJ,QAAQ,EAAEA,QAAQ;QAClBK,cAAc,EAAElD;MAClB,CAAC,CAAC;MAEF,IAAIgD,kBAAkB,KAAKP,OAAO,EAAE;QAClC,OAAO/C,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEiD,kBAAkB,EAAE,cAAc,CAAC;MAC1E;IACF,CAAC,CAAC;;IAGF,IAAIG,iBAAiB,GAAGtD,kBAAkB,CAACuD,qBAAqB,CAACrD,WAAW,CAAC;IAE7E,IAAIoD,iBAAiB,EAAE;MACrB,OAAOzD,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEoD,iBAAiB,EAAE,mBAAmB,CAAC;IAC9E;IAEA,OAAO,IAAI;EACb,CAAC;EACDrB,QAAQ,EAAE,SAASA,QAAQ,CAAC/B,WAAW,EAAE;IACvC,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAE1C,IAAI,CAACD,SAAS,CAACsC,WAAW,EAAE,EAAE;MAC5B,OAAO,IAAI;IACb;IAEA,IAAIG,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;IAC7C,IAAIuC,QAAQ,GAAG1C,SAAS,CAACmB,WAAW,EAAE;IACtC,IAAIkC,KAAK,GAAGZ,OAAO,CAACnC,cAAc,CAACoC,QAAQ,CAAC;IAC5C,IAAIY,MAAM,GAAGD,KAAK,CAACE,SAAS,EAAE,CAAC,CAAC;;IAEhC,IAAIvD,SAAS,CAACU,cAAc,EAAE,GAAG4C,MAAM,EAAE;MACvC,OAAO,IAAI;IACb;IAEA,IAAIE,UAAU,GAAGf,OAAO,CAACgB,aAAa,CAACf,QAAQ,CAAC;IAEhD,IAAI,CAACc,UAAU,IAAIA,UAAU,CAACvC,OAAO,EAAE,KAAK,QAAQ,EAAE;MACpD,OAAO,IAAI;IACb;IAEA,IAAIyC,iBAAiB,GAAG1D,SAAS,CAACiD,KAAK,CAAC;MACtCU,QAAQ,EAAEH,UAAU,CAACT,MAAM,EAAE;MAC7Ba,WAAW,EAAEJ,UAAU,CAACD,SAAS;IACnC,CAAC,CAAC;IACF,IAAIP,kBAAkB,GAAGxD,aAAa,CAACqE,WAAW,CAACpB,OAAO,EAAEiB,iBAAiB,EAAE,SAAS,CAAC;IAEzF,IAAIV,kBAAkB,KAAKP,OAAO,EAAE;MAClC,OAAO/C,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEiD,kBAAkB,EAAE,cAAc,CAAC;IAC1E;IAEA,OAAO,IAAI;EACb,CAAC;EACDc,KAAK,EAAE,SAASA,KAAK,CAACC,KAAK,EAAEhE,WAAW,EAAEiE,QAAQ,EAAE;IAClD,IAAIhE,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAIgE,GAAG,GAAGjE,SAAS,CAACO,YAAY,EAAE;IAElC,IAAI0D,GAAG,KAAKjE,SAAS,CAACkE,WAAW,EAAE,EAAE;MACnC,OAAOnE,WAAW;IACpB;IAEA,IAAI0C,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;IAC7C,IAAIkD,KAAK,GAAGZ,OAAO,CAACnC,cAAc,CAAC2D,GAAG,CAAC;IACvC,IAAIE,IAAI,GAAGd,KAAK,CAACpC,OAAO,EAAE;IAE1B,IAAIkD,IAAI,KAAK,qBAAqB,IAAIA,IAAI,KAAK,mBAAmB,EAAE;MAClE,OAAOpE,WAAW;IACpB;IAEAgE,KAAK,CAACK,cAAc,EAAE;IACtB,IAAIC,KAAK,GAAGhB,KAAK,CAACiB,QAAQ,EAAE;IAE5B,IAAI,CAACP,KAAK,CAACQ,QAAQ,IAAIF,KAAK,KAAKL,QAAQ,EAAE;MACzC,OAAOjE,WAAW;IACpB;IAEA,IAAIyE,cAAc,GAAG7E,+BAA+B,CAAC8C,OAAO,EAAEzC,SAAS,EAAE+D,KAAK,CAACQ,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEP,QAAQ,CAAC;IAC3G,OAAOtE,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEyE,cAAc,EAAE,cAAc,CAAC;EACtE,CAAC;EACDC,eAAe,EAAE,SAASA,eAAe,CAAC1E,WAAW,EAAE2E,SAAS,EAAE;IAChE,IAAI1E,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAIyC,QAAQ,GAAG1C,SAAS,CAACmB,WAAW,EAAE;IACtC,IAAIwD,MAAM,GAAG3E,SAAS,CAAC4E,SAAS,EAAE;IAClC,IAAInC,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;IAC7C,IAAI0E,MAAM,GAAG7E,SAAS,CAAC,CAAC;IACxB;IACA;IACA;;IAEA,IAAI0C,QAAQ,KAAKiC,MAAM,IAAI3E,SAAS,CAACW,YAAY,EAAE,KAAK,CAAC,EAAE;MACzD,IAAIgC,WAAW,GAAG/C,UAAU,CAAC6C,OAAO,CAACG,cAAc,CAAC+B,MAAM,CAAC,CAAC;MAC5DA,MAAM,GAAGhC,WAAW,CAACI,MAAM,EAAE;MAC7B8B,MAAM,GAAGA,MAAM,CAAC5B,KAAK,CAAC;QACpB6B,SAAS,EAAEpC,QAAQ;QACnBqC,YAAY,EAAE/E,SAAS,CAACU,cAAc,EAAE;QACxCiD,QAAQ,EAAEgB,MAAM;QAChBf,WAAW,EAAEjB,WAAW,CAACY,SAAS,EAAE;QACpCyB,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;IAEA,IAAIC,cAAc,GAAGxC,OAAO,CAACK,WAAW,EAAE,CAACoC,SAAS,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MACnE,OAAOA,CAAC,KAAK1C,QAAQ;IACvB,CAAC,CAAC,CAAC2C,OAAO,EAAE,CAACH,SAAS,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MACrC,OAAOA,CAAC,KAAKT,MAAM;IACrB,CAAC,CAAC,CAAC/D,IAAI,CAAC,UAAUC,CAAC,EAAE;MACnB,OAAOA,CAAC,CAACI,OAAO,EAAE,KAAK,QAAQ;IACjC,CAAC,CAAC;IAEF,IAAIgE,cAAc,EAAE;MAClB,OAAOlF,WAAW;IACpB;IAEA,IAAIuF,SAAS,GAAG7C,OAAO,CAACnC,cAAc,CAACoC,QAAQ,CAAC,CAACzB,OAAO,EAAE,KAAKyD,SAAS,GAAG,UAAU,GAAGA,SAAS;IACjG,OAAOhF,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEP,aAAa,CAAC+F,YAAY,CAAC9C,OAAO,EAAEoC,MAAM,EAAES,SAAS,CAAC,EAAE,mBAAmB,CAAC;EACnH,CAAC;EACD1D,UAAU,EAAE,SAASA,UAAU,CAAC7B,WAAW,EAAE;IAC3C,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAI6E,SAAS,GAAG9E,SAAS,CAACO,YAAY,EAAE;IACxC,IAAIoD,QAAQ,GAAG3D,SAAS,CAACkE,WAAW,EAAE;IAEtC,IAAIlE,SAAS,CAACsC,WAAW,EAAE,IAAIwC,SAAS,KAAKnB,QAAQ,EAAE;MACrD,OAAO9D,kBAAkB,CAAC4E,eAAe,CAAC1E,WAAW,EAAE,YAAY,CAAC;IACtE;IAEA,OAAOF,kBAAkB,CAAC8B,iBAAiB,CAAC5B,WAAW,EAAE,MAAM,CAAC;EAClE,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACE4B,iBAAiB,EAAE,SAASA,iBAAiB,CAAC5B,WAAW,EAAEyF,WAAW,EAAE;IACtE,IAAIxF,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAIwF,YAAY,GAAG1F,WAAW,CAACkC,qBAAqB,EAAE,CAAC,CAAC;IACxD;IACA;;IAEA,IAAIjC,SAAS,CAACsC,WAAW,EAAE,EAAE;MAC3B,OAAO5C,WAAW,CAACgG,sBAAsB,CAAC3F,WAAW,EAAE0F,YAAY,CAACE,GAAG,CAACH,WAAW,CAAC,GAAGC,YAAY,CAACG,MAAM,CAACJ,WAAW,CAAC,GAAGC,YAAY,CAACI,GAAG,CAACL,WAAW,CAAC,CAAC;IAC1J,CAAC,CAAC;IACF;;IAGA,IAAI/C,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;IAC7C,IAAI2F,UAAU,CAAC,CAAC;IAChB;;IAEA,IAAIL,YAAY,CAACE,GAAG,CAACH,WAAW,CAAC,EAAE;MACjCM,UAAU,GAAGtG,aAAa,CAACuG,iBAAiB,CAACtD,OAAO,EAAEzC,SAAS,EAAEwF,WAAW,CAAC;IAC/E,CAAC,MAAM;MACLM,UAAU,GAAGtG,aAAa,CAACwG,gBAAgB,CAACvD,OAAO,EAAEzC,SAAS,EAAEwF,WAAW,CAAC;IAC9E;IAEA,OAAO9F,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAE+F,UAAU,EAAE,qBAAqB,CAAC;EACzE,CAAC;EACDG,UAAU,EAAE,SAASA,UAAU,CAAClG,WAAW,EAAEmG,eAAe,EAAEC,SAAS,EAAE;IACvE,IAAIC,WAAW,GAAG5G,aAAa,CAAC6G,WAAW,CAACtG,WAAW,CAACI,iBAAiB,EAAE,EAAE+F,eAAe,EAAEC,SAAS,CAAC;IACxG,OAAOzG,WAAW,CAACyC,IAAI,CAACpC,WAAW,EAAEqG,WAAW,EAAE,cAAc,CAAC;EACnE,CAAC;EAED;AACF;AACA;AACA;EACEhD,qBAAqB,EAAE,SAASA,qBAAqB,CAACrD,WAAW,EAAE;IACjE,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAY,EAAE;IAC1C,IAAIqG,MAAM,GAAGtG,SAAS,CAACuC,eAAe,EAAE;IAExC,IAAIvC,SAAS,CAACsC,WAAW,EAAE,IAAIgE,MAAM,KAAK,CAAC,EAAE;MAC3C,IAAIrC,GAAG,GAAGjE,SAAS,CAACO,YAAY,EAAE;MAClC,IAAIkC,OAAO,GAAG1C,WAAW,CAACI,iBAAiB,EAAE;MAC7C,IAAIkD,KAAK,GAAGZ,OAAO,CAACnC,cAAc,CAAC2D,GAAG,CAAC;MACvC,IAAIE,IAAI,GAAGd,KAAK,CAACpC,OAAO,EAAE;MAC1B,IAAI0B,WAAW,GAAGF,OAAO,CAACG,cAAc,CAACqB,GAAG,CAAC;MAE7C,IAAIE,IAAI,KAAK,YAAY,IAAIxB,WAAW,IAAIA,WAAW,CAAC1B,OAAO,EAAE,KAAK,YAAY,IAAI0B,WAAW,CAACY,SAAS,EAAE,KAAK,CAAC,EAAE;QACnH,OAAO,IAAI;MACb;MAEA,IAAIY,IAAI,KAAK,UAAU,EAAE;QACvB,OAAO3E,aAAa,CAAC+F,YAAY,CAAC9C,OAAO,EAAEzC,SAAS,EAAE,UAAU,CAAC;MACnE;IACF;IAEA,OAAO,IAAI;EACb;AACF,CAAC;AACDuG,MAAM,CAACC,OAAO,GAAG3G,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}