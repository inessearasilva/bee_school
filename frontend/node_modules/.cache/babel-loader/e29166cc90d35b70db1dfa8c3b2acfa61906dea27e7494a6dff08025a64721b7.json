{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { Formik } from \"formik\";\nimport ob from \"object-path\";\nimport React, { Component } from \"react\";\nimport * as Yup from \"yup\";\nimport { handleCardinality } from \"../../../assets/functions/HandleCardinality/HandleCardinality\";\nimport { handleSectionValidation } from \"../../../assets/functions/HandleSectionValidation/handleSectionValidation\";\nimport { processItemSection } from \"../../../assets/functions/HandleSectionValidation/processItemSection\";\nimport { maxValueArray } from \"../../../assets/functions/Maximum/maxValueArray\";\nimport SectionsListEditMode from \"../../../components/SubForm/SectionsListEditMode\";\nimport SubForm from \"../../../components/SubForm/SubForm\";\nimport AddSectionContainer from \"../../../components/UI/AddSection/AddSectionContainer\";\nimport AddSectionButton from \"../../../components/UI/AddSectionButton/AddSectionButton\";\nimport BodyContainer from \"../../../components/UI/BodyContainer/BodyContainer\";\nimport CancelButton from \"../../../components/UI/CancelButton/CancelButton\";\nimport FormContainer from \"../../../components/UI/FormContainer/FormContainer\";\nimport FormHeader from \"../../../components/UI/FormHeader/FormHeader\";\nimport SaveButton from \"../../../components/UI/SaveButton/SaveButton\";\nimport SectionContainer from \"../../../components/UI/SectionContainer/SectionContainer\";\nimport SubmitButton from \"../../../components/UI/SubmitButton/SubmitButton\";\nimport { buildSectionInitialValue } from \"../FormInitialValues/BuildSectionInitialValue/BuildSectionInitialValue\";\nimport { buildSectionValidation } from \"../FormValidation/BuildSectionValidation/BuildSectionValidation\";\nimport CombinedContext from \"../../../contexts/CombinedContext\";\nimport ProviderCombinedContext from \"../../../contexts/ProviderCombinedContext\";\nimport * as buildDatatypeEditMode from \"../BuildItems/BuildItemEditMode/BuildItemEditMode/BuildItemEditMode\";\nimport axios from \"axios\";\nimport { getEnvUrl } from \"../../../environment\";\nvar FormEditComponent = /*#__PURE__*/function (_Component) {\n  _inherits(FormEditComponent, _Component);\n  var _super = _createSuper(FormEditComponent);\n  function FormEditComponent() {\n    var _this;\n    _classCallCheck(this, FormEditComponent);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isCollapsed: false,\n      checkValidation: false,\n      subForm: {\n        openSubForm: false,\n        sectionId: \"\",\n        type: \"\",\n        path: \"\",\n        jdt: \"\",\n        setFieldValue: \"\"\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCollapseSections\", function () {\n      // Atualizar o isCollapsed\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isCollapsed: !prevState.isCollapsed\n        });\n      });\n      _this.accordionsSectionContainerEdit.forEach(function (obj) {\n        var level = obj.id.split(\"-\").filter(function (x) {\n          return x === \"items\";\n        }).length; // Colapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          obj.accordionOpen = _this.state.isCollapsed;\n        }\n      });\n      _this.forceUpdate();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleAccordionSectionContainerMode\", function (path) {\n      _this.accordionsSectionContainerEdit.forEach(function (obj) {\n        if (obj.id === path) {\n          var newMode = obj.accordionOpen;\n          obj.accordionOpen = !newMode;\n        }\n      }); // Ver se o formulário está collapsed\n\n      var breaked = false;\n      for (var i = 0; i < _this.accordionsSectionContainerEdit.length; i++) {\n        var level = _this.accordionsSectionContainerEdit[i].id.split(\"-\").filter(function (x) {\n          return x === \"items\";\n        }).length; // Collapsar apenas as secções do nível 1\n\n        if (level === 1) {\n          if (_this.accordionsSectionContainerEdit[i].accordionOpen) {\n            _this.setState({\n              isCollapsed: false\n            });\n            breaked = true;\n            break;\n          }\n        }\n      }\n      if (!breaked) {\n        _this.setState({\n          isCollapsed: true\n        });\n      }\n      _this.forceUpdate();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleAddSection\", function (pathArray, setFieldValue, setFieldTouched) {\n      var section = _this.multipleSections.filter(function (obj) {\n        return obj.path === pathArray.join(\"-\");\n      })[0];\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          subForm: _objectSpread(_objectSpread({}, prevState.subForm), {}, {\n            openSubForm: true,\n            jdt: section.jdt,\n            path: section.path,\n            type: \"new\",\n            sectionId: \"\",\n            setFieldValue: setFieldValue\n          })\n        });\n      });\n      setFieldTouched(pathArray.join(\"-\"));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCancelSubForm\", function () {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          subForm: _objectSpread(_objectSpread({}, prevState.subForm), {}, {\n            openSubForm: false,\n            jdt: \"\",\n            path: \"\",\n            type: \"\",\n            sectionId: \"\",\n            setFieldValue: \"\"\n          })\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitSubForm\", function (values, path, type, sectionId) {\n      var setFieldValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      _this.context.fields.updateValue(\"\".concat(path, \"-value\"));\n      if (type === \"new\") {\n        _this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            var occurrence = obj.occurrences;\n            var valuesSections = obj.values;\n            var maxId = 0;\n            valuesSections.forEach(function (val) {\n              if (val.id >= maxId) {\n                maxId = val.id;\n              }\n            });\n            obj.occurrences = occurrence + 1;\n            obj.values = [].concat(_toConsumableArray(valuesSections), [{\n              id: maxId + 1,\n              values: values\n            }]);\n            setFieldValue(path, occurrence + 1);\n          }\n        });\n      } else if (type === \"edit\") {\n        _this.multipleSections.forEach(function (obj) {\n          if (obj.path === path) {\n            var valuesSections = obj.values.filter(function (section) {\n              return section.id !== sectionId;\n            });\n            obj.values = [].concat(_toConsumableArray(valuesSections), [{\n              id: sectionId,\n              values: values\n            }]);\n          }\n        });\n      }\n      _this.handleCancelSubForm();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveSectionValue\", function (sectionPath, id, setFieldValue) {\n      _this.context.fields.updateValue(\"\".concat(sectionPath, \"-value\"));\n      _this.multipleSections.forEach(function (obj) {\n        if (obj.path === sectionPath) {\n          var occurrence = obj.occurrences;\n          var valuesSections = obj.values.filter(function (obj) {\n            return obj.id !== id;\n          });\n          obj.occurrences = occurrence - 1;\n          obj.values = valuesSections;\n          setFieldValue(sectionPath, occurrence - 1);\n        }\n      });\n      _this.forceUpdate();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleEditSectionValue\", function (sectionPath, id) {\n      var section = _this.multipleSections.filter(function (obj) {\n        return obj.path === sectionPath;\n      })[0];\n      var sectionValues = section.values.filter(function (obj) {\n        return obj.id === id;\n      })[0].values;\n      var mergedJSON = JSON.parse(JSON.stringify(section.jdt));\n      Object.keys(sectionValues).forEach(function (label) {\n        var indexRemove = sectionPath.split(\"-\").length;\n        var jdtLabel = label.split(\".\").slice(indexRemove);\n        ob.set(mergedJSON, jdtLabel, sectionValues[label]);\n      });\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          subForm: _objectSpread(_objectSpread({}, prevState.subForm), {}, {\n            openSubForm: true,\n            jdt: mergedJSON,\n            path: section.path,\n            type: \"edit\",\n            sectionId: id\n          })\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"buildSingleItemEditMode\", function (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionNotMandatoryObject, sectionValidation) {\n      var itemSection = processItemSection(pathArray, isAny, sectionNotMandatoryObject);\n      return buildDatatypeEditMode.buildItemEditMode(item.dataType, item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, _this.initialValuesEdit, _this.validationSchemaEdit, itemSection, _this.multipleSections, _this.props.professionalTasks, _this.context.order, _this.context.datatypes.datatypes[pathArray.join(\".\")], _this.props.template.templateRules, _this.props.idJDT, _this.props.idComposition, _this.props.userInfo);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"buildInitialValueSection\", function (occurrences, pathLabel) {\n      buildSectionInitialValue(occurrences, pathLabel, _this.initialValuesEdit);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"buildValidationSection\", function (minOccurrences, pathLabel) {\n      buildSectionValidation(minOccurrences, pathLabel, _this.validationSchemaEdit);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"sectionConstructor\", function (item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation) {\n      var path = pathArray.join(\"-\");\n      if (buildAccordion && _this.accordionsSectionContainerEdit.filter(function (obj) {\n        return obj.id === path;\n      }).length === 0) {\n        var sections = _this.accordionsSectionContainerEdit;\n        sections.push({\n          id: path,\n          accordionOpen: true\n        });\n        _this.accordionsSectionContainerEdit = sections;\n      } // A cardinalidade só é processada se for um campo que não pode ser repetido => depois será validado no seu respetivo subForm\n\n      if (item.occurrences.upperOccurrences === 1 && item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences > 0) {\n        cardinalityObject[path] = [].concat(_toConsumableArray(handleCardinality(item, pathArray, _this.props.professionalTasks)), [item.node.text, item.cardinality.interval.lowerOccurrences]);\n      }\n      sectionNotMandatoryObject[path] = [].concat(_toConsumableArray(handleSectionValidation(item, pathArray, _this.props.professionalTasks)), [item.node.text, item.occurrences.lowerOccurrences]); // Só processo a validação da secção se for um campo que não pode ser repetido (depois será validado no seu respetivo subForm)\n      // e se tiver upperOccurrences diferente de 0\n\n      if (item.occurrences.lowerOccurrences !== 0 && item.occurrences.upperOccurrences === 1) {\n        // Por defeito, queremos que pelo menos um campo esteja preenchido => logo tenho 1\n        sectionValidation[path] = [].concat(_toConsumableArray(handleCardinality(item, pathArray, _this.props.professionalTasks)), [item.node.text, 1]);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"buildSectionEditMode\", function (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion) {\n      var path = pathArray.join(\"-\");\n      var section = pathArray.filter(function (x) {\n        return x === \"items\";\n      }).length;\n      if (item.occurrences.upperOccurrences !== 1) {\n        if (_this.multipleSections.filter(function (obj) {\n          return obj.path === pathArray.join(\"-\");\n        }).length === 0) {\n          var sections = _this.multipleSections;\n          var vals = [];\n          var occs = 0;\n          if (item.value) {\n            if (item.value.length > 0) {\n              vals = item.value;\n              occs = item.value.length;\n            }\n          }\n          sections.push({\n            path: pathArray.join(\"-\"),\n            jdt: item,\n            occurrences: occs,\n            minOccurrences: item.occurrences.lowerOccurrences,\n            values: vals\n          });\n          _this.multipleSections = sections;\n          _this.buildInitialValueSection(occs, pathArray.join(\"-\"));\n          _this.buildValidationSection(item.occurrences.lowerOccurrences, pathArray.join(\"-\"));\n        }\n        return /*#__PURE__*/React.createElement(SectionContainer, {\n          item: item,\n          values: values,\n          subForm: false,\n          sectionConstructor: function sectionConstructor() {\n            return _this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n          },\n          isTitleVisible: _this.context.datatypes.showSectionTitle && Object.keys(_this.context.datatypes.showSectionTitle).length > 0 ? _this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n          idJDT: _this.props.idJDT,\n          templateRules: _this.props.template.templateRules,\n          isMandatory: item.occurrences.lowerOccurrences !== 0,\n          order: _this.context.order ? _this.context.order[pathArray.join(\".\")] : null,\n          hsize: _this.context.sizes.sizes ? _this.context.sizes.sizes[pathArray.join(\".\")] : null,\n          handleAccordionMode: function handleAccordionMode() {\n            return _this.handleAccordionSectionContainerMode(path);\n          },\n          path: item.itemPath,\n          pathArray: pathArray,\n          accordionOpen: _this.accordionsSectionContainerEdit,\n          description: item.node === null ? \"\" : item.node.description,\n          key: itemIndex,\n          label: item.node.text,\n          professionalTasks: _this.props.professionalTasks\n        }, /*#__PURE__*/React.createElement(AddSectionButton, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          handleAddSection: function handleAddSection() {\n            return _this.handleAddSection(pathArray, setFieldValue, setFieldTouched);\n          },\n          disabled: item.occurrences.upperOccurrences === \"*\" ? false : _this.multipleSections.filter(function (obj) {\n            return obj.path === pathArray.join(\"-\");\n          })[0].occurrences >= item.occurrences.upperOccurrences\n        }), /*#__PURE__*/React.createElement(SectionsListEditMode, {\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\n          onEditSection: function onEditSection(sectionPath, id) {\n            return _this.handleEditSectionValue(sectionPath, id);\n          },\n          onRemoveSection: function onRemoveSection(sectionPath, id) {\n            return _this.handleRemoveSectionValue(sectionPath, id, setFieldValue);\n          },\n          sections: _this.multipleSections.filter(function (obj) {\n            return obj.path === pathArray.join(\"-\");\n          })[0]\n        }));\n      }\n      return /*#__PURE__*/React.createElement(SectionContainer, {\n        idJDT: _this.props.idJDT,\n        item: item,\n        values: values,\n        section: section,\n        sectionConstructor: function sectionConstructor() {\n          return _this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n        },\n        subForm: false,\n        isTitleVisible: _this.context.datatypes.showSectionTitle && Object.keys(_this.context.datatypes.showSectionTitle).length > 0 ? _this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\n        isMandatory: item.occurrences.lowerOccurrences !== 0,\n        templateRules: _this.props.template.templateRules,\n        order: _this.context.order ? _this.context.order[pathArray.join(\".\")] : null,\n        hsize: _this.context.sizes.sizes ? _this.context.sizes.sizes[pathArray.join(\".\")] : null,\n        cardinality: item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences,\n        handleAccordionMode: function handleAccordionMode() {\n          return _this.handleAccordionSectionContainerMode(path);\n        },\n        path: item.itemPath,\n        pathArray: pathArray,\n        accordionOpen: _this.accordionsSectionContainerEdit,\n        description: item.node === null ? \"\" : item.node.description,\n        key: itemIndex,\n        label: item.node.text,\n        professionalTasks: _this.props.professionalTasks\n      }, item.items.map(function (subItem, subItemIndex) {\n        var array = [];\n        array.push(\"items\", subItemIndex);\n        return _this.buildItemEditMode(subItem, subItemIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n      }), _this.props.formRM && _this.props.formRM.length > 0 && _this.props.formRM.flatMap(function (rm_item, rm_index) {\n        if (item.itemPath === rm_item.parentPath) {\n          return _this.buildItemEditMode(rm_item, rm_index, [\"rm\"].concat(rm_item.itemPath.split(\".\")), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\n        } else {\n          return [];\n        }\n      }), Object.keys(_this.context.sectionArchetype.sectionArchetype).filter(function (x) {\n        return _this.context.sectionArchetype.sectionArchetype[x].parentPath === pathArray.join(\".\");\n      }).map(function (x) {\n        return /*#__PURE__*/React.createElement(AddSectionContainer, {\n          key: x,\n          path: x,\n          order: _this.context.order ? _this.context.order[x] : null,\n          label: _this.context.sectionArchetype.sectionArchetype[x].sectionName\n        });\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"buildItemEditMode\", function (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, buildAccordion, sectionNotMandatoryObject, sectionValidation) {\n      if (item.data_type === \"Title\") {\n        return _this.buildSectionEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion);\n      } else {\n        if (Array.isArray(item)) {\n          return item.map(function (itemAny, itemAnyIndex) {\n            var array = [];\n            array.push(itemAnyIndex);\n            return _this.buildSingleItemEditMode(itemAny, itemAnyIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, true, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n          });\n        } else {\n          return _this.buildSingleItemEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, false, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\n        }\n      }\n    });\n    _this.multipleSections = []; // controlar as secções que podem ser multiplicadas\n\n    _this.accordionsSectionContainerEdit = []; // controlar o accordionMode\n\n    _this.initialValuesEdit = {}; // initialValues do formulário\n\n    _this.validationSchemaEdit = {}; // validationSchema do formulário\n    return _this;\n  }\n  _createClass(FormEditComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var form = /*#__PURE__*/React.createElement(Formik, {\n        initialValues: this.initialValuesEdit,\n        validationSchema: this.props.buttonClickType !== \"save\" && Yup.object().shape(this.validationSchemaEdit),\n        validateOnMount: this.props.buttonClickType !== \"save\" && true,\n        onSubmit: function () {\n          var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(values) {\n            var valuesToSend, files, count1, indexFiles, _iterator, _step, file, count2, path, pathValue, _iterator2, _step2, f, res, uri, obj;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    valuesToSend = _objectSpread({}, values); // ver se existem ficheiros multimedia carregados\n                    // em caso afirmativo, chamar o serviço do Eng. Bruno para cada entrada do array - sem o ID da composition nem do ficheiro\n                    files = _this2.props.multimediaFields; // array de objetos c/ o path + o file em base 64\n                    count1 = 0; // criar um array de objetos c/ os paths e os índices a remover no fim do processo\n                    indexFiles = [];\n                    if (!(files.length > 0)) {\n                      _context.next = 47;\n                      break;\n                    }\n                    _iterator = _createForOfIteratorHelper(files);\n                    _context.prev = 6;\n                    _iterator.s();\n                  case 8:\n                    if ((_step = _iterator.n()).done) {\n                      _context.next = 38;\n                      break;\n                    }\n                    file = _step.value;\n                    count2 = 0;\n                    path = Object.keys(file)[0].concat(\".value\").split(\".\").join(\"-\");\n                    pathValue = values[path];\n                    _iterator2 = _createForOfIteratorHelper(pathValue);\n                    _context.prev = 14;\n                    _iterator2.s();\n                  case 16:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context.next = 26;\n                      break;\n                    }\n                    f = _step2.value;\n                    if (!(count1 === count2)) {\n                      _context.next = 23;\n                      break;\n                    }\n                    _context.next = 21;\n                    return axios({\n                      method: \"post\",\n                      url: \"\".concat(getEnvUrl('aidaauth', '4000'), \"/saveMultimedia\"),\n                      headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: \"Bearer \" + _this2.context.token\n                      },\n                      data: {\n                        file: file,\n                        formTitle: _this2.props.formTitle,\n                        patientData: _this2.props.patientData,\n                        userInfo: _this2.props.userInfo,\n                        values: values,\n                        estado: \"1\"\n                      }\n                    });\n                  case 21:\n                    res = _context.sent;\n                    // DEVIDO À FIREWALL FOI NECESSÁRIO MIGRAR AS CHAMADAS PARA UM SERVIÇO FORA DA APP\n                    // let uri = await saveMultimediaFiles(file, this.props.formTitle, this.props.patientData, this.props.userInfo, values);\n\n                    if (res.data.success) {\n                      uri = res.data.fileData;\n                      f['URI'] = uri;\n                    } //caso dê erro remover a info do ficheiro e remover o ficheiro\n                    else {\n                      obj = {};\n                      obj[path] = count2;\n                      indexFiles.push(obj);\n                    }\n                  case 23:\n                    count2 += 1;\n                  case 24:\n                    _context.next = 16;\n                    break;\n                  case 26:\n                    _context.next = 31;\n                    break;\n                  case 28:\n                    _context.prev = 28;\n                    _context.t0 = _context[\"catch\"](14);\n                    _iterator2.e(_context.t0);\n                  case 31:\n                    _context.prev = 31;\n                    _iterator2.f();\n                    return _context.finish(31);\n                  case 34:\n                    count1 += 1;\n                    valuesToSend = _objectSpread(_objectSpread({}, values), {}, {\n                      pathValue: pathValue\n                    });\n                  case 36:\n                    _context.next = 8;\n                    break;\n                  case 38:\n                    _context.next = 43;\n                    break;\n                  case 40:\n                    _context.prev = 40;\n                    _context.t1 = _context[\"catch\"](6);\n                    _iterator.e(_context.t1);\n                  case 43:\n                    _context.prev = 43;\n                    _iterator.f();\n                    return _context.finish(43);\n                  case 46:\n                    //no fim de fazer todas as chamadas ao serviço, caso existam índices a remover\n\n                    indexFiles.length > 0 && indexFiles.forEach(function (item) {\n                      var pathOfFileToRemove = Object.keys(item)[0];\n                      var pathValueOfFileToRemove = valuesToSend[pathOfFileToRemove];\n                      pathValueOfFileToRemove.splice(item[pathOfFileToRemove], 1);\n                    });\n                  case 47:\n                    _this2.props.handleSubmit(valuesToSend, _this2.multipleSections);\n                  case 48:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[6, 40, 43, 46], [14, 28, 31, 34]]);\n          }));\n          function onSubmit(_x) {\n            return _onSubmit.apply(this, arguments);\n          }\n          return onSubmit;\n        }()\n      }, function (_ref) {\n        var values = _ref.values,\n          handleSubmit = _ref.handleSubmit,\n          setFieldValue = _ref.setFieldValue,\n          errors = _ref.errors,\n          touched = _ref.touched,\n          setFieldTouched = _ref.setFieldTouched;\n        return /*#__PURE__*/React.createElement(FormContainer, {\n          formTitle: _this2.props.formTitle,\n          description: _this2.props.template.node.description\n        }, /*#__PURE__*/React.createElement(FormHeader, {\n          accordions: _this2.accordionsSectionContainerEdit,\n          collapseSections: function collapseSections() {\n            return _this2.handleCollapseSections();\n          },\n          isCollapsed: _this2.state.isCollapsed,\n          showPrint: _this2.props.showPrint,\n          showInformacaoComplementar: _this2.props.showInformacaoComplementar,\n          showHeader: _this2.props.showHeader,\n          professionalTasks: _this2.props.professionalTasks,\n          template: _this2.props.template,\n          fields: _this2.context.formData.referenceModel\n        }), /*#__PURE__*/React.createElement(BodyContainer, null, _this2.props.template.items.map(function (attribute, index) {\n          return attribute.map(function (att, attIndex) {\n            var array = [];\n            array.push(\"items\", index, attIndex);\n            return _this2.buildItemEditMode(att, attIndex, array, setFieldValue, values, errors, touched, setFieldTouched, {}, true, {}, {});\n          });\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            order: _this2.context.order ? maxValueArray(Object.values(_this2.context.order)) + 1 : null\n          },\n          className: \"flex flex-row\"\n        }, _this2.props.canSave && /*#__PURE__*/React.createElement(SaveButton, {\n          canSubmit: _this2.props.canSubmit,\n          label: \"Gravar\",\n          disabled: _this2.props.saveButtonDisabled === true,\n          clicked: function clicked() {\n            _this2.props.handleButtonClicked(\"save\");\n            _this2.setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                checkValidation: !prevState.checkValidation\n              });\n            }, function () {\n              //this.props.handleButtonClicked(\"save\");\n              handleSubmit();\n            });\n          }\n        }), _this2.props.canSubmit && /*#__PURE__*/React.createElement(SubmitButton, {\n          label: \"Submeter\",\n          disabled: _this2.props.submitButtonDisabled === true ? true : !_this2.context.dlm.isDlmFinished,\n          clicked: function clicked() {\n            return _this2.setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                checkValidation: !prevState.checkValidation\n              });\n            }, function () {\n              _this2.props.handleButtonClicked(\"submit\");\n              handleSubmit();\n            });\n          }\n        }), _this2.props.canCancel && /*#__PURE__*/React.createElement(CancelButton, {\n          clicked: _this2.props.handleCancelForm\n        })));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", null, this.state.subForm.openSubForm && /*#__PURE__*/React.createElement(SubForm, {\n        level: this.state.subForm.path.split(\"-\").filter(function (x) {\n          return x === \"items\";\n        }).length,\n        template: this.props.template,\n        professionalTasks: this.props.professionalTasks,\n        idJDT: this.props.idJDT,\n        templateRules: this.props.template.templateRules,\n        editMode: true,\n        path: this.state.subForm.path,\n        onSubmitSubForm: function onSubmitSubForm(values) {\n          return _this2.handleSubmitSubForm(values, _this2.state.subForm.path, _this2.state.subForm.type, _this2.state.subForm.sectionId, _this2.state.subForm.setFieldValue);\n        },\n        onCancel: function onCancel() {\n          return _this2.handleCancelSubForm();\n        },\n        jdt: this.state.subForm.jdt\n      }), form);\n    }\n  }]);\n  return FormEditComponent;\n}(Component);\n_defineProperty(FormEditComponent, \"contextType\", CombinedContext);\nvar FormEditMode = function FormEditMode(props) {\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(FormEditComponent, props));\n};\nexport default FormEditMode;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Formik","ob","React","Component","Yup","handleCardinality","handleSectionValidation","processItemSection","maxValueArray","SectionsListEditMode","SubForm","AddSectionContainer","AddSectionButton","BodyContainer","CancelButton","FormContainer","FormHeader","SaveButton","SectionContainer","SubmitButton","buildSectionInitialValue","buildSectionValidation","CombinedContext","ProviderCombinedContext","buildDatatypeEditMode","axios","getEnvUrl","FormEditComponent","isCollapsed","checkValidation","subForm","openSubForm","sectionId","type","path","jdt","setFieldValue","setState","prevState","accordionsSectionContainerEdit","forEach","level","id","split","filter","x","length","accordionOpen","state","forceUpdate","newMode","breaked","i","pathArray","setFieldTouched","section","multipleSections","join","values","context","fields","updateValue","occurrence","occurrences","valuesSections","maxId","val","handleCancelSubForm","sectionPath","sectionValues","mergedJSON","JSON","parse","stringify","keys","label","indexRemove","jdtLabel","slice","set","item","itemIndex","errors","touched","isAny","cardinalityObject","sectionNotMandatoryObject","sectionValidation","itemSection","buildItemEditMode","dataType","initialValuesEdit","validationSchemaEdit","props","professionalTasks","order","datatypes","template","templateRules","idJDT","idComposition","userInfo","pathLabel","minOccurrences","buildAccordion","sections","push","upperOccurrences","cardinality","undefined","interval","lowerOccurrences","node","text","vals","occs","buildInitialValueSection","buildValidationSection","createElement","sectionConstructor","isTitleVisible","showSectionTitle","isMandatory","hsize","sizes","handleAccordionMode","handleAccordionSectionContainerMode","itemPath","description","error","handleAddSection","disabled","onEditSection","handleEditSectionValue","onRemoveSection","handleRemoveSectionValue","items","map","subItem","subItemIndex","array","concat","formRM","flatMap","rm_item","rm_index","parentPath","sectionArchetype","sectionName","data_type","buildSectionEditMode","Array","isArray","itemAny","itemAnyIndex","buildSingleItemEditMode","form","initialValues","validationSchema","buttonClickType","object","shape","validateOnMount","onSubmit","valuesToSend","files","multimediaFields","count1","indexFiles","file","count2","pathValue","f","method","url","headers","Authorization","token","data","formTitle","patientData","estado","res","success","uri","fileData","pathOfFileToRemove","pathValueOfFileToRemove","splice","handleSubmit","accordions","collapseSections","handleCollapseSections","showPrint","showInformacaoComplementar","showHeader","formData","referenceModel","attribute","index","att","attIndex","style","className","canSave","canSubmit","saveButtonDisabled","clicked","handleButtonClicked","submitButtonDisabled","dlm","isDlmFinished","canCancel","handleCancelForm","editMode","onSubmitSubForm","handleSubmitSubForm","onCancel","FormEditMode"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/FormModes/FormEditMode.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport { Formik } from \"formik\";\r\nimport ob from \"object-path\";\r\nimport React, { Component } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { handleCardinality } from \"../../../assets/functions/HandleCardinality/HandleCardinality\";\r\nimport { handleSectionValidation } from \"../../../assets/functions/HandleSectionValidation/handleSectionValidation\";\r\nimport { processItemSection } from \"../../../assets/functions/HandleSectionValidation/processItemSection\";\r\nimport { maxValueArray } from \"../../../assets/functions/Maximum/maxValueArray\";\r\nimport SectionsListEditMode from \"../../../components/SubForm/SectionsListEditMode\";\r\nimport SubForm from \"../../../components/SubForm/SubForm\";\r\nimport AddSectionContainer from \"../../../components/UI/AddSection/AddSectionContainer\";\r\nimport AddSectionButton from \"../../../components/UI/AddSectionButton/AddSectionButton\";\r\nimport BodyContainer from \"../../../components/UI/BodyContainer/BodyContainer\";\r\nimport CancelButton from \"../../../components/UI/CancelButton/CancelButton\";\r\nimport FormContainer from \"../../../components/UI/FormContainer/FormContainer\";\r\nimport FormHeader from \"../../../components/UI/FormHeader/FormHeader\";\r\nimport SaveButton from \"../../../components/UI/SaveButton/SaveButton\";\r\nimport SectionContainer from \"../../../components/UI/SectionContainer/SectionContainer\";\r\nimport SubmitButton from \"../../../components/UI/SubmitButton/SubmitButton\";\r\nimport { buildSectionInitialValue } from \"../FormInitialValues/BuildSectionInitialValue/BuildSectionInitialValue\";\r\nimport { buildSectionValidation } from \"../FormValidation/BuildSectionValidation/BuildSectionValidation\";\r\nimport CombinedContext from \"../../../contexts/CombinedContext\";\r\nimport ProviderCombinedContext from \"../../../contexts/ProviderCombinedContext\";\r\nimport * as buildDatatypeEditMode from \"../BuildItems/BuildItemEditMode/BuildItemEditMode/BuildItemEditMode\";\r\nimport axios from \"axios\";\r\nimport { getEnvUrl } from \"../../../environment\";\r\n\r\nclass FormEditComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    _defineProperty(this, \"state\", {\r\n      isCollapsed: false,\r\n      checkValidation: false,\r\n      subForm: {\r\n        openSubForm: false,\r\n        sectionId: \"\",\r\n        type: \"\",\r\n        path: \"\",\r\n        jdt: \"\",\r\n        setFieldValue: \"\"\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCollapseSections\", () => {\r\n      // Atualizar o isCollapsed\r\n      this.setState(prevState => ({ ...prevState,\r\n        isCollapsed: !prevState.isCollapsed\r\n      }));\r\n      this.accordionsSectionContainerEdit.forEach(obj => {\r\n        const level = obj.id.split(\"-\").filter(x => x === \"items\").length; // Colapsar apenas as secções do nível 1\r\n\r\n        if (level === 1) {\r\n          obj.accordionOpen = this.state.isCollapsed;\r\n        }\r\n      });\r\n      this.forceUpdate();\r\n    });\r\n\r\n    _defineProperty(this, \"handleAccordionSectionContainerMode\", path => {\r\n      this.accordionsSectionContainerEdit.forEach(function (obj) {\r\n        if (obj.id === path) {\r\n          let newMode = obj.accordionOpen;\r\n          obj.accordionOpen = !newMode;\r\n        }\r\n      }); // Ver se o formulário está collapsed\r\n\r\n      let breaked = false;\r\n\r\n      for (let i = 0; i < this.accordionsSectionContainerEdit.length; i++) {\r\n        const level = this.accordionsSectionContainerEdit[i].id.split(\"-\").filter(x => x === \"items\").length; // Collapsar apenas as secções do nível 1\r\n\r\n        if (level === 1) {\r\n          if (this.accordionsSectionContainerEdit[i].accordionOpen) {\r\n            this.setState({\r\n              isCollapsed: false\r\n            });\r\n            breaked = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!breaked) {\r\n        this.setState({\r\n          isCollapsed: true\r\n        });\r\n      }\r\n\r\n      this.forceUpdate();\r\n    });\r\n\r\n    _defineProperty(this, \"handleAddSection\", (pathArray, setFieldValue, setFieldTouched) => {\r\n      const section = this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0];\r\n      this.setState(prevState => ({ ...prevState,\r\n        subForm: { ...prevState.subForm,\r\n          openSubForm: true,\r\n          jdt: section.jdt,\r\n          path: section.path,\r\n          type: \"new\",\r\n          sectionId: \"\",\r\n          setFieldValue: setFieldValue\r\n        }\r\n      }));\r\n      setFieldTouched(pathArray.join(\"-\"));\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelSubForm\", () => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        subForm: { ...prevState.subForm,\r\n          openSubForm: false,\r\n          jdt: \"\",\r\n          path: \"\",\r\n          type: \"\",\r\n          sectionId: \"\",\r\n          setFieldValue: \"\"\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleSubmitSubForm\", (values, path, type, sectionId, setFieldValue = null) => {\r\n      this.context.fields.updateValue(`${path}-value`);\r\n\r\n      if (type === \"new\") {\r\n        this.multipleSections.forEach(function (obj) {\r\n          if (obj.path === path) {\r\n            const occurrence = obj.occurrences;\r\n            const valuesSections = obj.values;\r\n            let maxId = 0;\r\n            valuesSections.forEach(function (val) {\r\n              if (val.id >= maxId) {\r\n                maxId = val.id;\r\n              }\r\n            });\r\n            obj.occurrences = occurrence + 1;\r\n            obj.values = [...valuesSections, {\r\n              id: maxId + 1,\r\n              values: values\r\n            }];\r\n            setFieldValue(path, occurrence + 1);\r\n          }\r\n        });\r\n      } else if (type === \"edit\") {\r\n        this.multipleSections.forEach(function (obj) {\r\n          if (obj.path === path) {\r\n            const valuesSections = obj.values.filter(section => section.id !== sectionId);\r\n            obj.values = [...valuesSections, {\r\n              id: sectionId,\r\n              values: values\r\n            }];\r\n          }\r\n        });\r\n      }\r\n\r\n      this.handleCancelSubForm();\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveSectionValue\", (sectionPath, id, setFieldValue) => {\r\n      this.context.fields.updateValue(`${sectionPath}-value`);\r\n      this.multipleSections.forEach(function (obj) {\r\n        if (obj.path === sectionPath) {\r\n          const occurrence = obj.occurrences;\r\n          const valuesSections = obj.values.filter(obj => obj.id !== id);\r\n          obj.occurrences = occurrence - 1;\r\n          obj.values = valuesSections;\r\n          setFieldValue(sectionPath, occurrence - 1);\r\n        }\r\n      });\r\n      this.forceUpdate();\r\n    });\r\n\r\n    _defineProperty(this, \"handleEditSectionValue\", (sectionPath, id) => {\r\n      const section = this.multipleSections.filter(obj => obj.path === sectionPath)[0];\r\n      const sectionValues = section.values.filter(obj => obj.id === id)[0].values;\r\n      let mergedJSON = JSON.parse(JSON.stringify(section.jdt));\r\n      Object.keys(sectionValues).forEach(function (label) {\r\n        const indexRemove = sectionPath.split(\"-\").length;\r\n        const jdtLabel = label.split(\".\").slice(indexRemove);\r\n        ob.set(mergedJSON, jdtLabel, sectionValues[label]);\r\n      });\r\n      this.setState(prevState => ({ ...prevState,\r\n        subForm: { ...prevState.subForm,\r\n          openSubForm: true,\r\n          jdt: mergedJSON,\r\n          path: section.path,\r\n          type: \"edit\",\r\n          sectionId: id\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"buildSingleItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\r\n      const itemSection = processItemSection(pathArray, isAny, sectionNotMandatoryObject);\r\n      return buildDatatypeEditMode.buildItemEditMode(item.dataType, item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, this.initialValuesEdit, this.validationSchemaEdit, itemSection, this.multipleSections, this.props.professionalTasks, this.context.order, this.context.datatypes.datatypes[pathArray.join(\".\")], this.props.template.templateRules, this.props.idJDT, this.props.idComposition, this.props.userInfo);\r\n    });\r\n\r\n    _defineProperty(this, \"buildInitialValueSection\", (occurrences, pathLabel) => {\r\n      buildSectionInitialValue(occurrences, pathLabel, this.initialValuesEdit);\r\n    });\r\n\r\n    _defineProperty(this, \"buildValidationSection\", (minOccurrences, pathLabel) => {\r\n      buildSectionValidation(minOccurrences, pathLabel, this.validationSchemaEdit);\r\n    });\r\n\r\n    _defineProperty(this, \"sectionConstructor\", (item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation) => {\r\n      let path = pathArray.join(\"-\");\r\n\r\n      if (buildAccordion && this.accordionsSectionContainerEdit.filter(obj => obj.id === path).length === 0) {\r\n        let sections = this.accordionsSectionContainerEdit;\r\n        sections.push({\r\n          id: path,\r\n          accordionOpen: true\r\n        });\r\n        this.accordionsSectionContainerEdit = sections;\r\n      } // A cardinalidade só é processada se for um campo que não pode ser repetido => depois será validado no seu respetivo subForm\r\n\r\n\r\n      if (item.occurrences.upperOccurrences === 1 && item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences > 0) {\r\n        cardinalityObject[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, item.cardinality.interval.lowerOccurrences];\r\n      }\r\n\r\n      sectionNotMandatoryObject[path] = [...handleSectionValidation(item, pathArray, this.props.professionalTasks), item.node.text, item.occurrences.lowerOccurrences]; // Só processo a validação da secção se for um campo que não pode ser repetido (depois será validado no seu respetivo subForm)\r\n      // e se tiver upperOccurrences diferente de 0\r\n\r\n      if (item.occurrences.lowerOccurrences !== 0 && item.occurrences.upperOccurrences === 1) {\r\n        // Por defeito, queremos que pelo menos um campo esteja preenchido => logo tenho 1\r\n        sectionValidation[path] = [...handleCardinality(item, pathArray, this.props.professionalTasks), item.node.text, 1];\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"buildSectionEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion) => {\r\n      const path = pathArray.join(\"-\");\r\n      const section = pathArray.filter(x => x === \"items\").length;\r\n\r\n      if (item.occurrences.upperOccurrences !== 1) {\r\n        if (this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\")).length === 0) {\r\n          let sections = this.multipleSections;\r\n          let vals = [];\r\n          let occs = 0;\r\n\r\n          if (item.value) {\r\n            if (item.value.length > 0) {\r\n              vals = item.value;\r\n              occs = item.value.length;\r\n            }\r\n          }\r\n\r\n          sections.push({\r\n            path: pathArray.join(\"-\"),\r\n            jdt: item,\r\n            occurrences: occs,\r\n            minOccurrences: item.occurrences.lowerOccurrences,\r\n            values: vals\r\n          });\r\n          this.multipleSections = sections;\r\n          this.buildInitialValueSection(occs, pathArray.join(\"-\"));\r\n          this.buildValidationSection(item.occurrences.lowerOccurrences, pathArray.join(\"-\"));\r\n        }\r\n\r\n        return /*#__PURE__*/React.createElement(SectionContainer, {\r\n          item: item,\r\n          values: values,\r\n          subForm: false,\r\n          sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\r\n          isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\r\n          idJDT: this.props.idJDT,\r\n          templateRules: this.props.template.templateRules,\r\n          isMandatory: item.occurrences.lowerOccurrences !== 0,\r\n          order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\r\n          hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\r\n          handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\r\n          path: item.itemPath,\r\n          pathArray: pathArray,\r\n          accordionOpen: this.accordionsSectionContainerEdit,\r\n          description: item.node === null ? \"\" : item.node.description,\r\n          key: itemIndex,\r\n          label: item.node.text,\r\n          professionalTasks: this.props.professionalTasks\r\n        }, /*#__PURE__*/React.createElement(AddSectionButton, {\r\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\r\n          handleAddSection: () => this.handleAddSection(pathArray, setFieldValue, setFieldTouched),\r\n          disabled: item.occurrences.upperOccurrences === \"*\" ? false : this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0].occurrences >= item.occurrences.upperOccurrences\r\n        }), /*#__PURE__*/React.createElement(SectionsListEditMode, {\r\n          error: touched[pathArray.join(\"-\")] && errors[pathArray.join(\"-\")],\r\n          onEditSection: (sectionPath, id) => this.handleEditSectionValue(sectionPath, id),\r\n          onRemoveSection: (sectionPath, id) => this.handleRemoveSectionValue(sectionPath, id, setFieldValue),\r\n          sections: this.multipleSections.filter(obj => obj.path === pathArray.join(\"-\"))[0]\r\n        }));\r\n      }\r\n\r\n      return /*#__PURE__*/React.createElement(SectionContainer, {\r\n        idJDT: this.props.idJDT,\r\n        item: item,\r\n        values: values,\r\n        section: section,\r\n        sectionConstructor: () => this.sectionConstructor(item, pathArray, buildAccordion, cardinalityObject, sectionNotMandatoryObject, sectionValidation),\r\n        subForm: false,\r\n        isTitleVisible: this.context.datatypes.showSectionTitle && Object.keys(this.context.datatypes.showSectionTitle).length > 0 ? this.context.datatypes.showSectionTitle[pathArray.join(\".\")] : true,\r\n        isMandatory: item.occurrences.lowerOccurrences !== 0,\r\n        templateRules: this.props.template.templateRules,\r\n        order: this.context.order ? this.context.order[pathArray.join(\".\")] : null,\r\n        hsize: this.context.sizes.sizes ? this.context.sizes.sizes[pathArray.join(\".\")] : null,\r\n        cardinality: item.cardinality !== undefined && item.cardinality.interval.lowerOccurrences,\r\n        handleAccordionMode: () => this.handleAccordionSectionContainerMode(path),\r\n        path: item.itemPath,\r\n        pathArray: pathArray,\r\n        accordionOpen: this.accordionsSectionContainerEdit,\r\n        description: item.node === null ? \"\" : item.node.description,\r\n        key: itemIndex,\r\n        label: item.node.text,\r\n        professionalTasks: this.props.professionalTasks\r\n      }, item.items.map((subItem, subItemIndex) => {\r\n        let array = [];\r\n        array.push(\"items\", subItemIndex);\r\n        return this.buildItemEditMode(subItem, subItemIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\r\n      }), this.props.formRM && this.props.formRM.length > 0 && this.props.formRM.flatMap((rm_item, rm_index) => {\r\n        if (item.itemPath === rm_item.parentPath) {\r\n          return this.buildItemEditMode(rm_item, rm_index, [\"rm\"].concat(rm_item.itemPath.split(\".\")), setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, true, sectionNotMandatoryObject, sectionValidation);\r\n        } else {\r\n          return [];\r\n        }\r\n      }), Object.keys(this.context.sectionArchetype.sectionArchetype).filter(x => this.context.sectionArchetype.sectionArchetype[x].parentPath === pathArray.join(\".\")).map(x => {\r\n        return /*#__PURE__*/React.createElement(AddSectionContainer, {\r\n          key: x,\r\n          path: x,\r\n          order: this.context.order ? this.context.order[x] : null,\r\n          label: this.context.sectionArchetype.sectionArchetype[x].sectionName\r\n        });\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"buildItemEditMode\", (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, buildAccordion, sectionNotMandatoryObject, sectionValidation) => {\r\n      if (item.data_type === \"Title\") {\r\n        return this.buildSectionEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, cardinalityObject, sectionNotMandatoryObject, sectionValidation, buildAccordion);\r\n      } else {\r\n        if (Array.isArray(item)) {\r\n          return item.map((itemAny, itemAnyIndex) => {\r\n            let array = [];\r\n            array.push(itemAnyIndex);\r\n            return this.buildSingleItemEditMode(itemAny, itemAnyIndex, pathArray.concat(array), setFieldValue, values, errors, touched, setFieldTouched, true, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\r\n          });\r\n        } else {\r\n          return this.buildSingleItemEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, false, cardinalityObject, sectionNotMandatoryObject, sectionValidation);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.multipleSections = []; // controlar as secções que podem ser multiplicadas\r\n\r\n    this.accordionsSectionContainerEdit = []; // controlar o accordionMode\r\n\r\n    this.initialValuesEdit = {}; // initialValues do formulário\r\n\r\n    this.validationSchemaEdit = {}; // validationSchema do formulário\r\n  }\r\n\r\n  render() {\r\n    const form = /*#__PURE__*/React.createElement(Formik, {\r\n      initialValues: this.initialValuesEdit,\r\n      validationSchema: this.props.buttonClickType !== \"save\" && Yup.object().shape(this.validationSchemaEdit),\r\n      validateOnMount: this.props.buttonClickType !== \"save\" && true,\r\n      onSubmit: async values => {\r\n        let valuesToSend = { ...values\r\n        }; // ver se existem ficheiros multimedia carregados\r\n        // em caso afirmativo, chamar o serviço do Eng. Bruno para cada entrada do array - sem o ID da composition nem do ficheiro\r\n\r\n        let files = this.props.multimediaFields; // array de objetos c/ o path + o file em base 64\r\n\r\n        let count1 = 0; // criar um array de objetos c/ os paths e os índices a remover no fim do processo\r\n\r\n        let indexFiles = [];\r\n\r\n        if (files.length > 0) {\r\n          for (let file of files) {\r\n            let count2 = 0;\r\n            let path = Object.keys(file)[0].concat(\".value\").split(\".\").join(\"-\");\r\n            let pathValue = values[path];\r\n\r\n            for (let f of pathValue) {\r\n              if (count1 === count2) {\r\n                let res = await axios({\r\n                  method: \"post\",\r\n                  url: `${getEnvUrl('aidaauth', '4000')}/saveMultimedia`,\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: \"Bearer \" + this.context.token\r\n                  },\r\n                  data: {\r\n                    file: file,\r\n                    formTitle: this.props.formTitle,\r\n                    patientData: this.props.patientData,\r\n                    userInfo: this.props.userInfo,\r\n                    values: values,\r\n                    estado: \"1\"\r\n                  }\r\n                }); // DEVIDO À FIREWALL FOI NECESSÁRIO MIGRAR AS CHAMADAS PARA UM SERVIÇO FORA DA APP\r\n                // let uri = await saveMultimediaFiles(file, this.props.formTitle, this.props.patientData, this.props.userInfo, values);\r\n\r\n                if (res.data.success) {\r\n                  let uri = res.data.fileData;\r\n                  f['URI'] = uri;\r\n                } //caso dê erro remover a info do ficheiro e remover o ficheiro\r\n                else {\r\n                    let obj = {};\r\n                    obj[path] = count2;\r\n                    indexFiles.push(obj);\r\n                  }\r\n              }\r\n\r\n              count2 += 1;\r\n            }\r\n\r\n            count1 += 1;\r\n            valuesToSend = { ...values,\r\n              pathValue\r\n            };\r\n          } //no fim de fazer todas as chamadas ao serviço, caso existam índices a remover\r\n\r\n\r\n          indexFiles.length > 0 && indexFiles.forEach(item => {\r\n            let pathOfFileToRemove = Object.keys(item)[0];\r\n            let pathValueOfFileToRemove = valuesToSend[pathOfFileToRemove];\r\n            pathValueOfFileToRemove.splice(item[pathOfFileToRemove], 1);\r\n          });\r\n        }\r\n\r\n        this.props.handleSubmit(valuesToSend, this.multipleSections);\r\n      }\r\n    }, ({\r\n      values,\r\n      handleSubmit,\r\n      setFieldValue,\r\n      errors,\r\n      touched,\r\n      setFieldTouched\r\n    }) => /*#__PURE__*/React.createElement(FormContainer, {\r\n      formTitle: this.props.formTitle,\r\n      description: this.props.template.node.description\r\n    }, /*#__PURE__*/React.createElement(FormHeader, {\r\n      accordions: this.accordionsSectionContainerEdit,\r\n      collapseSections: () => this.handleCollapseSections(),\r\n      isCollapsed: this.state.isCollapsed,\r\n      showPrint: this.props.showPrint,\r\n      showInformacaoComplementar: this.props.showInformacaoComplementar,\r\n      showHeader: this.props.showHeader,\r\n      professionalTasks: this.props.professionalTasks,\r\n      template: this.props.template,\r\n      fields: this.context.formData.referenceModel\r\n    }), /*#__PURE__*/React.createElement(BodyContainer, null, this.props.template.items.map((attribute, index) => {\r\n      return attribute.map((att, attIndex) => {\r\n        let array = [];\r\n        array.push(\"items\", index, attIndex);\r\n        return this.buildItemEditMode(att, attIndex, array, setFieldValue, values, errors, touched, setFieldTouched, {}, true, {}, {});\r\n      });\r\n    })), /*#__PURE__*/React.createElement(\"div\", {\r\n      style: {\r\n        order: this.context.order ? maxValueArray(Object.values(this.context.order)) + 1 : null\r\n      },\r\n      className: \"flex flex-row\"\r\n    }, this.props.canSave && /*#__PURE__*/React.createElement(SaveButton, {\r\n      canSubmit: this.props.canSubmit,\r\n      label: \"Gravar\",\r\n      disabled: this.props.saveButtonDisabled === true,\r\n      clicked: () => {\r\n        this.props.handleButtonClicked(\"save\");\r\n        this.setState(prevState => ({ ...prevState,\r\n          checkValidation: !prevState.checkValidation\r\n        }), () => {\r\n          //this.props.handleButtonClicked(\"save\");\r\n          handleSubmit();\r\n        });\r\n      }\r\n    }), this.props.canSubmit && /*#__PURE__*/React.createElement(SubmitButton, {\r\n      label: \"Submeter\",\r\n      disabled: this.props.submitButtonDisabled === true ? true : !this.context.dlm.isDlmFinished,\r\n      clicked: () => this.setState(prevState => ({ ...prevState,\r\n        checkValidation: !prevState.checkValidation\r\n      }), () => {\r\n        this.props.handleButtonClicked(\"submit\");\r\n        handleSubmit();\r\n      })\r\n    }), this.props.canCancel && /*#__PURE__*/React.createElement(CancelButton, {\r\n      clicked: this.props.handleCancelForm\r\n    }))));\r\n    return /*#__PURE__*/React.createElement(\"div\", null, this.state.subForm.openSubForm && /*#__PURE__*/React.createElement(SubForm, {\r\n      level: this.state.subForm.path.split(\"-\").filter(x => x === \"items\").length,\r\n      template: this.props.template,\r\n      professionalTasks: this.props.professionalTasks,\r\n      idJDT: this.props.idJDT,\r\n      templateRules: this.props.template.templateRules,\r\n      editMode: true,\r\n      path: this.state.subForm.path,\r\n      onSubmitSubForm: values => this.handleSubmitSubForm(values, this.state.subForm.path, this.state.subForm.type, this.state.subForm.sectionId, this.state.subForm.setFieldValue),\r\n      onCancel: () => this.handleCancelSubForm(),\r\n      jdt: this.state.subForm.jdt\r\n    }), form);\r\n  }\r\n\r\n}\r\n\r\n_defineProperty(FormEditComponent, \"contextType\", CombinedContext);\r\n\r\nconst FormEditMode = props => {\r\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(FormEditComponent, props));\r\n};\r\n\r\nexport default FormEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}