{"ast":null,"code":"import styles from \"./Styles\";\nimport * as buildDatatype from \"./BuildItemPDF/BuildItemPDF\";\nimport { patientMetadata } from \"./FormHeader/PatientMetadata\";\nimport { titleForm } from \"./FormHeader/TitleForm\";\nimport { formMetadata } from \"./FormHeader/FormMetadata\";\nimport ob from \"object-path\";\nimport { handleInReport } from \"../../assets/functions/HandleTasks/handleInReport\";\nconst getTableWidths = index => {\n  let widths;\n  if (index === 1) {\n    widths = [\"0%\", \"100%\"];\n  } else if (index === 2) {\n    widths = [\"2%\", \"98%\"];\n  } else if (index === 3) {\n    widths = [\"4%\", \"96%\"];\n  } else if (index === 4) {\n    widths = [\"6%\", \"94%\"];\n  } else if (index === 5) {\n    widths = [\"8%\", \"92%\"];\n  } else if (index === 6) {\n    widths = [\"10%\", \"90%\"];\n  } else if (index > 6) {\n    const infVal = 10 + 2 * (index - 6);\n    const supVal = 90 - 2 * (index - 6);\n    const infLimit = infVal.toString() + \"%\";\n    const supLimit = supVal.toString() + \"%\";\n    widths = [infLimit, supLimit];\n  }\n  return widths;\n};\nconst buildSubForm = (jdt, values, pathArray, index, professionalTasks) => {\n  let mergedJSON = JSON.parse(JSON.stringify(jdt));\n  Object.keys(values).forEach(function (label) {\n    const indexRemove = pathArray.length;\n    const jdtLabel = label.split(\".\").slice(indexRemove);\n    ob.set(mergedJSON, jdtLabel, values[label]);\n    const sectionTitle = jdt.node.text;\n    const n = index + 1;\n    ob.set(mergedJSON, [\"node\", \"text\"], sectionTitle + \" (\" + n + \")\");\n  });\n  return buildItemSubForm(mergedJSON, pathArray, professionalTasks);\n};\nconst buildSingleItem = function (item, pathArray) {\n  let isAny = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let showLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let professionalTasks = arguments.length > 4 ? arguments[4] : undefined;\n  let inReport;\n  if (!item.TaskInReport) {\n    inReport = false;\n  } else {\n    inReport = handleInReport(item, professionalTasks);\n  }\n  if (inReport) {\n    const section = pathArray.filter(x => x === \"items\").length - 1;\n    const widths = getTableWidths(section);\n    return buildDatatype.buildItemPDF(item.dataType, item, widths, isAny, showLabel);\n  }\n};\nconst buildSection = (item, pathArray, professionalTasks) => {\n  const section = pathArray.filter(x => x === \"items\").length;\n  const widths = getTableWidths(section);\n  let sectionStyle = 1;\n  if (section > 4) {\n    sectionStyle = 4;\n  } else {\n    sectionStyle = section;\n  }\n  let subItems = item.items.map((subItem, subItemIndex) => {\n    let array = [];\n    array.push(\"items\", subItemIndex);\n    return buildItem(subItem, pathArray.concat(array), professionalTasks);\n  });\n  let sectionContainer = {\n    table: {\n      dontBreakRows: true,\n      widths: widths,\n      body: [[{\n        text: \" \",\n        border: [false, false, false, false]\n      }, {\n        text: item.node.text,\n        border: [false, false, false, true],\n        style: \"section\" + sectionStyle\n      }]]\n    },\n    layout: {\n      hLineWidth: function (i, node) {\n        return 0.5;\n      },\n      vLineWidth: function (i, node) {\n        return 0.5;\n      },\n      hLineColor: function (i, node) {\n        return \"black\";\n      },\n      vLineColor: function (i, node) {\n        return \"black\";\n      }\n    }\n  };\n  return [sectionContainer, subItems];\n};\nconst buildItemSubForm = (item, pathArray, professionalTasks) => {\n  if (item.data_type === \"Title\") {\n    let inReport;\n    if (!item.TaskInReport) {\n      inReport = false;\n    } else {\n      inReport = handleInReport(item, professionalTasks);\n    }\n    if (inReport) {\n      return buildSection(item, pathArray, professionalTasks);\n    }\n  } else {\n    if (Array.isArray(item)) {\n      let writtenFields = 0;\n      item.forEach(function (obj) {\n        if (obj.dataType === \"DV_CODED_TEXT\" && obj.value !== null || obj.dataType === \"DV_TEXT\" && obj.value !== null) {\n          writtenFields += 1;\n        }\n      });\n      let showLabel = 0;\n      return item.map((itemAny, itemAnyIndex) => {\n        if (writtenFields === 0 && itemAnyIndex === 0 || writtenFields !== 0 && itemAny.dataType === \"DV_CODED_TEXT\" && itemAny.value !== null || writtenFields !== 0 && itemAny.dataType === \"DV_TEXT\" && itemAny.value !== null) {\n          showLabel += 1;\n          return buildSingleItem(itemAny, pathArray, true, showLabel, professionalTasks);\n        }\n        return null;\n      });\n    } else {\n      return buildSingleItem(item, pathArray, false, 0, professionalTasks);\n    }\n  }\n};\nconst buildItem = (item, pathArray, professionalTasks) => {\n  if (item.data_type === \"Title\") {\n    let inReport;\n    if (!item.TaskInReport) {\n      inReport = false;\n    } else {\n      inReport = handleInReport(item, professionalTasks);\n    }\n    if (inReport) {\n      if (Array.isArray(item.value)) {\n        if (item.value.length > 0) {\n          return item.value.map((section, index) => {\n            if (section.values) {\n              return buildSubForm(item, section.values, pathArray, index, professionalTasks);\n            }\n            /*eslint array-callback-return: [\"error\", { allowImplicit: true }]*/\n\n            return; // retorna nada\n          });\n        }\n      }\n\n      return buildSection(item, pathArray, professionalTasks);\n    }\n  } else {\n    if (Array.isArray(item)) {\n      let writtenFields = 0;\n      item.forEach(function (obj) {\n        if (obj.dataType === \"DV_CODED_TEXT\" && obj.value !== null || obj.dataType === \"DV_TEXT\" && obj.value !== null) {\n          writtenFields += 1;\n        }\n      });\n      let showLabel = 0;\n      return item.map((itemAny, itemAnyIndex) => {\n        if (writtenFields === 0 && itemAnyIndex === 0 || writtenFields !== 0 && itemAny.dataType === \"DV_CODED_TEXT\" && itemAny.value !== null || writtenFields !== 0 && itemAny.dataType === \"DV_TEXT\" && itemAny.value !== null) {\n          showLabel += 1;\n          return buildSingleItem(itemAny, pathArray, true, showLabel, professionalTasks);\n        }\n        return null;\n      });\n    } else {\n      return buildSingleItem(item, pathArray, false, 0, professionalTasks);\n    }\n  }\n};\nconst getFormContent = (template, professionalTasks) => {\n  let inReport;\n  if (!template.TaskInReport) {\n    inReport = false;\n  } else {\n    inReport = handleInReport(template, professionalTasks);\n  }\n  if (inReport) {\n    let form = template.items.map((attribute, index) => {\n      return attribute.map((att, attIndex) => {\n        let array = [];\n        att.TaskVisible.length > 0 && array.push(\"items\", index, attIndex);\n        return att.TaskVisible.length > 0 ? buildItem(att, array, professionalTasks) : null;\n      });\n    });\n    return form;\n  }\n};\nconst formDefinition = (template, professionalTasks, patientData, reportData) => {\n  let formContent = getFormContent(template, professionalTasks);\n  let form = {\n    info: {\n      title: template.node.text\n    },\n    pageSize: \"A4\",\n    pageOrientation: \"portrait\",\n    pageMargins: [40, 50, 40, 50],\n    content: [titleForm(template), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, patientMetadata(patientData), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, formMetadata(reportData), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, formContent],\n    styles: styles,\n    pageBreakBefore: function (currentNode, followingNodesOnPage, nodesOnNextPage, previousNodesOnPage) {\n      return currentNode.headlineLevel === 1 && followingNodesOnPage.length === 0;\n    },\n    header: function (currentPage, pageCount, pageSize) {\n      if (currentPage !== 1) {\n        return [{\n          text: [patientData.episodio, \" - \", patientData.nome, \" - \", \"Nome Serviço\"],\n          style: \"footer\"\n        }];\n      }\n    },\n    footer: function (currentPage, pageCount) {\n      return [{\n        text: \"Centro Hospitalar do Porto - Página \" + currentPage.toString() + \" de \" + pageCount,\n        style: \"footer\"\n      }];\n    }\n  };\n  return form;\n};\nexport { formDefinition };","map":{"version":3,"names":["styles","buildDatatype","patientMetadata","titleForm","formMetadata","ob","handleInReport","getTableWidths","index","widths","infVal","supVal","infLimit","toString","supLimit","buildSubForm","jdt","values","pathArray","professionalTasks","mergedJSON","JSON","parse","stringify","Object","keys","forEach","label","indexRemove","length","jdtLabel","split","slice","set","sectionTitle","node","text","n","buildItemSubForm","buildSingleItem","item","isAny","showLabel","inReport","TaskInReport","section","filter","x","buildItemPDF","dataType","buildSection","sectionStyle","subItems","items","map","subItem","subItemIndex","array","push","buildItem","concat","sectionContainer","table","dontBreakRows","body","border","style","layout","hLineWidth","i","vLineWidth","hLineColor","vLineColor","data_type","Array","isArray","writtenFields","obj","value","itemAny","itemAnyIndex","getFormContent","template","form","attribute","att","attIndex","TaskVisible","formDefinition","patientData","reportData","formContent","info","title","pageSize","pageOrientation","pageMargins","content","pageBreakBefore","currentNode","followingNodesOnPage","nodesOnNextPage","previousNodesOnPage","headlineLevel","header","currentPage","pageCount","episodio","nome","footer"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/PrintForm/FormDefinition.js"],"sourcesContent":["import styles from \"./Styles\";\nimport * as buildDatatype from \"./BuildItemPDF/BuildItemPDF\";\nimport { patientMetadata } from \"./FormHeader/PatientMetadata\";\nimport { titleForm } from \"./FormHeader/TitleForm\";\nimport { formMetadata } from \"./FormHeader/FormMetadata\";\nimport ob from \"object-path\";\nimport { handleInReport } from \"../../assets/functions/HandleTasks/handleInReport\";\n\nconst getTableWidths = index => {\n  let widths;\n\n  if (index === 1) {\n    widths = [\"0%\", \"100%\"];\n  } else if (index === 2) {\n    widths = [\"2%\", \"98%\"];\n  } else if (index === 3) {\n    widths = [\"4%\", \"96%\"];\n  } else if (index === 4) {\n    widths = [\"6%\", \"94%\"];\n  } else if (index === 5) {\n    widths = [\"8%\", \"92%\"];\n  } else if (index === 6) {\n    widths = [\"10%\", \"90%\"];\n  } else if (index > 6) {\n    const infVal = 10 + 2 * (index - 6);\n    const supVal = 90 - 2 * (index - 6);\n    const infLimit = infVal.toString() + \"%\";\n    const supLimit = supVal.toString() + \"%\";\n    widths = [infLimit, supLimit];\n  }\n\n  return widths;\n};\n\nconst buildSubForm = (jdt, values, pathArray, index, professionalTasks) => {\n  let mergedJSON = JSON.parse(JSON.stringify(jdt));\n  Object.keys(values).forEach(function (label) {\n    const indexRemove = pathArray.length;\n    const jdtLabel = label.split(\".\").slice(indexRemove);\n    ob.set(mergedJSON, jdtLabel, values[label]);\n    const sectionTitle = jdt.node.text;\n    const n = index + 1;\n    ob.set(mergedJSON, [\"node\", \"text\"], sectionTitle + \" (\" + n + \")\");\n  });\n  return buildItemSubForm(mergedJSON, pathArray, professionalTasks);\n};\n\nconst buildSingleItem = (item, pathArray, isAny = false, showLabel = 0, professionalTasks) => {\n  let inReport;\n\n  if (!item.TaskInReport) {\n    inReport = false;\n  } else {\n    inReport = handleInReport(item, professionalTasks);\n  }\n\n  if (inReport) {\n    const section = pathArray.filter(x => x === \"items\").length - 1;\n    const widths = getTableWidths(section);\n    return buildDatatype.buildItemPDF(item.dataType, item, widths, isAny, showLabel);\n  }\n};\n\nconst buildSection = (item, pathArray, professionalTasks) => {\n  const section = pathArray.filter(x => x === \"items\").length;\n  const widths = getTableWidths(section);\n  let sectionStyle = 1;\n\n  if (section > 4) {\n    sectionStyle = 4;\n  } else {\n    sectionStyle = section;\n  }\n\n  let subItems = item.items.map((subItem, subItemIndex) => {\n    let array = [];\n    array.push(\"items\", subItemIndex);\n    return buildItem(subItem, pathArray.concat(array), professionalTasks);\n  });\n  let sectionContainer = {\n    table: {\n      dontBreakRows: true,\n      widths: widths,\n      body: [[{\n        text: \" \",\n        border: [false, false, false, false]\n      }, {\n        text: item.node.text,\n        border: [false, false, false, true],\n        style: \"section\" + sectionStyle\n      }]]\n    },\n    layout: {\n      hLineWidth: function (i, node) {\n        return 0.5;\n      },\n      vLineWidth: function (i, node) {\n        return 0.5;\n      },\n      hLineColor: function (i, node) {\n        return \"black\";\n      },\n      vLineColor: function (i, node) {\n        return \"black\";\n      }\n    }\n  };\n  return [sectionContainer, subItems];\n};\n\nconst buildItemSubForm = (item, pathArray, professionalTasks) => {\n  if (item.data_type === \"Title\") {\n    let inReport;\n\n    if (!item.TaskInReport) {\n      inReport = false;\n    } else {\n      inReport = handleInReport(item, professionalTasks);\n    }\n\n    if (inReport) {\n      return buildSection(item, pathArray, professionalTasks);\n    }\n  } else {\n    if (Array.isArray(item)) {\n      let writtenFields = 0;\n      item.forEach(function (obj) {\n        if (obj.dataType === \"DV_CODED_TEXT\" && obj.value !== null || obj.dataType === \"DV_TEXT\" && obj.value !== null) {\n          writtenFields += 1;\n        }\n      });\n      let showLabel = 0;\n      return item.map((itemAny, itemAnyIndex) => {\n        if (writtenFields === 0 && itemAnyIndex === 0 || writtenFields !== 0 && itemAny.dataType === \"DV_CODED_TEXT\" && itemAny.value !== null || writtenFields !== 0 && itemAny.dataType === \"DV_TEXT\" && itemAny.value !== null) {\n          showLabel += 1;\n          return buildSingleItem(itemAny, pathArray, true, showLabel, professionalTasks);\n        }\n\n        return null;\n      });\n    } else {\n      return buildSingleItem(item, pathArray, false, 0, professionalTasks);\n    }\n  }\n};\n\nconst buildItem = (item, pathArray, professionalTasks) => {\n  if (item.data_type === \"Title\") {\n    let inReport;\n\n    if (!item.TaskInReport) {\n      inReport = false;\n    } else {\n      inReport = handleInReport(item, professionalTasks);\n    }\n\n    if (inReport) {\n      if (Array.isArray(item.value)) {\n        if (item.value.length > 0) {\n          return item.value.map((section, index) => {\n            if (section.values) {\n              return buildSubForm(item, section.values, pathArray, index, professionalTasks);\n            }\n            /*eslint array-callback-return: [\"error\", { allowImplicit: true }]*/\n\n\n            return; // retorna nada\n          });\n        }\n      }\n\n      return buildSection(item, pathArray, professionalTasks);\n    }\n  } else {\n    if (Array.isArray(item)) {\n      let writtenFields = 0;\n      item.forEach(function (obj) {\n        if (obj.dataType === \"DV_CODED_TEXT\" && obj.value !== null || obj.dataType === \"DV_TEXT\" && obj.value !== null) {\n          writtenFields += 1;\n        }\n      });\n      let showLabel = 0;\n      return item.map((itemAny, itemAnyIndex) => {\n        if (writtenFields === 0 && itemAnyIndex === 0 || writtenFields !== 0 && itemAny.dataType === \"DV_CODED_TEXT\" && itemAny.value !== null || writtenFields !== 0 && itemAny.dataType === \"DV_TEXT\" && itemAny.value !== null) {\n          showLabel += 1;\n          return buildSingleItem(itemAny, pathArray, true, showLabel, professionalTasks);\n        }\n\n        return null;\n      });\n    } else {\n      return buildSingleItem(item, pathArray, false, 0, professionalTasks);\n    }\n  }\n};\n\nconst getFormContent = (template, professionalTasks) => {\n  let inReport;\n\n  if (!template.TaskInReport) {\n    inReport = false;\n  } else {\n    inReport = handleInReport(template, professionalTasks);\n  }\n\n  if (inReport) {\n    let form = template.items.map((attribute, index) => {\n      return attribute.map((att, attIndex) => {\n        let array = [];\n        att.TaskVisible.length > 0 && array.push(\"items\", index, attIndex);\n        return att.TaskVisible.length > 0 ? buildItem(att, array, professionalTasks) : null;\n      });\n    });\n    return form;\n  }\n};\n\nconst formDefinition = (template, professionalTasks, patientData, reportData) => {\n  let formContent = getFormContent(template, professionalTasks);\n  let form = {\n    info: {\n      title: template.node.text\n    },\n    pageSize: \"A4\",\n    pageOrientation: \"portrait\",\n    pageMargins: [40, 50, 40, 50],\n    content: [titleForm(template), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, patientMetadata(patientData), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, formMetadata(reportData), {\n      text: \" \",\n      style: \"lineBreak\"\n    }, formContent],\n    styles: styles,\n    pageBreakBefore: function (currentNode, followingNodesOnPage, nodesOnNextPage, previousNodesOnPage) {\n      return currentNode.headlineLevel === 1 && followingNodesOnPage.length === 0;\n    },\n    header: function (currentPage, pageCount, pageSize) {\n      if (currentPage !== 1) {\n        return [{\n          text: [patientData.episodio, \" - \", patientData.nome, \" - \", \"Nome Serviço\"],\n          style: \"footer\"\n        }];\n      }\n    },\n    footer: function (currentPage, pageCount) {\n      return [{\n        text: \"Centro Hospitalar do Porto - Página \" + currentPage.toString() + \" de \" + pageCount,\n        style: \"footer\"\n      }];\n    }\n  };\n  return form;\n};\n\nexport { formDefinition };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}