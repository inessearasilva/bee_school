{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ines_\\\\bee_v2\\\\bee_school\\\\frontend\\\\src\\\\views\\\\dashboard\\\\Sentiment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.record.engagement_metrics.total_tweets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Negative: \", props.record.sentiment_count.Negative]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Neutral: \", props.record.sentiment_count.Neutral]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Positive: \", props.record.sentiment_count.Positive]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = Record;\nconst colors = [\"#FFB3B3\", \"#B3CCFF\", \"#99E699\"];\nexport default function Sentiment() {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5050/statistics_general/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n  }, []);\n  function calculatePercentage(record, category) {\n    const totalTweets = record.engagement_metrics.total_tweets;\n    const sentimentCount = record.sentiment_count[category];\n    return sentimentCount / totalTweets * 100;\n  }\n  function calculateLength(record, category) {\n    const maxLength = 100; // Maximum length of the bar in pixels\n    const percentage = calculatePercentage(record, category);\n    return maxLength * percentage / 100;\n  }\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Total Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), recordList(), records.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: records,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"category\",\n          dataKey: \"_id\",\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: () => 0,\n          barSize: 32,\n          children: records.map((record, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: colors[0],\n            width: calculateLength(record, \"Negative\")\n          }, record._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: () => 0,\n          barSize: 32,\n          children: records.map((record, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: colors[1],\n            width: calculateLength(record, \"Neutral\")\n          }, record._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: () => 0,\n          barSize: 32,\n          children: records.map((record, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: colors[2],\n            width: calculateLength(record, \"Positive\")\n          }, record._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          layout: \"vertical\",\n          verticalAlign: \"top\",\n          align: \"left\",\n          wrapperStyle: {\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => `${value.toFixed(2)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Sentiment, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = Sentiment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"Sentiment\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Cell","Record","props","record","engagement_metrics","total_tweets","sentiment_count","Negative","Neutral","Positive","colors","Sentiment","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","calculatePercentage","category","totalTweets","sentimentCount","calculateLength","maxLength","percentage","recordList","map","_id","length","idx","top","left","value","toFixed"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/src/views/dashboard/Sentiment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\n\nconst Record = (props) => (\n  <div>\n    <p>{props.record.engagement_metrics.total_tweets}</p>\n    <p>Negative: {props.record.sentiment_count.Negative}</p>\n    <p>Neutral: {props.record.sentiment_count.Neutral}</p>\n    <p>Positive: {props.record.sentiment_count.Positive}</p>\n  </div>\n);\n\nconst colors = [\n  \"#FFB3B3\",\n  \"#B3CCFF\",\n  \"#99E699\",\n];\n\nexport default function Sentiment() {\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5050/statistics_general/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n  }, []);\n\n  function calculatePercentage(record, category) {\n    const totalTweets = record.engagement_metrics.total_tweets;\n    const sentimentCount = record.sentiment_count[category];\n    return (sentimentCount / totalTweets) * 100;\n  }\n\n  function calculateLength(record, category) {\n    const maxLength = 100; // Maximum length of the bar in pixels\n    const percentage = calculatePercentage(record, category);\n    return (maxLength * percentage) / 100;\n  }\n\n  function recordList() {\n    return records.map((record) => {\n      return <Record record={record} key={record._id} />;\n    });\n  }\n\n  return (\n    <div>\n      <h3>Total Tweets</h3>\n      {recordList()}\n      {records.length > 0 && (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={records} layout=\"vertical\">\n            <XAxis type=\"number\" hide />\n            <YAxis type=\"category\" dataKey=\"_id\" hide />\n            <Bar dataKey={() => 0} barSize={32}>\n              {records.map((record, idx) => (\n                <Cell\n                  key={record._id}\n                  fill={colors[0]}\n                  width={calculateLength(record, \"Negative\")}\n                />\n              ))}\n            </Bar>\n            <Bar dataKey={() => 0} barSize={32}>\n              {records.map((record, idx) => (\n                <Cell\n                  key={record._id}\n                  fill={colors[1]}\n                  width={calculateLength(record, \"Neutral\")}\n                />\n              ))}\n            </Bar>\n            <Bar dataKey={() => 0} barSize={32}>\n              {records.map((record, idx) => (\n                <Cell\n                  key={record._id}\n                  fill={colors[2]}\n                  width={calculateLength(record, \"Positive\")}\n                />\n              ))}\n            </Bar>\n            <Legend\n              layout=\"vertical\"\n              verticalAlign=\"top\"\n              align=\"left\"\n              wrapperStyle={{ top: 0, left: 0 }}\n            />\n            <Tooltip formatter={(value) => `${value.toFixed(2)}%`} />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}