{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLAttribute = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.DecodingMode = exports.EntityDecoder = exports.encodeHTML5 = exports.encodeHTML4 = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = exports.EncodingMode = exports.EntityLevel = void 0;\nvar decode_js_1 = require(\"./decode.js\");\nvar encode_js_1 = require(\"./encode.js\");\nvar escape_js_1 = require(\"./escape.js\");\n/** The level of entities to support. */\nvar EntityLevel;\n(function (EntityLevel) {\n  /** Support only XML entities. */\n  EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n  /** Support HTML entities, which are a superset of XML entities. */\n  EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel = exports.EntityLevel || (exports.EntityLevel = {}));\nvar EncodingMode;\n(function (EncodingMode) {\n  /**\n   * The output is UTF-8 encoded. Only characters that need escaping within\n   * XML will be escaped.\n   */\n  EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n  /**\n   * The output consists only of ASCII characters. Characters that need\n   * escaping within HTML, and characters that aren't ASCII characters will\n   * be escaped.\n   */\n  EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n  /**\n   * Encode all characters that have an equivalent entity, as well as all\n   * characters that are not ASCII characters.\n   */\n  EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n  /**\n   * Encode all characters that have to be escaped in HTML attributes,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n  /**\n   * Encode all characters that have to be escaped in HTML text,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode = exports.EncodingMode || (exports.EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nfunction decode(data, options) {\n  if (options === void 0) {\n    options = EntityLevel.XML;\n  }\n  var level = typeof options === \"number\" ? options : options.level;\n  if (level === EntityLevel.HTML) {\n    var mode = typeof options === \"object\" ? options.mode : undefined;\n    return (0, decode_js_1.decodeHTML)(data, mode);\n  }\n  return (0, decode_js_1.decodeXML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nfunction decodeStrict(data, options) {\n  var _a;\n  if (options === void 0) {\n    options = EntityLevel.XML;\n  }\n  var opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  (_a = opts.mode) !== null && _a !== void 0 ? _a : opts.mode = decode_js_1.DecodingMode.Strict;\n  return decode(data, opts);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nfunction encode(data, options) {\n  if (options === void 0) {\n    options = EntityLevel.XML;\n  }\n  var opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  // Mode `UTF8` just escapes XML entities\n  if (opts.mode === EncodingMode.UTF8) return (0, escape_js_1.escapeUTF8)(data);\n  if (opts.mode === EncodingMode.Attribute) return (0, escape_js_1.escapeAttribute)(data);\n  if (opts.mode === EncodingMode.Text) return (0, escape_js_1.escapeText)(data);\n  if (opts.level === EntityLevel.HTML) {\n    if (opts.mode === EncodingMode.ASCII) {\n      return (0, encode_js_1.encodeNonAsciiHTML)(data);\n    }\n    return (0, encode_js_1.encodeHTML)(data);\n  }\n  // ASCII and Extensive are equivalent\n  return (0, escape_js_1.encodeXML)(data);\n}\nexports.encode = encode;\nvar escape_js_2 = require(\"./escape.js\");\nObject.defineProperty(exports, \"encodeXML\", {\n  enumerable: true,\n  get: function () {\n    return escape_js_2.encodeXML;\n  }\n});\nObject.defineProperty(exports, \"escape\", {\n  enumerable: true,\n  get: function () {\n    return escape_js_2.escape;\n  }\n});\nObject.defineProperty(exports, \"escapeUTF8\", {\n  enumerable: true,\n  get: function () {\n    return escape_js_2.escapeUTF8;\n  }\n});\nObject.defineProperty(exports, \"escapeAttribute\", {\n  enumerable: true,\n  get: function () {\n    return escape_js_2.escapeAttribute;\n  }\n});\nObject.defineProperty(exports, \"escapeText\", {\n  enumerable: true,\n  get: function () {\n    return escape_js_2.escapeText;\n  }\n});\nvar encode_js_2 = require(\"./encode.js\");\nObject.defineProperty(exports, \"encodeHTML\", {\n  enumerable: true,\n  get: function () {\n    return encode_js_2.encodeHTML;\n  }\n});\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", {\n  enumerable: true,\n  get: function () {\n    return encode_js_2.encodeNonAsciiHTML;\n  }\n});\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", {\n  enumerable: true,\n  get: function () {\n    return encode_js_2.encodeHTML;\n  }\n});\nObject.defineProperty(exports, \"encodeHTML5\", {\n  enumerable: true,\n  get: function () {\n    return encode_js_2.encodeHTML;\n  }\n});\nvar decode_js_2 = require(\"./decode.js\");\nObject.defineProperty(exports, \"EntityDecoder\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.EntityDecoder;\n  }\n});\nObject.defineProperty(exports, \"DecodingMode\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.DecodingMode;\n  }\n});\nObject.defineProperty(exports, \"decodeXML\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeXML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTMLStrict\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTMLStrict;\n  }\n});\nObject.defineProperty(exports, \"decodeHTMLAttribute\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTMLAttribute;\n  }\n});\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML5\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML4Strict\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTMLStrict;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML5Strict\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeHTMLStrict;\n  }\n});\nObject.defineProperty(exports, \"decodeXMLStrict\", {\n  enumerable: true,\n  get: function () {\n    return decode_js_2.decodeXML;\n  }\n});","map":{"version":3,"mappings":"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","names":["EntityLevel","exports","EncodingMode","decode","data","options","XML","level","HTML","mode","undefined","decodeStrict","opts","decode_js_1","Strict","encode","UTF8","Attribute","Text","ASCII","Object","enumerable","get"],"sources":["https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}