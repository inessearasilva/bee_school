{"ast":null,"code":"import ProviderCombinedContext from \"../../../../../../../contexts/ProviderCombinedContext\";\nimport SidePanel from \"../../../SidePanel\";\nimport React, { useContext, useState } from \"react\";\nimport Tab from \"../../../../../UI/Tab/Tab\";\nimport CombinedContext from \"../../../../../../../contexts/CombinedContext\";\nimport { handleTasksComposition } from \"../../../../../../../assets/functions/handleCompositionPlanning/handleTasksComposition\";\nimport TaskSettingsPanel from \"../TaskSettingsPanel\";\nconst VisibilitySettingsPanel = props => {\n  const context = useContext(CombinedContext);\n  const [multipleConceptTaskVisible, setMultipleConceptTaskVisible] = useState([]);\n  const [multipleConceptTaskInReport, setMultipleConceptTaskInReport] = useState([]);\n  const handleCancelChanges = () => {\n    props.onCancel();\n  };\n  const handleConfirmChanges = () => {\n    const listTaskVisible = multipleConceptTaskVisible.map(x => x.task);\n    const listTaskInReport = multipleConceptTaskInReport.map(x => x.task);\n    multipleConceptTaskVisible.length > 0 && handleTasksComposition(context, \"TaskVisible\", listTaskVisible);\n    multipleConceptTaskInReport.length > 0 && handleTasksComposition(context, \"TaskInReport\", listTaskInReport);\n  };\n  let tabContentTaskVisible = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(TaskSettingsPanel, {\n    jsonTitle: \"TaskVisible\",\n    multipleConcept: multipleConceptTaskVisible,\n    onConceptChange: setMultipleConceptTaskVisible\n  });\n  let tabContentTaskInReport = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(TaskSettingsPanel, {\n    jsonTitle: \"TaskInReport\",\n    multipleConcept: multipleConceptTaskInReport,\n    onConceptChange: setMultipleConceptTaskInReport\n  });\n  const tabData = [{\n    title: 'Visível',\n    content: tabContentTaskVisible\n  }, {\n    title: 'Visível na Impressão',\n    content: tabContentTaskInReport\n  }];\n  const content = /*#__PURE__*/React.createElement(Tab, {\n    tabData: tabData\n  });\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(SidePanel, {\n    title: \"Configurar Visibilidade\",\n    content: content,\n    isSidePanelOpen: props.isSidePanelOpen,\n    collapseSidePanel: () => props.collapseSidePanel(),\n    onCancelChanges: () => handleCancelChanges(),\n    onClosed: () => handleConfirmChanges()\n  }));\n};\nexport default VisibilitySettingsPanel;","map":{"version":3,"names":["ProviderCombinedContext","SidePanel","React","useContext","useState","Tab","CombinedContext","handleTasksComposition","TaskSettingsPanel","VisibilitySettingsPanel","props","context","multipleConceptTaskVisible","setMultipleConceptTaskVisible","multipleConceptTaskInReport","setMultipleConceptTaskInReport","handleCancelChanges","onCancel","handleConfirmChanges","listTaskVisible","map","x","task","listTaskInReport","length","tabContentTaskVisible","composition","openCompositionPlanning","createElement","jsonTitle","multipleConcept","onConceptChange","tabContentTaskInReport","tabData","title","content","isSidePanelOpen","collapseSidePanel","onCancelChanges","onClosed"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/FormDesigner/Sidebar/SidePanel/CompositionPlanningPanels/TaskSettingsPanel/VisibilitySettings/VisibilitySettings.js"],"sourcesContent":["import ProviderCombinedContext from \"../../../../../../../contexts/ProviderCombinedContext\";\r\nimport SidePanel from \"../../../SidePanel\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Tab from \"../../../../../UI/Tab/Tab\";\r\nimport CombinedContext from \"../../../../../../../contexts/CombinedContext\";\r\nimport { handleTasksComposition } from \"../../../../../../../assets/functions/handleCompositionPlanning/handleTasksComposition\";\r\nimport TaskSettingsPanel from \"../TaskSettingsPanel\";\r\n\r\nconst VisibilitySettingsPanel = props => {\r\n  const context = useContext(CombinedContext);\r\n  const [multipleConceptTaskVisible, setMultipleConceptTaskVisible] = useState([]);\r\n  const [multipleConceptTaskInReport, setMultipleConceptTaskInReport] = useState([]);\r\n\r\n  const handleCancelChanges = () => {\r\n    props.onCancel();\r\n  };\r\n\r\n  const handleConfirmChanges = () => {\r\n    const listTaskVisible = multipleConceptTaskVisible.map(x => x.task);\r\n    const listTaskInReport = multipleConceptTaskInReport.map(x => x.task);\r\n    multipleConceptTaskVisible.length > 0 && handleTasksComposition(context, \"TaskVisible\", listTaskVisible);\r\n    multipleConceptTaskInReport.length > 0 && handleTasksComposition(context, \"TaskInReport\", listTaskInReport);\r\n  };\r\n\r\n  let tabContentTaskVisible = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(TaskSettingsPanel, {\r\n    jsonTitle: \"TaskVisible\",\r\n    multipleConcept: multipleConceptTaskVisible,\r\n    onConceptChange: setMultipleConceptTaskVisible\r\n  });\r\n  let tabContentTaskInReport = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(TaskSettingsPanel, {\r\n    jsonTitle: \"TaskInReport\",\r\n    multipleConcept: multipleConceptTaskInReport,\r\n    onConceptChange: setMultipleConceptTaskInReport\r\n  });\r\n  const tabData = [{\r\n    title: 'Visível',\r\n    content: tabContentTaskVisible\r\n  }, {\r\n    title: 'Visível na Impressão',\r\n    content: tabContentTaskInReport\r\n  }];\r\n  const content = /*#__PURE__*/React.createElement(Tab, {\r\n    tabData: tabData\r\n  });\r\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(SidePanel, {\r\n    title: \"Configurar Visibilidade\",\r\n    content: content,\r\n    isSidePanelOpen: props.isSidePanelOpen,\r\n    collapseSidePanel: () => props.collapseSidePanel(),\r\n    onCancelChanges: () => handleCancelChanges(),\r\n    onClosed: () => handleConfirmChanges()\r\n  }));\r\n};\r\n\r\nexport default VisibilitySettingsPanel;"],"mappings":"AAAA,OAAOA,uBAAuB,MAAM,uDAAuD;AAC3F,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,SAASC,sBAAsB,QAAQ,wFAAwF;AAC/H,OAAOC,iBAAiB,MAAM,sBAAsB;AAEpD,MAAMC,uBAAuB,GAAGC,KAAK,IAAI;EACvC,MAAMC,OAAO,GAAGR,UAAU,CAACG,eAAe,CAAC;EAC3C,MAAM,CAACM,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChF,MAAM,CAACU,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElF,MAAMY,mBAAmB,GAAG,MAAM;IAChCN,KAAK,CAACO,QAAQ,EAAE;EAClB,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAM;IACjC,MAAMC,eAAe,GAAGP,0BAA0B,CAACQ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;IACnE,MAAMC,gBAAgB,GAAGT,2BAA2B,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;IACrEV,0BAA0B,CAACY,MAAM,GAAG,CAAC,IAAIjB,sBAAsB,CAACI,OAAO,EAAE,aAAa,EAAEQ,eAAe,CAAC;IACxGL,2BAA2B,CAACU,MAAM,GAAG,CAAC,IAAIjB,sBAAsB,CAACI,OAAO,EAAE,cAAc,EAAEY,gBAAgB,CAAC;EAC7G,CAAC;EAED,IAAIE,qBAAqB,GAAGd,OAAO,CAACe,WAAW,CAACC,uBAAuB,IAAI,aAAazB,KAAK,CAAC0B,aAAa,CAACpB,iBAAiB,EAAE;IAC7HqB,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAElB,0BAA0B;IAC3CmB,eAAe,EAAElB;EACnB,CAAC,CAAC;EACF,IAAImB,sBAAsB,GAAGrB,OAAO,CAACe,WAAW,CAACC,uBAAuB,IAAI,aAAazB,KAAK,CAAC0B,aAAa,CAACpB,iBAAiB,EAAE;IAC9HqB,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAEhB,2BAA2B;IAC5CiB,eAAe,EAAEhB;EACnB,CAAC,CAAC;EACF,MAAMkB,OAAO,GAAG,CAAC;IACfC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAEV;EACX,CAAC,EAAE;IACDS,KAAK,EAAE,sBAAsB;IAC7BC,OAAO,EAAEH;EACX,CAAC,CAAC;EACF,MAAMG,OAAO,GAAG,aAAajC,KAAK,CAAC0B,aAAa,CAACvB,GAAG,EAAE;IACpD4B,OAAO,EAAEA;EACX,CAAC,CAAC;EACF,OAAO,aAAa/B,KAAK,CAAC0B,aAAa,CAAC5B,uBAAuB,EAAE,IAAI,EAAE,aAAaE,KAAK,CAAC0B,aAAa,CAAC3B,SAAS,EAAE;IACjHiC,KAAK,EAAE,yBAAyB;IAChCC,OAAO,EAAEA,OAAO;IAChBC,eAAe,EAAE1B,KAAK,CAAC0B,eAAe;IACtCC,iBAAiB,EAAE,MAAM3B,KAAK,CAAC2B,iBAAiB,EAAE;IAClDC,eAAe,EAAE,MAAMtB,mBAAmB,EAAE;IAC5CuB,QAAQ,EAAE,MAAMrB,oBAAoB;EACtC,CAAC,CAAC,CAAC;AACL,CAAC;AAED,eAAeT,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}