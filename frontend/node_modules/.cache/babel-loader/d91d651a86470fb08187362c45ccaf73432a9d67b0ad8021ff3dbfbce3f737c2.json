{"ast":null,"code":"import React, { useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../../../contexts/ThemeContext\";\nimport ChevronUp from \"../ChevronSection/ChevronUp\";\nimport ChevronDown from \"../ChevronSection/ChevronDown\";\nimport SectionLabel from \"../SectionLabel/SectionLabel\";\nimport ComponentsStyle from \"../../../styles/ComponentsStyle\";\nimport { getWidth } from \"../../../assets/functions/GetWidth/getWidth\";\nimport CombinedContext from \"../../../contexts/CombinedContext\";\nimport { handleIsVisible } from \"../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { getDLMConditions } from \"../../../assets/functions/HandleDLM/getDLMConditions\";\nimport { checkDLMRules } from \"../../../assets/functions/HandleDLM/checkDLMRules\";\nconst SectionContainer = props => {\n  const context = useContext(CombinedContext);\n  let {\n    item,\n    path,\n    professionalTasks,\n    templateRules,\n    pathArray,\n    values,\n    idJDT\n  } = props;\n  let isVisible,\n    content = null;\n  if (!item.TaskVisible) {\n    isVisible = false;\n  } else {\n    isVisible = handleIsVisible(item, professionalTasks);\n  }\n  const getTheme = (value, variable) => {\n    let componentStyle;\n    let theme;\n    let themeColor;\n    let margin;\n    switch (props.section) {\n      case 1:\n        componentStyle = \"\";\n        theme = value[1];\n        themeColor = value.themePalette.$400;\n        break;\n      case 2:\n        componentStyle = ComponentsStyle.subSectionContainerXPadding;\n        theme = value[1];\n        themeColor = value.themePalette.$400;\n        break;\n      case 3:\n        componentStyle = ComponentsStyle.subSubSectionContainerXPadding;\n        theme = value[2];\n        themeColor = value.themePalette.$300;\n        break;\n      case 4:\n        componentStyle = ComponentsStyle.subSubSubSectionContainerXPadding;\n        theme = value[3];\n        themeColor = value.themePalette.$200;\n        break;\n      case 5:\n        componentStyle = ComponentsStyle.subSubSubSubSectionContainerXPadding;\n        theme = value[3];\n        themeColor = value.themePalette.$200;\n        break;\n      case 6:\n        componentStyle = ComponentsStyle.subSubSubSubSubSectionContainerXPadding;\n        theme = value[3];\n        themeColor = value.themePalette.$200;\n        break;\n      default:\n        componentStyle = \"\";\n        theme = value[3];\n        themeColor = value.themePalette.$200;\n        margin = 1.5 + 0.25 * (props.section - 6);\n        break;\n    }\n    switch (variable) {\n      case 'componentStyle':\n        return componentStyle;\n      case 'theme':\n        return theme;\n      case 'themeColor':\n        return themeColor;\n      case 'margin':\n        return margin.toString();\n      default:\n        return;\n    }\n  };\n  const [conditionValues, setConditionValues] = useState({});\n  const [visible, setVisibility] = useState(isVisible);\n  let dlmConditions, pathLabel;\n  if (context.formMode === 'edit') {\n    dlmConditions = getDLMConditions(item, templateRules);\n    let array = [];\n    array.push(\"value\");\n    pathLabel = pathArray.concat(array).join(\"-\");\n  }\n  useEffect(() => {\n    if (context.formMode === 'edit') {\n      const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\n        if (values[key]._immutable) {\n          obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\n        } else {\n          obj[key] = values[key];\n        }\n        return obj;\n      }, {});\n      if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\n        setConditionValues(newConditionValues);\n      }\n    }\n  }, [values, dlmConditions, conditionValues, context.formMode]);\n  useEffect(() => {\n    if (context.formMode === 'edit') {\n      setVisibility(isVisible);\n      checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\n        if (Array.isArray(rules[0]) && rules[0].length > 0) {\n          for (const rule of rules[0]) {\n            if (rule.itemPath === path) {\n              const action = rule.action;\n              switch (action) {\n                // case \"isNotEditable\":\n                //     setFieldEditable(false);\n                //     break;\n                // case \"isMandatory\":\n                //     setRuleMandatory(true);\n                //     break;\n                case \"isVisible\":\n                  setVisibility(true);\n                  break;\n                case \"isNotVisible\":\n                  setVisibility(false);\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n          context.dlm.updateIsDlmFinished(true);\n        } else {\n          context.dlm.updateIsDlmFinished(true);\n        }\n      });\n    }\n  }, [conditionValues, context.token, idJDT, item.dlmRules, path, pathLabel, templateRules, context.formMode]);\n  if (visible) {\n    props.sectionConstructor();\n    let accordionOpen = props.subForm ? props.accordionOpen : props.accordionOpen?.filter(obj => obj.id === pathArray.join(\"-\"))[0].accordionOpen;\n    content = /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, value => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        order: props.order,\n        width: props.hsize !== undefined && props.hsize !== null ? props.section !== 1 ? props.hsize : getWidth(props.hsize) : props.section !== 1 ? \"100%\" : \"91.67%\"\n      },\n      className: props.section === 1 ? ComponentsStyle.sectionContainerRoot : ComponentsStyle.defaultSectionContainerRoot\n    }, props.isTitleVisible && /*#__PURE__*/React.createElement(\"div\", {\n      className: getTheme(value, 'componentStyle')\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: props.handleAccordionMode,\n      title: props.description,\n      style: {\n        borderColor: Array.isArray(value) ? getTheme(value, 'theme') : getTheme(value, 'themeColor'),\n        backgroundColor: props.section !== 1 ? null : Array.isArray(value) ? value[1] : value.themePalette.$400,\n        paddingTop: ComponentsStyle.defaultSectionContainerYPadding,\n        paddingBottom: ComponentsStyle.defaultSectionContainerYPadding\n      },\n      className: `flex flex-row ${context.font.fontAlignment.sectionTitle}\n                                ${props.section === 1 ? ComponentsStyle.sectionContainer : ComponentsStyle.defaultSectionContainer}`\n    }, /*#__PURE__*/React.createElement(SectionLabel, {\n      isMandatory: props.isMandatory,\n      label: props.label,\n      color: props.section === 1 ? \"text-white pl-2\" : \"text-gray-600\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-8\"\n    }, !accordionOpen && !props.subForm && /*#__PURE__*/React.createElement(ChevronDown, {\n      color: props.section === 1 ? \"text-white\" : \"text-gray-600\"\n    }), accordionOpen && !props.subForm && /*#__PURE__*/React.createElement(ChevronUp, {\n      color: props.section === 1 ? \"text-white\" : \"text-gray-600\"\n    })))), accordionOpen && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexFlow: \"wrap\",\n        paddingLeft: props.section > 6 ? getTheme(value, 'margin') + \"rem\" : null,\n        paddingRight: props.section > 6 ? getTheme(value, 'margin') + \"rem\" : null\n      },\n      className: \"flex w-full \" + getTheme(value, 'componentStyle')\n    }, props.children)));\n  }\n  return content;\n};\nexport default SectionContainer;","map":{"version":3,"names":["React","useContext","useEffect","useState","ThemeContext","ChevronUp","ChevronDown","SectionLabel","ComponentsStyle","getWidth","CombinedContext","handleIsVisible","getDLMConditions","checkDLMRules","SectionContainer","props","context","item","path","professionalTasks","templateRules","pathArray","values","idJDT","isVisible","content","TaskVisible","getTheme","value","variable","componentStyle","theme","themeColor","margin","section","themePalette","$400","subSectionContainerXPadding","subSubSectionContainerXPadding","$300","subSubSubSectionContainerXPadding","$200","subSubSubSubSectionContainerXPadding","subSubSubSubSubSectionContainerXPadding","toString","conditionValues","setConditionValues","visible","setVisibility","dlmConditions","pathLabel","formMode","array","push","concat","join","newConditionValues","Object","keys","filter","key","includes","reduce","obj","_immutable","getCurrentContent","getPlainText","split","JSON","stringify","token","dlm","updateIsDlmFinished","dlmRules","then","rules","Array","isArray","length","rule","itemPath","action","sectionConstructor","accordionOpen","subForm","id","createElement","Consumer","style","order","width","hsize","undefined","className","sectionContainerRoot","defaultSectionContainerRoot","isTitleVisible","onClick","handleAccordionMode","title","description","borderColor","backgroundColor","paddingTop","defaultSectionContainerYPadding","paddingBottom","font","fontAlignment","sectionTitle","sectionContainer","defaultSectionContainer","isMandatory","label","color","flexFlow","paddingLeft","paddingRight","children"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/UI/SectionContainer/SectionContainer.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport ThemeContext from \"../../../contexts/ThemeContext\";\r\nimport ChevronUp from \"../ChevronSection/ChevronUp\";\r\nimport ChevronDown from \"../ChevronSection/ChevronDown\";\r\nimport SectionLabel from \"../SectionLabel/SectionLabel\";\r\nimport ComponentsStyle from \"../../../styles/ComponentsStyle\";\r\nimport { getWidth } from \"../../../assets/functions/GetWidth/getWidth\";\r\nimport CombinedContext from \"../../../contexts/CombinedContext\";\r\nimport { handleIsVisible } from \"../../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport { getDLMConditions } from \"../../../assets/functions/HandleDLM/getDLMConditions\";\r\nimport { checkDLMRules } from \"../../../assets/functions/HandleDLM/checkDLMRules\";\r\n\r\nconst SectionContainer = props => {\r\n  const context = useContext(CombinedContext);\r\n  let {\r\n    item,\r\n    path,\r\n    professionalTasks,\r\n    templateRules,\r\n    pathArray,\r\n    values,\r\n    idJDT\r\n  } = props;\r\n  let isVisible,\r\n      content = null;\r\n\r\n  if (!item.TaskVisible) {\r\n    isVisible = false;\r\n  } else {\r\n    isVisible = handleIsVisible(item, professionalTasks);\r\n  }\r\n\r\n  const getTheme = (value, variable) => {\r\n    let componentStyle;\r\n    let theme;\r\n    let themeColor;\r\n    let margin;\r\n\r\n    switch (props.section) {\r\n      case 1:\r\n        componentStyle = \"\";\r\n        theme = value[1];\r\n        themeColor = value.themePalette.$400;\r\n        break;\r\n\r\n      case 2:\r\n        componentStyle = ComponentsStyle.subSectionContainerXPadding;\r\n        theme = value[1];\r\n        themeColor = value.themePalette.$400;\r\n        break;\r\n\r\n      case 3:\r\n        componentStyle = ComponentsStyle.subSubSectionContainerXPadding;\r\n        theme = value[2];\r\n        themeColor = value.themePalette.$300;\r\n        break;\r\n\r\n      case 4:\r\n        componentStyle = ComponentsStyle.subSubSubSectionContainerXPadding;\r\n        theme = value[3];\r\n        themeColor = value.themePalette.$200;\r\n        break;\r\n\r\n      case 5:\r\n        componentStyle = ComponentsStyle.subSubSubSubSectionContainerXPadding;\r\n        theme = value[3];\r\n        themeColor = value.themePalette.$200;\r\n        break;\r\n\r\n      case 6:\r\n        componentStyle = ComponentsStyle.subSubSubSubSubSectionContainerXPadding;\r\n        theme = value[3];\r\n        themeColor = value.themePalette.$200;\r\n        break;\r\n\r\n      default:\r\n        componentStyle = \"\";\r\n        theme = value[3];\r\n        themeColor = value.themePalette.$200;\r\n        margin = 1.5 + 0.25 * (props.section - 6);\r\n        break;\r\n    }\r\n\r\n    switch (variable) {\r\n      case 'componentStyle':\r\n        return componentStyle;\r\n\r\n      case 'theme':\r\n        return theme;\r\n\r\n      case 'themeColor':\r\n        return themeColor;\r\n\r\n      case 'margin':\r\n        return margin.toString();\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const [conditionValues, setConditionValues] = useState({});\r\n  const [visible, setVisibility] = useState(isVisible);\r\n  let dlmConditions, pathLabel;\r\n\r\n  if (context.formMode === 'edit') {\r\n    dlmConditions = getDLMConditions(item, templateRules);\r\n    let array = [];\r\n    array.push(\"value\");\r\n    pathLabel = pathArray.concat(array).join(\"-\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (context.formMode === 'edit') {\r\n      const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\r\n        if (values[key]._immutable) {\r\n          obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\r\n        } else {\r\n          obj[key] = values[key];\r\n        }\r\n\r\n        return obj;\r\n      }, {});\r\n\r\n      if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\r\n        setConditionValues(newConditionValues);\r\n      }\r\n    }\r\n  }, [values, dlmConditions, conditionValues, context.formMode]);\r\n  useEffect(() => {\r\n    if (context.formMode === 'edit') {\r\n      setVisibility(isVisible);\r\n      checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\r\n        if (Array.isArray(rules[0]) && rules[0].length > 0) {\r\n          for (const rule of rules[0]) {\r\n            if (rule.itemPath === path) {\r\n              const action = rule.action;\r\n\r\n              switch (action) {\r\n                // case \"isNotEditable\":\r\n                //     setFieldEditable(false);\r\n                //     break;\r\n                // case \"isMandatory\":\r\n                //     setRuleMandatory(true);\r\n                //     break;\r\n                case \"isVisible\":\r\n                  setVisibility(true);\r\n                  break;\r\n\r\n                case \"isNotVisible\":\r\n                  setVisibility(false);\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n\r\n          context.dlm.updateIsDlmFinished(true);\r\n        } else {\r\n          context.dlm.updateIsDlmFinished(true);\r\n        }\r\n      });\r\n    }\r\n  }, [conditionValues, context.token, idJDT, item.dlmRules, path, pathLabel, templateRules, context.formMode]);\r\n\r\n  if (visible) {\r\n    props.sectionConstructor();\r\n    let accordionOpen = props.subForm ? props.accordionOpen : props.accordionOpen?.filter(obj => obj.id === pathArray.join(\"-\"))[0].accordionOpen;\r\n    content = /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, value => /*#__PURE__*/React.createElement(\"div\", {\r\n      style: {\r\n        order: props.order,\r\n        width: props.hsize !== undefined && props.hsize !== null ? props.section !== 1 ? props.hsize : getWidth(props.hsize) : props.section !== 1 ? \"100%\" : \"91.67%\"\r\n      },\r\n      className: props.section === 1 ? ComponentsStyle.sectionContainerRoot : ComponentsStyle.defaultSectionContainerRoot\r\n    }, props.isTitleVisible && /*#__PURE__*/React.createElement(\"div\", {\r\n      className: getTheme(value, 'componentStyle')\r\n    }, /*#__PURE__*/React.createElement(\"div\", {\r\n      onClick: props.handleAccordionMode,\r\n      title: props.description,\r\n      style: {\r\n        borderColor: Array.isArray(value) ? getTheme(value, 'theme') : getTheme(value, 'themeColor'),\r\n        backgroundColor: props.section !== 1 ? null : Array.isArray(value) ? value[1] : value.themePalette.$400,\r\n        paddingTop: ComponentsStyle.defaultSectionContainerYPadding,\r\n        paddingBottom: ComponentsStyle.defaultSectionContainerYPadding\r\n      },\r\n      className: `flex flex-row ${context.font.fontAlignment.sectionTitle}\r\n                                ${props.section === 1 ? ComponentsStyle.sectionContainer : ComponentsStyle.defaultSectionContainer}`\r\n    }, /*#__PURE__*/React.createElement(SectionLabel, {\r\n      isMandatory: props.isMandatory,\r\n      label: props.label,\r\n      color: props.section === 1 ? \"text-white pl-2\" : \"text-gray-600\"\r\n    }), /*#__PURE__*/React.createElement(\"div\", {\r\n      className: \"pl-8\"\r\n    }, !accordionOpen && !props.subForm && /*#__PURE__*/React.createElement(ChevronDown, {\r\n      color: props.section === 1 ? \"text-white\" : \"text-gray-600\"\r\n    }), accordionOpen && !props.subForm && /*#__PURE__*/React.createElement(ChevronUp, {\r\n      color: props.section === 1 ? \"text-white\" : \"text-gray-600\"\r\n    })))), accordionOpen && /*#__PURE__*/React.createElement(\"div\", {\r\n      style: {\r\n        flexFlow: \"wrap\",\r\n        paddingLeft: props.section > 6 ? getTheme(value, 'margin') + \"rem\" : null,\r\n        paddingRight: props.section > 6 ? getTheme(value, 'margin') + \"rem\" : null\r\n      },\r\n      className: \"flex w-full \" + getTheme(value, 'componentStyle')\r\n    }, props.children)));\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default SectionContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}