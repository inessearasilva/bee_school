{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ines_/bee_v2/bee_school/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ines_/bee_v2/bee_school/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/ines_/bee_v2/bee_school/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import CanvasJSReact from'@canvasjs/react-charts';import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var CanvasJS=CanvasJSReact.CanvasJS;var CanvasJSChart=CanvasJSReact.CanvasJSChart;var LineChart=function LineChart(_ref){var record=_ref.record;var formatData=function formatData(record){var categories=[\"Total\",\"Negative\",\"Positive\",\"Neutral\"];var formattedData={};categories.forEach(function(category){formattedData[category]=[];for(var key in record){// Check if the property format matches a date pattern\nif(/^\\d{2}-\\d{2}-\\d{4}$/.test(key)&&record[key][category]){// If it's a date, push the respective data to the category array\nformattedData[category].push({x:new Date(key.split('-').reverse().join('-')),y:record[key][category]});}}});return formattedData;};var formattedRecord=formatData(record);var options={theme:\"light2\",animationEnabled:true,width:600,title:{text:\"Sentiment Analysis Overtime\"},axisX:{},axisY:{title:\"Counts\",titleFontColor:\"#6D78AD\",lineColor:\"#6D78AD\",labelFontColor:\"#6D78AD\",tickColor:\"#6D78AD\"},toolTip:{shared:true},data:[{type:\"spline\",name:\"Total\",showInLegend:true,xValueFormatString:\"DD MMM YYYY\",yValueFormatString:\"#,##0\",dataPoints:formattedRecord.Total},{type:\"spline\",name:\"Positive\",showInLegend:true,xValueFormatString:\"DD MMM YYYY\",yValueFormatString:\"#,##0\",dataPoints:formattedRecord.Positive,color:\"#76CC9D\"},{type:\"spline\",name:\"Neutral\",showInLegend:true,xValueFormatString:\"DD MMM YYYY\",yValueFormatString:\"#,##0\",dataPoints:formattedRecord.Neutral,color:\"#FADB7C\"},{type:\"spline\",name:\"Negative\",showInLegend:true,xValueFormatString:\"DD MMM YYYY\",yValueFormatString:\"#,##0\",dataPoints:formattedRecord.Negative,color:\"#F46161\"}]};return/*#__PURE__*/_jsx(CanvasJSChart,{options:options});};export default function LineChartsContainer(){var _useParams=useParams(),topic=_useParams.topic;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];useEffect(function(){function getRecords(){return _getRecords.apply(this,arguments);}function _getRecords(){_getRecords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,_records,matchingRecords;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5050/general_info/\");case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"An error occurred: \".concat(response.statusText));case 6:_context.next=8;return response.json();case 8:_records=_context.sent;matchingRecords=_records.filter(function(r){return r.topic===topic;});setRecords(matchingRecords);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);window.alert(_context.t0.message);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return _getRecords.apply(this,arguments);}getRecords();},[topic]);if(!records.length){return/*#__PURE__*/_jsx(\"div\",{children:\"No record found\"});}return/*#__PURE__*/_jsx(\"div\",{children:records.map(function(record){return/*#__PURE__*/_jsx(LineChart,{record:record},record.topic);})});}","map":{"version":3,"names":["React","useEffect","useState","CanvasJSReact","useParams","CanvasJS","CanvasJSChart","LineChart","record","formatData","categories","formattedData","forEach","category","key","test","push","x","Date","split","reverse","join","y","formattedRecord","options","theme","animationEnabled","width","title","text","axisX","axisY","titleFontColor","lineColor","labelFontColor","tickColor","toolTip","shared","data","type","name","showInLegend","xValueFormatString","yValueFormatString","dataPoints","Total","Positive","color","Neutral","Negative","LineChartsContainer","topic","records","setRecords","getRecords","fetch","response","ok","Error","statusText","json","matchingRecords","filter","r","window","alert","message","length","map"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/src/views/dashboard/Overtime.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst LineChart = ({ record }) => {\r\n  const formatData = (record) => {\r\n    let categories = [\"Total\", \"Negative\", \"Positive\", \"Neutral\"];\r\n    let formattedData = {};\r\n\r\n    categories.forEach(category => {\r\n        formattedData[category] = [];\r\n        for (let key in record) {\r\n            // Check if the property format matches a date pattern\r\n            if (/^\\d{2}-\\d{2}-\\d{4}$/.test(key) && record[key][category]) {\r\n                // If it's a date, push the respective data to the category array\r\n                formattedData[category].push({\r\n                    x: new Date(key.split('-').reverse().join('-')),\r\n                    y: record[key][category],\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return formattedData;\r\n};\r\n\r\nconst formattedRecord = formatData(record);\r\n\r\nconst options = {\r\n    theme: \"light2\",\r\n    animationEnabled: true,\r\n    width: 600,\r\n    title: {\r\n        text: `Sentiment Analysis Overtime`\r\n    },\r\n    axisX: {\r\n    },\r\n    axisY: {\r\n        title: \"Counts\",\r\n        titleFontColor: \"#6D78AD\",\r\n        lineColor: \"#6D78AD\",\r\n        labelFontColor: \"#6D78AD\",\r\n        tickColor: \"#6D78AD\"\r\n    },\r\n    toolTip: {\r\n        shared: true\r\n    },\r\n    data: [\r\n        {\r\n            type: \"spline\",\r\n            name: \"Total\",\r\n            showInLegend: true,\r\n            xValueFormatString: \"DD MMM YYYY\",\r\n            yValueFormatString: \"#,##0\",\r\n            dataPoints: formattedRecord.Total\r\n        },\r\n        {\r\n            type: \"spline\",\r\n            name: \"Positive\",\r\n            showInLegend: true,\r\n            xValueFormatString: \"DD MMM YYYY\",\r\n            yValueFormatString: \"#,##0\",\r\n            dataPoints: formattedRecord.Positive,\r\n            color: \"#76CC9D\"\r\n        },\r\n        {\r\n            type: \"spline\",\r\n            name: \"Neutral\",\r\n            showInLegend: true,\r\n            xValueFormatString: \"DD MMM YYYY\",\r\n            yValueFormatString: \"#,##0\",\r\n            dataPoints: formattedRecord.Neutral,\r\n            color: \"#FADB7C\"\r\n        },\r\n        {\r\n            type: \"spline\",\r\n            name: \"Negative\",\r\n            showInLegend: true,\r\n            xValueFormatString: \"DD MMM YYYY\",\r\n            yValueFormatString: \"#,##0\",\r\n            dataPoints: formattedRecord.Negative,\r\n            color: \"#F46161\"\r\n        }\r\n    ]\r\n};\r\n\r\n    return (\r\n        <CanvasJSChart options={options} />\r\n    );\r\n};\r\n\r\nexport default function LineChartsContainer() {\r\n    const { topic } = useParams();\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5050/general_info/\");\r\n                if (!response.ok) {\r\n                    throw new Error(`An error occurred: ${response.statusText}`);\r\n                }\r\n                const records = await response.json();\r\n                const matchingRecords = records.filter((r) => r.topic === topic);\r\n                setRecords(matchingRecords);\r\n            } catch (error) {\r\n                window.alert(error.message);\r\n            }\r\n        }\r\n\r\n        getRecords();\r\n    }, [topic]);\r\n\r\n    if (!records.length) {\r\n        return <div>No record found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {records.map((record) => (\r\n                <LineChart record={record} key={record.topic} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}