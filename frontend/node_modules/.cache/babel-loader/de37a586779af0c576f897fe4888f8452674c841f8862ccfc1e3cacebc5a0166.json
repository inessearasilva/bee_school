{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React, { Component } from \"react\";\nimport { checkIfValidObject } from \"../../assets/functions/CheckIfValidObject/CheckIfValidObject\";\nimport { handleSubmit } from \"../../assets/functions/HandleSubmit/handleSubmit\";\nimport { handleIsVisible } from \"../../assets/functions/HandleTasks/handleIsVisible\";\nimport PageContainer from \"../../components/UI/PageContainer/PageContainer\";\nimport BackgroundContext from \"../../contexts/BackgroundContext\";\nimport ChangedFieldsContext from \"../../contexts/ChangedFieldsContext\";\nimport CodigosDependenciaContext from \"../../contexts/CodigosDependenciaContext\";\nimport CompositionPlanningContext from \"../../contexts/CompositionPlanningContext\";\nimport DatatypesContext from \"../../contexts/DatatypesContext\";\nimport FontContext from \"../../contexts/FontContext\";\nimport FormDataContext from \"../../contexts/FormDataContext\";\nimport FormOrderContext from \"../../contexts/FormOrderContext\";\nimport HSizesContext from \"../../contexts/HSizesContext\";\nimport ThemeContext from \"../../contexts/ThemeContext\";\nimport TokenContext from \"../../contexts/TokenContext\";\nimport DlmContextProvider from \"../../contexts/DlmContext\";\nimport SectionArchetypeContext from \"../../contexts/SectionArchetypeContext\";\nimport FormConsultMode from \"./FormModes/FormConsultMode\";\nimport { buildJDTRules } from \"../../assets/functions/BuildJDTRules/BuildJDTRules\";\nimport { handleOrder } from \"../../assets/functions/HandleOrder/HandleOrder\";\nimport { handleOrderAnyItens } from \"../../assets/functions/HandleOrder/HandleOrderAnyItens\";\nimport FormDesignerMode from \"./FormModes/FormDesignerMode\";\nimport FormEditMode from \"./FormModes/FormEditMode\";\nimport themeColors from \"../../assets/colors/ThemeColors\";\nimport objPath from \"object-path\";\nimport FormModeContext from \"../../contexts/FormModeContext\";\nimport ReferenceModelContext from \"../../contexts/ReferenceModelContext\";\nimport { orderObjectByValue } from \"../../assets/functions/Order/orderObjectByValue\";\nclass Form extends Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    _defineProperty(this, \"state\", {\n      editMode: false,\n      confirmEditMode: false,\n      themeColor: {},\n      backgroundColor: \"default\",\n      showPalette: false,\n      showPrint: false,\n      professionalTasks: [],\n      canSubmit: true,\n      canSave: true,\n      canCancel: true,\n      canSaveFD: true,\n      canCreateFD: true,\n      reportData: {},\n      patientData: {},\n      buttonClicked: \"\",\n      changedFields: [],\n      token: null,\n      codigosDependencia: null,\n      idJDT: null,\n      idComposition: null,\n      template: null,\n      dlm: null,\n      templateGroupId: null,\n      formDesignerMode: false,\n      formOrder: null,\n      formTitle: null,\n      datatypes: {},\n      textHeight: {},\n      showSectionTitle: {},\n      limitCharacters: {},\n      hsizes: {},\n      fileExtensions: {},\n      fileMaxSize: {},\n      referenceModel: [],\n      fontSize: {},\n      fontStyle: {},\n      fontAlignment: {},\n      fontLetters: {},\n      openCompositionPlanning: false,\n      openCompositionPlanningPath: \"\",\n      openCompositionPlanningDatatype: \"\",\n      compositionPlanning: {},\n      compositionPlanningRefsets: [],\n      compositionPlanningFunctions: [],\n      compositionPlanningInternalFunctions: [],\n      compositionPlanningTasks: [],\n      formFields: [],\n      openSectionArchetype: false,\n      openSectionArchetypeData: null,\n      sectionArchetype: {},\n      multimediaFields: [],\n      referenceModelJDT: {},\n      referenceModelForm: [],\n      formRM: []\n    });\n    _defineProperty(this, \"handleChangedFields\", path => {\n      if (this.state.changedFields.indexOf(path) === -1) {\n        this.setState(prevState => ({\n          ...prevState,\n          changedFields: [...prevState.changedFields, path]\n        }));\n      }\n    });\n    _defineProperty(this, \"handleSubmit\", async (values, multipleSections) => {\n      let jsonValues = handleSubmit(this.state.template, values, this.props.formRM);\n      multipleSections.forEach(function (section) {\n        const path = section.path.split(\"-\").join(\".\") + \".value\";\n        jsonValues[path] = section.values;\n      });\n      let changedFields;\n      changedFields = this.state.changedFields.map(path => {\n        const newPath = path.split(\"-\").join(\".\");\n        return newPath;\n      }).join(\";\");\n      if (typeof this.props.onSubmit === \"function\" && this.state.buttonClicked === \"submit\") {\n        this.props.onSubmit(JSON.stringify(jsonValues), changedFields);\n        this.setState({\n          buttonClicked: \"\"\n        });\n      } else if (typeof this.props.onSave === \"function\" && this.state.buttonClicked === \"save\") {\n        this.props.onSave(JSON.stringify(jsonValues), changedFields);\n        this.setState({\n          buttonClicked: \"\"\n        });\n      }\n    });\n    _defineProperty(this, \"handleCancelForm\", () => {\n      if (typeof this.props.onCancel === \"function\") {\n        this.props.onCancel(true);\n      }\n    });\n    _defineProperty(this, \"handleFormOrder\", (actionType, isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover) => {\n      let objOrder;\n      if (actionType === \"general\") {\n        objOrder = handleOrder(isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover, this.state.formOrder);\n      } else if (actionType === \"anyItens\") {\n        objOrder = handleOrderAnyItens(dragPath, dragOrder, hoverOrder, this.state.formOrder);\n      }\n      this.setState({\n        formOrder: objOrder\n      });\n    });\n    _defineProperty(this, \"handleRM\", (path, key, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        referenceModelForm: prevState.referenceModelForm.map(item => item.itemPath === path ? {\n          ...item,\n          [key]: value\n        } : item)\n      }));\n    });\n    _defineProperty(this, \"handleAddRM\", (rmItem, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelHover, isAnyHover, dropSectionPath, dragGroupID) => {\n      if (this.state.referenceModelForm.indexOf(rmItem) === -1) {\n        //rearranjar a ordem dos componentes\n        let objOrder = handleOrder(false, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, false, showLabelHover, false, isAnyHover, this.state.formOrder); //ir buscar o path da secção para a qual o item foi arrastado\n\n        rmItem[\"parentPath\"] = dropSectionPath;\n        rmItem[\"groupID\"] = dragGroupID; //actualizar o referenceModelForm com o componente colocado e a ordem\n\n        this.setState(prevState => ({\n          ...prevState,\n          referenceModelForm: [...prevState.referenceModelForm, rmItem],\n          formOrder: objOrder\n        }));\n      }\n    });\n    _defineProperty(this, \"handleRemoveRM\", itemPathRM => {\n      let path = itemPathRM.split(\".\").splice(1); // quando se clica no botão de remoção de um componente RM é preciso:\n      // 1. apagar esse elemento do referenceModelForm\n\n      this.setState(prevState => ({\n        ...prevState,\n        referenceModelForm: prevState.referenceModelForm.filter(item => item.itemPath !== path.join(\".\"))\n      })); //2. remover esse elemento do formOrder e reajustar a ordem dos restantes elementos\n      // obter a ordem do elemento que estamos a remover\n\n      let orderToRemove = this.state.formOrder[itemPathRM]; // remover o elemento\n\n      let objOrder = {\n        ...this.state.formOrder\n      };\n      Object.keys(objOrder).forEach(path => {\n        if (objOrder[path] === orderToRemove) {\n          delete objOrder[path];\n        } else if (objOrder[path] > orderToRemove) {\n          objOrder[path] = objOrder[path] - 1; //move item down\n        }\n      });\n\n      this.setState(prevState => ({\n        ...prevState,\n        formOrder: objOrder\n      }));\n    });\n    _defineProperty(this, \"handleThemeColor\", color => {\n      this.setState({\n        themeColor: color\n      });\n    });\n    _defineProperty(this, \"handleThemePalette\", (color, values) => {\n      if (color === \"personalizada\") {\n        this.setState({\n          themePalette: values\n        });\n      } else if (themeColors[color]) {\n        this.setState({\n          themePalette: themeColors[color]\n        });\n      }\n    });\n    _defineProperty(this, \"handleCancelThemeChange\", (previousColor, previousValues) => {\n      this.setState({\n        themeColor: previousColor,\n        themePalette: previousValues\n      });\n    });\n    _defineProperty(this, \"handleFontSize\", (type, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fontSize: {\n          ...prevState.fontSize,\n          [type]: value\n        }\n      }));\n    });\n    _defineProperty(this, \"handleFontStyle\", (type, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fontStyle: {\n          ...prevState.fontStyle,\n          [type]: value\n        }\n      }));\n    });\n    _defineProperty(this, \"handleFontAlignment\", (type, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fontAlignment: {\n          ...prevState.fontAlignment,\n          [type]: value\n        }\n      }));\n    });\n    _defineProperty(this, \"handleFontLetters\", (type, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fontLetters: {\n          ...prevState.fontLetters,\n          [type]: value\n        }\n      }));\n    });\n    _defineProperty(this, \"handleCancelFontChange\", (prevSizeValues, prevStyleValues, prevLetterValues, prevAlignValues) => {\n      this.setState({\n        fontSize: prevSizeValues,\n        fontStyle: prevStyleValues,\n        fontLetters: prevLetterValues,\n        fontAlignment: prevAlignValues\n      });\n    });\n    _defineProperty(this, \"handleDatatypes\", (path, datatype) => {\n      this.setState(prevState => ({\n        ...prevState,\n        datatypes: {\n          ...prevState.datatypes,\n          [path]: datatype\n        }\n      }));\n    });\n    _defineProperty(this, \"handleMultimediaFields\", (path, file, format) => {\n      this.setState(prevState => ({\n        ...prevState,\n        multimediaFields: [...prevState.multimediaFields, {\n          [path]: file,\n          format: format\n        }]\n      }));\n    });\n    _defineProperty(this, \"handleTextHeight\", (path, height) => {\n      this.setState(prevState => ({\n        ...prevState,\n        textHeight: {\n          ...prevState.textHeight,\n          [path]: height\n        }\n      }));\n    });\n    _defineProperty(this, \"handleSectionTitleVisibility\", (path, isVisible) => {\n      this.setState(prevState => ({\n        ...prevState,\n        showSectionTitle: {\n          ...prevState.showSectionTitle,\n          [path]: isVisible\n        }\n      }));\n    });\n    _defineProperty(this, \"handleLimitCharacaters\", (path, max) => {\n      this.setState(prevState => ({\n        ...prevState,\n        limitCharacters: {\n          ...prevState.limitCharacters,\n          [path]: max\n        }\n      }));\n    });\n    _defineProperty(this, \"handleRemoveField\", (path, type) => {\n      if (type === \"textHeight\") {\n        this.setState(prevState => {\n          let obj = {};\n          Object.keys(prevState.textHeight).forEach(p => {\n            if (p !== path) {\n              obj[p] = prevState.textHeight[p];\n            }\n          });\n          return {\n            ...prevState,\n            textHeight: obj\n          };\n        });\n      } else if (type === \"limitCharacters\") {\n        this.setState(prevState => {\n          let obj = {};\n          Object.keys(prevState.limitCharacters).forEach(p => {\n            if (p !== path) {\n              obj[p] = prevState.limitCharacters[p];\n            }\n          });\n          return {\n            ...prevState,\n            limitCharacters: obj\n          };\n        });\n      }\n    });\n    _defineProperty(this, \"handleHSizes\", (path, size) => {\n      this.setState(prevState => ({\n        ...prevState,\n        hsizes: {\n          ...prevState.hsizes,\n          [path]: size\n        }\n      }));\n    });\n    _defineProperty(this, \"handleFileExtensions\", (path, extensions) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fileExtensions: {\n          ...prevState.fileExtensions,\n          [path]: extensions\n        }\n      }));\n    });\n    _defineProperty(this, \"handleFileMaxSize\", (path, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        fileMaxSize: {\n          ...prevState.fileMaxSize,\n          [path]: value\n        }\n      }));\n    });\n    _defineProperty(this, \"handleOpenSectionArchetype\", function () {\n      let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (path === null) {\n        _this.setState({\n          openSectionArchetype: false,\n          openSectionArchetypeData: null\n        });\n      } else {\n        const archetype = objPath.get(_this.state.templateGroupId, path);\n        _this.setState(prevState => ({\n          ...prevState,\n          openSectionArchetype: true,\n          openSectionArchetypeData: {\n            parentPath: path,\n            parentName: archetype.node ? archetype.node.text : \"\",\n            parentOrder: prevState.formOrder[path]\n          }\n        }));\n      }\n    });\n    _defineProperty(this, \"handleEditSectionArchetype\", function (status, path) {\n      let newName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      if (status === \"open\") {\n        _this.setState(prevState => ({\n          ...prevState,\n          openSectionArchetype: true,\n          openSectionArchetypeData: {\n            path: path,\n            parentName: prevState.sectionArchetype[path].parentName\n          }\n        }));\n      } else if (\"edit\") {\n        _this.setState(prevState => ({\n          ...prevState,\n          openSectionArchetype: false,\n          openSectionArchetypeData: null,\n          sectionArchetype: {\n            ...prevState.sectionArchetype,\n            [path]: {\n              ...prevState.sectionArchetype[path],\n              sectionName: newName\n            }\n          }\n        }));\n      }\n    });\n    _defineProperty(this, \"handleRemoveSectionArchetype\", path => {\n      this.setState(prevState => {\n        let newSectionArchetype = {};\n        let obj = {};\n        Object.keys(prevState.sectionArchetype).forEach(x => {\n          if (x !== path) {\n            newSectionArchetype[x] = prevState.sectionArchetype[x];\n          }\n        });\n        Object.keys(prevState.formOrder).forEach(x => {\n          if (x !== path) {\n            if (prevState.formOrder[x] > prevState.formOrder[path]) {\n              obj[x] = prevState.formOrder[x] - 1;\n            } else {\n              obj[x] = prevState.formOrder[x];\n            }\n          }\n        });\n        return {\n          ...prevState,\n          formOrder: obj,\n          openSectionArchetype: false,\n          openSectionArchetypeData: null,\n          sectionArchetype: {\n            ...newSectionArchetype\n          }\n        };\n      });\n    });\n    _defineProperty(this, \"handleAddSectionArchetype\", (sectionName, parentName, parentPath, parentOrder) => {\n      this.setState(prevState => {\n        // Descalar a ordem dos restantes elementos porque a secção passa a ter ordem = parentOrder + 1\n        let max = -1;\n        Object.keys(prevState.sectionArchetype).forEach(x => {\n          const indexID = x.indexOf(\"id\");\n          const indexStop = x.indexOf(\".\");\n          if (Number(x.slice(indexID + 2, indexStop)) > max) {\n            max = x.slice(indexID + 2, indexStop);\n          }\n        }); // O path deve ser assim para ser único e para funcionar na ordenação\n\n        const id = `id${Number(max) + 1}.${parentPath}.${sectionName.replace(/\\s/g, \"\")}`;\n        let obj = {};\n        obj[id] = parentOrder + 1;\n        Object.keys(prevState.formOrder).forEach(x => {\n          if (prevState.formOrder[x] > parentOrder) {\n            obj[x] = prevState.formOrder[x] + 1;\n          } else {\n            obj[x] = prevState.formOrder[x];\n          }\n        }); // Ir buscar o groupID do item a seguir à secção => poder ser um item/secção normal ou um any item\n\n        const nextGroupID = objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID !== undefined ? objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID : objPath.get(this.state.templateGroupId, `${parentPath}.items.0.0`).groupID;\n        return {\n          ...prevState,\n          formOrder: obj,\n          openSectionArchetype: false,\n          openSectionArchetypeData: null,\n          sectionArchetype: {\n            ...prevState.sectionArchetype,\n            [id]: {\n              sectionName: sectionName,\n              groupID: nextGroupID,\n              parentName: parentName,\n              parentPath: parentPath\n            }\n          }\n        };\n      });\n    });\n    _defineProperty(this, \"handleOpenCompositionPlanning\", (path, datatype) => {\n      if (path === this.state.openCompositionPlanningPath) {\n        this.setState({\n          openCompositionPlanning: false,\n          openCompositionPlanningPath: \"\",\n          openCompositionPlanningDatatype: \"\"\n        });\n      } else {\n        this.setState({\n          openCompositionPlanning: true,\n          openCompositionPlanningPath: path,\n          openCompositionPlanningDatatype: datatype\n        });\n      }\n    });\n    _defineProperty(this, \"handleCompositionPlanning\", (path, key, value) => {\n      this.setState(prevState => ({\n        ...prevState,\n        compositionPlanning: {\n          ...prevState.compositionPlanning,\n          [path]: {\n            ...prevState.compositionPlanning[path],\n            [key]: value\n          }\n        }\n      }));\n    });\n    _defineProperty(this, \"updateFormTitle\", newName => {\n      this.setState({\n        formTitle: newName\n      });\n    });\n    _defineProperty(this, \"updateCompositionPlanningRefsets\", value => {\n      this.setState(prevState => ({\n        ...prevState,\n        compositionPlanningRefsets: [...value]\n      }));\n    });\n    _defineProperty(this, \"updateCompositionPlanningTasks\", value => {\n      this.setState(prevState => ({\n        ...prevState,\n        compositionPlanningTasks: [...value]\n      }));\n    });\n    _defineProperty(this, \"updateCompositionPlanningFunctions\", value => {\n      this.setState(prevState => ({\n        ...prevState,\n        compositionPlanningFunctions: [...value]\n      }));\n    });\n    _defineProperty(this, \"updateCompositionPlanningInternalFunctions\", value => {\n      this.setState(prevState => ({\n        ...prevState,\n        compositionPlanningInternalFunctions: [...value]\n      }));\n    });\n    _defineProperty(this, \"updateFormFields\", value => {\n      this.setState(prevState => ({\n        ...prevState,\n        formFields: [...value]\n      }));\n    });\n    _defineProperty(this, \"handleSaveFormDesigner\", type => {\n      const textHeight = {};\n      Object.keys(this.state.textHeight).forEach(p => {\n        if (this.state.textHeight[p] !== \"px\") {\n          textHeight[p] = this.state.textHeight[p];\n        }\n      });\n      const formDesign = {\n        formOrder: orderObjectByValue(this.state.formOrder),\n        formTitle: this.state.formTitle,\n        datatypes: this.state.datatypes,\n        hsizes: this.state.hsizes,\n        fileExtensions: this.state.fileExtensions,\n        fileMaxSize: this.state.fileMaxSize,\n        fontSize: this.state.fontSize,\n        fontStyle: this.state.fontStyle,\n        fontAlignment: this.state.fontAlignment,\n        fontLetters: this.state.fontLetters,\n        themeColor: this.state.themeColor,\n        themePalette: this.state.themePalette,\n        limitCharacters: this.state.limitCharacters,\n        sectionArchetype: this.state.sectionArchetype,\n        textHeight: this.state.textHeight,\n        showSectionTitle: this.state.showSectionTitle\n      };\n      const composition = [];\n      Object.keys(this.state.compositionPlanning).forEach(x => {\n        composition.push(this.state.compositionPlanning[x]);\n      });\n      const formRM = this.state.referenceModelForm;\n      if (type === \"save\" && typeof this.props.onSaveFormDesigner === \"function\") {\n        this.props.onSaveFormDesigner(JSON.stringify({\n          formDesign,\n          compositionPlanning: composition\n        }), JSON.stringify({\n          formRM\n        }));\n      } else if (type === \"create\" && typeof this.props.onCreateFormDesigner === \"function\") {\n        this.props.onCreateFormDesigner(JSON.stringify({\n          formDesign,\n          compositionPlanning: composition\n        }), JSON.stringify({\n          formRM\n        }));\n      }\n    });\n  }\n  async componentDidMount() {\n    let data;\n    let formOrder;\n    let formTitle;\n    let datatypes;\n    let hsizes;\n    let fileExtensions;\n    let fileMaxSize;\n    let fontSize;\n    let fontStyle;\n    let fontAlignment;\n    let fontLetters;\n    let themeColor;\n    let themePalette;\n    let textHeight;\n    let limitCharacters;\n    let sectionArchetype;\n    let showSectionTitle; // Valores defaults\n\n    const defaultFontSize = {\n      formTitle: \"16px\",\n      sectionTitle: \"12px\",\n      fieldTitle: \"11px\",\n      field: \"11px\",\n      button: \"12px\",\n      header: \"10px\"\n    };\n    const defaultFontStyle = {\n      formTitle: [],\n      sectionTitle: [],\n      fieldTitle: [\"font-bold\"],\n      button: [],\n      header: []\n    };\n    const defaultFontAlignment = {\n      formTitle: \"justify-center\",\n      sectionTitle: \"justify-left\",\n      fieldTitle: \"justify-left\"\n    };\n    const defaultFontLetters = {\n      formTitle: \"normal-case\",\n      sectionTitle: \"normal-case\",\n      fieldTitle: \"normal-case\",\n      button: \"normal-case\"\n    };\n    const defaultThemeColor = \"azul\";\n    const defaultThemePalette = themeColors[\"azul\"];\n    if (this.props.template && this.props.dlm) {\n      data = await buildJDTRules(this.props.template, this.props.dlm); // return [newTemplate, order, compositionPlanning]\n\n      formOrder = data[1];\n      formTitle = this.props.template.templateName;\n    } // Se for passado um formDesign, então o formOrder vai ser alterado\n\n    if (this.props.formDesign) {\n      try {\n        const design = JSON.parse(this.props.formDesign);\n        formOrder = design.formOrder ? design.formOrder : formOrder;\n        formTitle = design.formTitle ? design.formTitle : formTitle;\n        sectionArchetype = design.formOrder && design.sectionArchetype ? design.sectionArchetype : {};\n        fontSize = design.fontSize && checkIfValidObject(design.fontSize, defaultFontSize) ? design.fontSize : defaultFontSize;\n        fontStyle = design.fontStyle && checkIfValidObject(design.fontStyle, defaultFontStyle) ? design.fontStyle : defaultFontStyle;\n        fontAlignment = design.fontAlignment && checkIfValidObject(design.fontAlignment, defaultFontAlignment) ? design.fontAlignment : defaultFontAlignment;\n        fontLetters = design.fontLetters && checkIfValidObject(design.fontLetters, defaultFontLetters) ? design.fontLetters : defaultFontLetters;\n        datatypes = design.datatypes;\n        textHeight = design.textHeight;\n        showSectionTitle = design.showSectionTitle;\n        limitCharacters = design.limitCharacters;\n        hsizes = design.hsizes;\n        fileExtensions = design.fileExtensions;\n        fileMaxSize = design.fileMaxSize;\n        themeColor = design.themeColor === \"personalizada\" || themeColors[design.themeColor] !== undefined ? design.themeColor : defaultThemeColor;\n        themePalette = design.themePalette && checkIfValidObject(design.themePalette, defaultThemePalette) ? design.themePalette : themeColors[design.themeColor] !== undefined ? themeColors[design.themeColor] : defaultThemePalette;\n      } catch (e) {\n        fontSize = defaultFontSize;\n        fontStyle = defaultFontStyle;\n        fontAlignment = defaultFontAlignment;\n        fontLetters = defaultFontLetters;\n        themeColor = defaultThemeColor;\n        themePalette = defaultThemePalette;\n      }\n    } else {\n      fontSize = defaultFontSize;\n      fontStyle = defaultFontStyle;\n      fontAlignment = defaultFontAlignment;\n      fontLetters = defaultFontLetters;\n      themeColor = defaultThemeColor;\n      themePalette = defaultThemePalette;\n    }\n    if (this.props.formRM !== undefined && this.props.formRM !== null && this.props.formRM.length > 0) {\n      this.props.formRM.forEach(rm => {\n        this.setState(prevState => ({\n          ...prevState,\n          referenceModelForm: [...prevState.referenceModelForm, rm]\n        }));\n      });\n    }\n    this.setState({\n      formDesignerMode: this.props.formDesignerMode === true,\n      templateGroupId: this.props.formDesignerMode === true ? data ? data[0] : null : null,\n      compositionPlanning: this.props.formDesignerMode === true ? data ? data[2] : {} : {},\n      formOrder: formOrder ? formOrder : null,\n      formTitle: formTitle ? formTitle : null,\n      sectionArchetype: sectionArchetype ? sectionArchetype : {},\n      idJDT: this.props.idJDT,\n      idComposition: this.props.idComposition ? this.props.idComposition : null,\n      template: this.props.template,\n      dlm: this.props.dlm,\n      datatypes: datatypes ? datatypes : {},\n      textHeight: textHeight ? textHeight : {},\n      showSectionTitle: showSectionTitle ? showSectionTitle : {},\n      limitCharacters: limitCharacters ? limitCharacters : {},\n      hsizes: hsizes ? hsizes : {},\n      fileExtensions: fileExtensions ? fileExtensions : {},\n      fileMaxSize: fileMaxSize ? fileMaxSize : {},\n      fontSize: fontSize ? fontSize : defaultFontSize,\n      fontStyle: fontStyle ? fontStyle : defaultFontStyle,\n      fontAlignment: fontAlignment ? fontAlignment : defaultFontAlignment,\n      fontLetters: fontLetters ? fontLetters : defaultFontLetters,\n      referenceModel: this.props.referenceModel && Array.isArray(this.props.referenceModel) ? this.props.referenceModel : [],\n      themeColor: this.props.formColors && Array.isArray(this.props.formColors) ? this.props.formDesignerMode !== true && this.props.formColors.length === 4 ? this.props.formColors : themeColor : themeColor,\n      themePalette: themePalette ? themePalette : defaultThemePalette,\n      backgroundColor: this.props.pageBackgroundColor ? this.props.pageBackgroundColor : \"default\",\n      showPalette: this.props.formDesignerMode === true,\n      showPrint: this.props.formDesignerMode === true ? false : this.props.showPrint === true,\n      editMode: this.props.editMode === true,\n      professionalTasks: this.props.professionalTasks && Array.isArray(this.props.professionalTasks) ? this.props.professionalTasks : [],\n      canSave: this.props.formDesignerMode === true ? false : this.props.canSave !== false,\n      canSubmit: this.props.formDesignerMode === true ? false : this.props.canSubmit !== false,\n      canSaveFD: this.props.formDesignerMode === true ? this.props.canSaveFD !== false : false,\n      canCreateFD: this.props.formDesignerMode === true ? this.props.canCreateFD !== false : false,\n      canCancel: this.props.canCancel !== false,\n      patientData: this.props.patientData ? this.props.patientData : {},\n      reportData: this.props.reportData ? this.props.reportData : {},\n      token: this.props.token ? this.props.token : null,\n      referenceModelJDT: this.props.rmJDT ? this.props.rmJDT : null,\n      formRM: this.props.formRM === undefined ? [] : this.props.formRM,\n      codigosDependencia: this.props.codigosDependencia && Array.isArray(this.props.codigosDependencia) ? this.props.codigosDependencia : null\n    });\n  } // Implementado para fazer o this.setState após a construção do formulário editável\n  // Sem isso os erros não dão, precisa de haver mudança no estado...\n\n  componentDidUpdate() {\n    if (this.state.editMode && !this.state.confirmEditMode) {\n      this.setState(prevState => ({\n        ...prevState,\n        confirmEditMode: !prevState.confirmEditMode\n      }));\n    }\n  }\n  render() {\n    let form = null;\n    let formDesigner = null;\n    if (!this.state.formDesignerMode && this.state.template) {\n      if (this.state.editMode) {\n        let isVisible = !this.state.template.TaskVisible ? false : handleIsVisible(this.state.template, this.state.professionalTasks);\n        if (isVisible) {\n          form = /*#__PURE__*/React.createElement(FormEditMode, {\n            handleButtonClicked: type => this.setState({\n              buttonClicked: type\n            }),\n            buttonClickType: this.state.buttonClicked,\n            handleSubmit: (values, multipleSections) => this.handleSubmit(values, multipleSections),\n            handleCancelForm: () => this.handleCancelForm(),\n            professionalTasks: this.state.professionalTasks,\n            submitButtonDisabled: this.props.submitButtonDisabled,\n            saveButtonDisabled: this.props.saveButtonDisabled,\n            showInformacaoComplementar: this.props.showInformacaoComplementar,\n            showHeader: this.props.showHeader,\n            canSave: this.state.canSave,\n            canSubmit: this.state.canSubmit,\n            canCancel: this.state.canCancel,\n            showPrint: this.state.showPrint,\n            idJDT: this.state.idJDT,\n            idComposition: this.state.idComposition,\n            template: this.state.template,\n            formRM: this.state.formRM,\n            formTitle: this.state.formTitle,\n            multimediaFields: this.state.multimediaFields,\n            patientData: this.props.patientData,\n            userInfo: this.props.userInfo\n          });\n        }\n      } else if (!this.state.editMode) {\n        let isVisible;\n        if (!this.state.template.TaskVisible) {\n          isVisible = false;\n        } else {\n          isVisible = handleIsVisible(this.state.template, this.state.professionalTasks);\n        }\n        if (isVisible) {\n          form = /*#__PURE__*/React.createElement(FormConsultMode, {\n            professionalTasks: this.state.professionalTasks,\n            showPrint: this.state.showPrint,\n            template: this.state.template,\n            formRM: this.state.formRM,\n            formTitle: this.state.formTitle,\n            idComposition: this.state.idComposition\n          });\n        }\n      }\n    } else if (this.state.formDesignerMode) {\n      if (this.state.templateGroupId && this.state.formOrder) {\n        formDesigner = /*#__PURE__*/React.createElement(FormDesignerMode, {\n          handleFormOrder: this.handleFormOrder,\n          handleCancelForm: () => this.handleCancelForm(),\n          handleSaveFormDesigner: type => this.handleSaveFormDesigner(type),\n          canCancel: this.state.canCancel,\n          canCreateFD: this.state.canCreateFD,\n          canSaveFD: this.state.canSaveFD,\n          saveFDButtonDisabled: this.props.saveFDButtonDisabled,\n          createFDButtonDisabled: this.props.createFDButtonDisabled,\n          templateGroupId: this.state.templateGroupId,\n          formTitle: this.state.formTitle,\n          updateFormTitle: this.updateFormTitle\n        });\n      }\n    }\n    return /*#__PURE__*/React.createElement(FormModeContext.Provider, {\n      value: this.state.formDesignerMode ? \"design\" : this.state.editMode ? \"edit\" : \"consult\"\n    }, /*#__PURE__*/React.createElement(ReferenceModelContext.Provider, {\n      value: {\n        rmJDT: this.state.referenceModelJDT,\n        rmForm: this.state.referenceModelForm,\n        handleRM: this.handleRM,\n        handleAddRM: this.handleAddRM,\n        handleRemoveRM: this.handleRemoveRM\n      }\n    }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n      value: {\n        themeColor: this.state.themeColor,\n        themePalette: this.state.themePalette,\n        handleThemePalette: this.handleThemePalette,\n        handleThemeColor: this.handleThemeColor,\n        handleCancelThemeChange: this.handleCancelThemeChange\n      }\n    }, /*#__PURE__*/React.createElement(BackgroundContext.Provider, {\n      value: this.state.backgroundColor === \"default\" ? \"#ffffff\" : this.state.backgroundColor\n    }, /*#__PURE__*/React.createElement(ChangedFieldsContext.Provider, {\n      value: {\n        value: this.state.changedFields,\n        updateValue: this.handleChangedFields\n      }\n    }, /*#__PURE__*/React.createElement(DlmContextProvider, null, /*#__PURE__*/React.createElement(TokenContext.Provider, {\n      value: this.state.token\n    }, /*#__PURE__*/React.createElement(CodigosDependenciaContext.Provider, {\n      value: this.state.codigosDependencia\n    }, /*#__PURE__*/React.createElement(FormOrderContext.Provider, {\n      value: this.state.formOrder\n    }, /*#__PURE__*/React.createElement(DatatypesContext.Provider, {\n      value: {\n        datatypes: this.state.datatypes,\n        updateDatatypes: this.handleDatatypes,\n        textHeight: this.state.textHeight,\n        updateTextHeight: this.handleTextHeight,\n        limitCharacters: this.state.limitCharacters,\n        updateLimitCharacters: this.handleLimitCharacaters,\n        fileExtensions: this.state.fileExtensions,\n        fileMaxSize: this.state.fileMaxSize,\n        handleMultimediaFields: this.handleMultimediaFields,\n        handleFileMaxSize: this.handleFileMaxSize,\n        handleFileExtensions: this.handleFileExtensions,\n        removeField: this.handleRemoveField,\n        showSectionTitle: this.state.showSectionTitle,\n        updateSectionTitle: this.handleSectionTitleVisibility\n      }\n    }, /*#__PURE__*/React.createElement(HSizesContext.Provider, {\n      value: {\n        sizes: this.state.hsizes,\n        updateSizes: this.handleHSizes\n      }\n    }, /*#__PURE__*/React.createElement(FormDataContext.Provider, {\n      value: {\n        patientData: this.state.patientData,\n        reportData: this.state.reportData,\n        referenceModel: this.state.referenceModel\n      }\n    }, /*#__PURE__*/React.createElement(FontContext.Provider, {\n      value: {\n        fontSize: this.state.fontSize,\n        handleFontSize: this.handleFontSize,\n        fontStyle: this.state.fontStyle,\n        handleFontStyle: this.handleFontStyle,\n        fontLetters: this.state.fontLetters,\n        handleFontLetters: this.handleFontLetters,\n        fontAlignment: this.state.fontAlignment,\n        handleFontAlignment: this.handleFontAlignment,\n        handleCancelFontChange: this.handleCancelFontChange\n      }\n    }, /*#__PURE__*/React.createElement(CompositionPlanningContext.Provider, {\n      value: {\n        template: this.state.template,\n        compositionPlanning: this.state.compositionPlanning,\n        compositionPlanningRefsets: this.state.compositionPlanningRefsets,\n        compositionPlanningTasks: this.state.compositionPlanningTasks,\n        compositionPlanningFunctions: this.state.compositionPlanningFunctions,\n        compositionPlanningInternalFunctions: this.state.compositionPlanningInternalFunctions,\n        formFields: this.state.formFields,\n        updateCompositionPlanningRefsets: this.updateCompositionPlanningRefsets,\n        updateCompositionPlanningTasks: this.updateCompositionPlanningTasks,\n        updateCompositionPlanningFunctions: this.updateCompositionPlanningFunctions,\n        updateCompositionPlanningInternalFunctions: this.updateCompositionPlanningInternalFunctions,\n        updateFormFields: this.updateFormFields,\n        handleOpenCompositionPlanning: this.handleOpenCompositionPlanning,\n        openCompositionPlanningPath: this.state.openCompositionPlanningPath,\n        openCompositionPlanningDatatype: this.state.openCompositionPlanningDatatype,\n        openCompositionPlanning: this.state.openCompositionPlanning,\n        handleCompositionPlanning: this.handleCompositionPlanning\n      }\n    }, /*#__PURE__*/React.createElement(SectionArchetypeContext.Provider, {\n      value: {\n        sectionArchetype: this.state.sectionArchetype,\n        handleOpenSectionArchetype: this.handleOpenSectionArchetype,\n        openSectionArchetype: this.state.openSectionArchetype,\n        openSectionArchetypeData: this.state.openSectionArchetypeData,\n        handleSectionArchetype: this.handleAddSectionArchetype,\n        handleEditSectionArchetype: this.handleEditSectionArchetype,\n        handleRemoveSectionArchetype: this.handleRemoveSectionArchetype\n      }\n    }, /*#__PURE__*/React.createElement(PageContainer, null, this.state.formDesignerMode === false && this.state.professionalTasks.length > 0 && form, this.state.formDesignerMode === true && formDesigner))))))))))))))));\n  }\n}\nexport default Form;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","checkIfValidObject","handleSubmit","handleIsVisible","PageContainer","BackgroundContext","ChangedFieldsContext","CodigosDependenciaContext","CompositionPlanningContext","DatatypesContext","FontContext","FormDataContext","FormOrderContext","HSizesContext","ThemeContext","TokenContext","DlmContextProvider","SectionArchetypeContext","FormConsultMode","buildJDTRules","handleOrder","handleOrderAnyItens","FormDesignerMode","FormEditMode","themeColors","objPath","FormModeContext","ReferenceModelContext","orderObjectByValue","Form","constructor","editMode","confirmEditMode","themeColor","backgroundColor","showPalette","showPrint","professionalTasks","canSubmit","canSave","canCancel","canSaveFD","canCreateFD","reportData","patientData","buttonClicked","changedFields","token","codigosDependencia","idJDT","idComposition","template","dlm","templateGroupId","formDesignerMode","formOrder","formTitle","datatypes","textHeight","showSectionTitle","limitCharacters","hsizes","fileExtensions","fileMaxSize","referenceModel","fontSize","fontStyle","fontAlignment","fontLetters","openCompositionPlanning","openCompositionPlanningPath","openCompositionPlanningDatatype","compositionPlanning","compositionPlanningRefsets","compositionPlanningFunctions","compositionPlanningInternalFunctions","compositionPlanningTasks","formFields","openSectionArchetype","openSectionArchetypeData","sectionArchetype","multimediaFields","referenceModelJDT","referenceModelForm","formRM","path","state","indexOf","setState","prevState","values","multipleSections","jsonValues","props","forEach","section","split","join","map","newPath","onSubmit","JSON","stringify","onSave","onCancel","actionType","isSection","isSectionHover","dragPath","hoverPath","dragOrder","hoverOrder","showLabelDrag","showLabelHover","isAnyDrag","isAnyHover","objOrder","item","itemPath","rmItem","dropSectionPath","dragGroupID","itemPathRM","splice","filter","orderToRemove","keys","color","themePalette","previousColor","previousValues","type","prevSizeValues","prevStyleValues","prevLetterValues","prevAlignValues","datatype","file","format","height","isVisible","max","p","size","extensions","archetype","get","parentPath","parentName","node","text","parentOrder","status","newName","sectionName","newSectionArchetype","x","indexID","indexStop","Number","slice","id","replace","nextGroupID","groupID","undefined","formDesign","composition","push","onSaveFormDesigner","onCreateFormDesigner","componentDidMount","data","defaultFontSize","sectionTitle","fieldTitle","field","button","header","defaultFontStyle","defaultFontAlignment","defaultFontLetters","defaultThemeColor","defaultThemePalette","templateName","design","parse","e","length","rm","Array","isArray","formColors","pageBackgroundColor","rmJDT","componentDidUpdate","render","form","formDesigner","TaskVisible","createElement","handleButtonClicked","buttonClickType","handleCancelForm","submitButtonDisabled","saveButtonDisabled","showInformacaoComplementar","showHeader","userInfo","handleFormOrder","handleSaveFormDesigner","saveFDButtonDisabled","createFDButtonDisabled","updateFormTitle","Provider","rmForm","handleRM","handleAddRM","handleRemoveRM","handleThemePalette","handleThemeColor","handleCancelThemeChange","updateValue","handleChangedFields","updateDatatypes","handleDatatypes","updateTextHeight","handleTextHeight","updateLimitCharacters","handleLimitCharacaters","handleMultimediaFields","handleFileMaxSize","handleFileExtensions","removeField","handleRemoveField","updateSectionTitle","handleSectionTitleVisibility","sizes","updateSizes","handleHSizes","handleFontSize","handleFontStyle","handleFontLetters","handleFontAlignment","handleCancelFontChange","updateCompositionPlanningRefsets","updateCompositionPlanningTasks","updateCompositionPlanningFunctions","updateCompositionPlanningInternalFunctions","updateFormFields","handleOpenCompositionPlanning","handleCompositionPlanning","handleOpenSectionArchetype","handleSectionArchetype","handleAddSectionArchetype","handleEditSectionArchetype","handleRemoveSectionArchetype"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/Form.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport React, { Component } from \"react\";\r\nimport { checkIfValidObject } from \"../../assets/functions/CheckIfValidObject/CheckIfValidObject\";\r\nimport { handleSubmit } from \"../../assets/functions/HandleSubmit/handleSubmit\";\r\nimport { handleIsVisible } from \"../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport PageContainer from \"../../components/UI/PageContainer/PageContainer\";\r\nimport BackgroundContext from \"../../contexts/BackgroundContext\";\r\nimport ChangedFieldsContext from \"../../contexts/ChangedFieldsContext\";\r\nimport CodigosDependenciaContext from \"../../contexts/CodigosDependenciaContext\";\r\nimport CompositionPlanningContext from \"../../contexts/CompositionPlanningContext\";\r\nimport DatatypesContext from \"../../contexts/DatatypesContext\";\r\nimport FontContext from \"../../contexts/FontContext\";\r\nimport FormDataContext from \"../../contexts/FormDataContext\";\r\nimport FormOrderContext from \"../../contexts/FormOrderContext\";\r\nimport HSizesContext from \"../../contexts/HSizesContext\";\r\nimport ThemeContext from \"../../contexts/ThemeContext\";\r\nimport TokenContext from \"../../contexts/TokenContext\";\r\nimport DlmContextProvider from \"../../contexts/DlmContext\";\r\nimport SectionArchetypeContext from \"../../contexts/SectionArchetypeContext\";\r\nimport FormConsultMode from \"./FormModes/FormConsultMode\";\r\nimport { buildJDTRules } from \"../../assets/functions/BuildJDTRules/BuildJDTRules\";\r\nimport { handleOrder } from \"../../assets/functions/HandleOrder/HandleOrder\";\r\nimport { handleOrderAnyItens } from \"../../assets/functions/HandleOrder/HandleOrderAnyItens\";\r\nimport FormDesignerMode from \"./FormModes/FormDesignerMode\";\r\nimport FormEditMode from \"./FormModes/FormEditMode\";\r\nimport themeColors from \"../../assets/colors/ThemeColors\";\r\nimport objPath from \"object-path\";\r\nimport FormModeContext from \"../../contexts/FormModeContext\";\r\nimport ReferenceModelContext from \"../../contexts/ReferenceModelContext\";\r\nimport { orderObjectByValue } from \"../../assets/functions/Order/orderObjectByValue\";\r\n\r\nclass Form extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"state\", {\r\n      editMode: false,\r\n      confirmEditMode: false,\r\n      themeColor: {},\r\n      backgroundColor: \"default\",\r\n      showPalette: false,\r\n      showPrint: false,\r\n      professionalTasks: [],\r\n      canSubmit: true,\r\n      canSave: true,\r\n      canCancel: true,\r\n      canSaveFD: true,\r\n      canCreateFD: true,\r\n      reportData: {},\r\n      patientData: {},\r\n      buttonClicked: \"\",\r\n      changedFields: [],\r\n      token: null,\r\n      codigosDependencia: null,\r\n      idJDT: null,\r\n      idComposition: null,\r\n      template: null,\r\n      dlm: null,\r\n      templateGroupId: null,\r\n      formDesignerMode: false,\r\n      formOrder: null,\r\n      formTitle: null,\r\n      datatypes: {},\r\n      textHeight: {},\r\n      showSectionTitle: {},\r\n      limitCharacters: {},\r\n      hsizes: {},\r\n      fileExtensions: {},\r\n      fileMaxSize: {},\r\n      referenceModel: [],\r\n      fontSize: {},\r\n      fontStyle: {},\r\n      fontAlignment: {},\r\n      fontLetters: {},\r\n      openCompositionPlanning: false,\r\n      openCompositionPlanningPath: \"\",\r\n      openCompositionPlanningDatatype: \"\",\r\n      compositionPlanning: {},\r\n      compositionPlanningRefsets: [],\r\n      compositionPlanningFunctions: [],\r\n      compositionPlanningInternalFunctions: [],\r\n      compositionPlanningTasks: [],\r\n      formFields: [],\r\n      openSectionArchetype: false,\r\n      openSectionArchetypeData: null,\r\n      sectionArchetype: {},\r\n      multimediaFields: [],\r\n      referenceModelJDT: {},\r\n      referenceModelForm: [],\r\n      formRM: []\r\n    });\r\n\r\n    _defineProperty(this, \"handleChangedFields\", path => {\r\n      if (this.state.changedFields.indexOf(path) === -1) {\r\n        this.setState(prevState => ({ ...prevState,\r\n          changedFields: [...prevState.changedFields, path]\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleSubmit\", async (values, multipleSections) => {\r\n      let jsonValues = handleSubmit(this.state.template, values, this.props.formRM);\r\n      multipleSections.forEach(function (section) {\r\n        const path = section.path.split(\"-\").join(\".\") + \".value\";\r\n        jsonValues[path] = section.values;\r\n      });\r\n      let changedFields;\r\n      changedFields = this.state.changedFields.map(path => {\r\n        const newPath = path.split(\"-\").join(\".\");\r\n        return newPath;\r\n      }).join(\";\");\r\n\r\n      if (typeof this.props.onSubmit === \"function\" && this.state.buttonClicked === \"submit\") {\r\n        this.props.onSubmit(JSON.stringify(jsonValues), changedFields);\r\n        this.setState({\r\n          buttonClicked: \"\"\r\n        });\r\n      } else if (typeof this.props.onSave === \"function\" && this.state.buttonClicked === \"save\") {\r\n        this.props.onSave(JSON.stringify(jsonValues), changedFields);\r\n        this.setState({\r\n          buttonClicked: \"\"\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelForm\", () => {\r\n      if (typeof this.props.onCancel === \"function\") {\r\n        this.props.onCancel(true);\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleFormOrder\", (actionType, isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover) => {\r\n      let objOrder;\r\n\r\n      if (actionType === \"general\") {\r\n        objOrder = handleOrder(isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover, this.state.formOrder);\r\n      } else if (actionType === \"anyItens\") {\r\n        objOrder = handleOrderAnyItens(dragPath, dragOrder, hoverOrder, this.state.formOrder);\r\n      }\r\n\r\n      this.setState({\r\n        formOrder: objOrder\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleRM\", (path, key, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        referenceModelForm: prevState.referenceModelForm.map(item => item.itemPath === path ? { ...item,\r\n          [key]: value\r\n        } : item)\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleAddRM\", (rmItem, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelHover, isAnyHover, dropSectionPath, dragGroupID) => {\r\n      if (this.state.referenceModelForm.indexOf(rmItem) === -1) {\r\n        //rearranjar a ordem dos componentes\r\n        let objOrder = handleOrder(false, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, false, showLabelHover, false, isAnyHover, this.state.formOrder); //ir buscar o path da secção para a qual o item foi arrastado\r\n\r\n        rmItem[\"parentPath\"] = dropSectionPath;\r\n        rmItem[\"groupID\"] = dragGroupID; //actualizar o referenceModelForm com o componente colocado e a ordem\r\n\r\n        this.setState(prevState => ({ ...prevState,\r\n          referenceModelForm: [...prevState.referenceModelForm, rmItem],\r\n          formOrder: objOrder\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveRM\", itemPathRM => {\r\n      let path = itemPathRM.split(\".\").splice(1); // quando se clica no botão de remoção de um componente RM é preciso:\r\n      // 1. apagar esse elemento do referenceModelForm\r\n\r\n      this.setState(prevState => ({ ...prevState,\r\n        referenceModelForm: prevState.referenceModelForm.filter(item => item.itemPath !== path.join(\".\"))\r\n      })); //2. remover esse elemento do formOrder e reajustar a ordem dos restantes elementos\r\n      // obter a ordem do elemento que estamos a remover\r\n\r\n      let orderToRemove = this.state.formOrder[itemPathRM]; // remover o elemento\r\n\r\n      let objOrder = { ...this.state.formOrder\r\n      };\r\n      Object.keys(objOrder).forEach(path => {\r\n        if (objOrder[path] === orderToRemove) {\r\n          delete objOrder[path];\r\n        } else if (objOrder[path] > orderToRemove) {\r\n          objOrder[path] = objOrder[path] - 1; //move item down\r\n        }\r\n      });\r\n      this.setState(prevState => ({ ...prevState,\r\n        formOrder: objOrder\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleThemeColor\", color => {\r\n      this.setState({\r\n        themeColor: color\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleThemePalette\", (color, values) => {\r\n      if (color === \"personalizada\") {\r\n        this.setState({\r\n          themePalette: values\r\n        });\r\n      } else if (themeColors[color]) {\r\n        this.setState({\r\n          themePalette: themeColors[color]\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelThemeChange\", (previousColor, previousValues) => {\r\n      this.setState({\r\n        themeColor: previousColor,\r\n        themePalette: previousValues\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontSize\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontSize: { ...prevState.fontSize,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontStyle\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontStyle: { ...prevState.fontStyle,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontAlignment\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontAlignment: { ...prevState.fontAlignment,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontLetters\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontLetters: { ...prevState.fontLetters,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelFontChange\", (prevSizeValues, prevStyleValues, prevLetterValues, prevAlignValues) => {\r\n      this.setState({\r\n        fontSize: prevSizeValues,\r\n        fontStyle: prevStyleValues,\r\n        fontLetters: prevLetterValues,\r\n        fontAlignment: prevAlignValues\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleDatatypes\", (path, datatype) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        datatypes: { ...prevState.datatypes,\r\n          [path]: datatype\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleMultimediaFields\", (path, file, format) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        multimediaFields: [...prevState.multimediaFields, {\r\n          [path]: file,\r\n          format: format\r\n        }]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleTextHeight\", (path, height) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        textHeight: { ...prevState.textHeight,\r\n          [path]: height\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleSectionTitleVisibility\", (path, isVisible) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        showSectionTitle: { ...prevState.showSectionTitle,\r\n          [path]: isVisible\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleLimitCharacaters\", (path, max) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        limitCharacters: { ...prevState.limitCharacters,\r\n          [path]: max\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveField\", (path, type) => {\r\n      if (type === \"textHeight\") {\r\n        this.setState(prevState => {\r\n          let obj = {};\r\n          Object.keys(prevState.textHeight).forEach(p => {\r\n            if (p !== path) {\r\n              obj[p] = prevState.textHeight[p];\r\n            }\r\n          });\r\n          return { ...prevState,\r\n            textHeight: obj\r\n          };\r\n        });\r\n      } else if (type === \"limitCharacters\") {\r\n        this.setState(prevState => {\r\n          let obj = {};\r\n          Object.keys(prevState.limitCharacters).forEach(p => {\r\n            if (p !== path) {\r\n              obj[p] = prevState.limitCharacters[p];\r\n            }\r\n          });\r\n          return { ...prevState,\r\n            limitCharacters: obj\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleHSizes\", (path, size) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        hsizes: { ...prevState.hsizes,\r\n          [path]: size\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFileExtensions\", (path, extensions) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fileExtensions: { ...prevState.fileExtensions,\r\n          [path]: extensions\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFileMaxSize\", (path, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fileMaxSize: { ...prevState.fileMaxSize,\r\n          [path]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleOpenSectionArchetype\", (path = null) => {\r\n      if (path === null) {\r\n        this.setState({\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null\r\n        });\r\n      } else {\r\n        const archetype = objPath.get(this.state.templateGroupId, path);\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: true,\r\n          openSectionArchetypeData: {\r\n            parentPath: path,\r\n            parentName: archetype.node ? archetype.node.text : \"\",\r\n            parentOrder: prevState.formOrder[path]\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleEditSectionArchetype\", (status, path, newName = \"\") => {\r\n      if (status === \"open\") {\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: true,\r\n          openSectionArchetypeData: {\r\n            path: path,\r\n            parentName: prevState.sectionArchetype[path].parentName\r\n          }\r\n        }));\r\n      } else if (\"edit\") {\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...prevState.sectionArchetype,\r\n            [path]: { ...prevState.sectionArchetype[path],\r\n              sectionName: newName\r\n            }\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveSectionArchetype\", path => {\r\n      this.setState(prevState => {\r\n        let newSectionArchetype = {};\r\n        let obj = {};\r\n        Object.keys(prevState.sectionArchetype).forEach(x => {\r\n          if (x !== path) {\r\n            newSectionArchetype[x] = prevState.sectionArchetype[x];\r\n          }\r\n        });\r\n        Object.keys(prevState.formOrder).forEach(x => {\r\n          if (x !== path) {\r\n            if (prevState.formOrder[x] > prevState.formOrder[path]) {\r\n              obj[x] = prevState.formOrder[x] - 1;\r\n            } else {\r\n              obj[x] = prevState.formOrder[x];\r\n            }\r\n          }\r\n        });\r\n        return { ...prevState,\r\n          formOrder: obj,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...newSectionArchetype\r\n          }\r\n        };\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleAddSectionArchetype\", (sectionName, parentName, parentPath, parentOrder) => {\r\n      this.setState(prevState => {\r\n        // Descalar a ordem dos restantes elementos porque a secção passa a ter ordem = parentOrder + 1\r\n        let max = -1;\r\n        Object.keys(prevState.sectionArchetype).forEach(x => {\r\n          const indexID = x.indexOf(\"id\");\r\n          const indexStop = x.indexOf(\".\");\r\n\r\n          if (Number(x.slice(indexID + 2, indexStop)) > max) {\r\n            max = x.slice(indexID + 2, indexStop);\r\n          }\r\n        }); // O path deve ser assim para ser único e para funcionar na ordenação\r\n\r\n        const id = `id${Number(max) + 1}.${parentPath}.${sectionName.replace(/\\s/g, \"\")}`;\r\n        let obj = {};\r\n        obj[id] = parentOrder + 1;\r\n        Object.keys(prevState.formOrder).forEach(x => {\r\n          if (prevState.formOrder[x] > parentOrder) {\r\n            obj[x] = prevState.formOrder[x] + 1;\r\n          } else {\r\n            obj[x] = prevState.formOrder[x];\r\n          }\r\n        }); // Ir buscar o groupID do item a seguir à secção => poder ser um item/secção normal ou um any item\r\n\r\n        const nextGroupID = objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID !== undefined ? objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID : objPath.get(this.state.templateGroupId, `${parentPath}.items.0.0`).groupID;\r\n        return { ...prevState,\r\n          formOrder: obj,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...prevState.sectionArchetype,\r\n            [id]: {\r\n              sectionName: sectionName,\r\n              groupID: nextGroupID,\r\n              parentName: parentName,\r\n              parentPath: parentPath\r\n            }\r\n          }\r\n        };\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleOpenCompositionPlanning\", (path, datatype) => {\r\n      if (path === this.state.openCompositionPlanningPath) {\r\n        this.setState({\r\n          openCompositionPlanning: false,\r\n          openCompositionPlanningPath: \"\",\r\n          openCompositionPlanningDatatype: \"\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          openCompositionPlanning: true,\r\n          openCompositionPlanningPath: path,\r\n          openCompositionPlanningDatatype: datatype\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCompositionPlanning\", (path, key, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanning: { ...prevState.compositionPlanning,\r\n          [path]: { ...prevState.compositionPlanning[path],\r\n            [key]: value\r\n          }\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateFormTitle\", newName => {\r\n      this.setState({\r\n        formTitle: newName\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningRefsets\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningRefsets: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningTasks\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningTasks: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningFunctions\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningFunctions: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningInternalFunctions\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningInternalFunctions: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateFormFields\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        formFields: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleSaveFormDesigner\", type => {\r\n      const textHeight = {};\r\n      Object.keys(this.state.textHeight).forEach(p => {\r\n        if (this.state.textHeight[p] !== \"px\") {\r\n          textHeight[p] = this.state.textHeight[p];\r\n        }\r\n      });\r\n      const formDesign = {\r\n        formOrder: orderObjectByValue(this.state.formOrder),\r\n        formTitle: this.state.formTitle,\r\n        datatypes: this.state.datatypes,\r\n        hsizes: this.state.hsizes,\r\n        fileExtensions: this.state.fileExtensions,\r\n        fileMaxSize: this.state.fileMaxSize,\r\n        fontSize: this.state.fontSize,\r\n        fontStyle: this.state.fontStyle,\r\n        fontAlignment: this.state.fontAlignment,\r\n        fontLetters: this.state.fontLetters,\r\n        themeColor: this.state.themeColor,\r\n        themePalette: this.state.themePalette,\r\n        limitCharacters: this.state.limitCharacters,\r\n        sectionArchetype: this.state.sectionArchetype,\r\n        textHeight: this.state.textHeight,\r\n        showSectionTitle: this.state.showSectionTitle\r\n      };\r\n      const composition = [];\r\n      Object.keys(this.state.compositionPlanning).forEach(x => {\r\n        composition.push(this.state.compositionPlanning[x]);\r\n      });\r\n      const formRM = this.state.referenceModelForm;\r\n\r\n      if (type === \"save\" && typeof this.props.onSaveFormDesigner === \"function\") {\r\n        this.props.onSaveFormDesigner(JSON.stringify({\r\n          formDesign,\r\n          compositionPlanning: composition\r\n        }), JSON.stringify({\r\n          formRM\r\n        }));\r\n      } else if (type === \"create\" && typeof this.props.onCreateFormDesigner === \"function\") {\r\n        this.props.onCreateFormDesigner(JSON.stringify({\r\n          formDesign,\r\n          compositionPlanning: composition\r\n        }), JSON.stringify({\r\n          formRM\r\n        }));\r\n      }\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data;\r\n    let formOrder;\r\n    let formTitle;\r\n    let datatypes;\r\n    let hsizes;\r\n    let fileExtensions;\r\n    let fileMaxSize;\r\n    let fontSize;\r\n    let fontStyle;\r\n    let fontAlignment;\r\n    let fontLetters;\r\n    let themeColor;\r\n    let themePalette;\r\n    let textHeight;\r\n    let limitCharacters;\r\n    let sectionArchetype;\r\n    let showSectionTitle; // Valores defaults\r\n\r\n    const defaultFontSize = {\r\n      formTitle: \"16px\",\r\n      sectionTitle: \"12px\",\r\n      fieldTitle: \"11px\",\r\n      field: \"11px\",\r\n      button: \"12px\",\r\n      header: \"10px\"\r\n    };\r\n    const defaultFontStyle = {\r\n      formTitle: [],\r\n      sectionTitle: [],\r\n      fieldTitle: [\"font-bold\"],\r\n      button: [],\r\n      header: []\r\n    };\r\n    const defaultFontAlignment = {\r\n      formTitle: \"justify-center\",\r\n      sectionTitle: \"justify-left\",\r\n      fieldTitle: \"justify-left\"\r\n    };\r\n    const defaultFontLetters = {\r\n      formTitle: \"normal-case\",\r\n      sectionTitle: \"normal-case\",\r\n      fieldTitle: \"normal-case\",\r\n      button: \"normal-case\"\r\n    };\r\n    const defaultThemeColor = \"azul\";\r\n    const defaultThemePalette = themeColors[\"azul\"];\r\n\r\n    if (this.props.template && this.props.dlm) {\r\n      data = await buildJDTRules(this.props.template, this.props.dlm); // return [newTemplate, order, compositionPlanning]\r\n\r\n      formOrder = data[1];\r\n      formTitle = this.props.template.templateName;\r\n    } // Se for passado um formDesign, então o formOrder vai ser alterado\r\n\r\n\r\n    if (this.props.formDesign) {\r\n      try {\r\n        const design = JSON.parse(this.props.formDesign);\r\n        formOrder = design.formOrder ? design.formOrder : formOrder;\r\n        formTitle = design.formTitle ? design.formTitle : formTitle;\r\n        sectionArchetype = design.formOrder && design.sectionArchetype ? design.sectionArchetype : {};\r\n        fontSize = design.fontSize && checkIfValidObject(design.fontSize, defaultFontSize) ? design.fontSize : defaultFontSize;\r\n        fontStyle = design.fontStyle && checkIfValidObject(design.fontStyle, defaultFontStyle) ? design.fontStyle : defaultFontStyle;\r\n        fontAlignment = design.fontAlignment && checkIfValidObject(design.fontAlignment, defaultFontAlignment) ? design.fontAlignment : defaultFontAlignment;\r\n        fontLetters = design.fontLetters && checkIfValidObject(design.fontLetters, defaultFontLetters) ? design.fontLetters : defaultFontLetters;\r\n        datatypes = design.datatypes;\r\n        textHeight = design.textHeight;\r\n        showSectionTitle = design.showSectionTitle;\r\n        limitCharacters = design.limitCharacters;\r\n        hsizes = design.hsizes;\r\n        fileExtensions = design.fileExtensions;\r\n        fileMaxSize = design.fileMaxSize;\r\n        themeColor = design.themeColor === \"personalizada\" || themeColors[design.themeColor] !== undefined ? design.themeColor : defaultThemeColor;\r\n        themePalette = design.themePalette && checkIfValidObject(design.themePalette, defaultThemePalette) ? design.themePalette : themeColors[design.themeColor] !== undefined ? themeColors[design.themeColor] : defaultThemePalette;\r\n      } catch (e) {\r\n        fontSize = defaultFontSize;\r\n        fontStyle = defaultFontStyle;\r\n        fontAlignment = defaultFontAlignment;\r\n        fontLetters = defaultFontLetters;\r\n        themeColor = defaultThemeColor;\r\n        themePalette = defaultThemePalette;\r\n      }\r\n    } else {\r\n      fontSize = defaultFontSize;\r\n      fontStyle = defaultFontStyle;\r\n      fontAlignment = defaultFontAlignment;\r\n      fontLetters = defaultFontLetters;\r\n      themeColor = defaultThemeColor;\r\n      themePalette = defaultThemePalette;\r\n    }\r\n\r\n    if (this.props.formRM !== undefined && this.props.formRM !== null && this.props.formRM.length > 0) {\r\n      this.props.formRM.forEach(rm => {\r\n        this.setState(prevState => ({ ...prevState,\r\n          referenceModelForm: [...prevState.referenceModelForm, rm]\r\n        }));\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      formDesignerMode: this.props.formDesignerMode === true,\r\n      templateGroupId: this.props.formDesignerMode === true ? data ? data[0] : null : null,\r\n      compositionPlanning: this.props.formDesignerMode === true ? data ? data[2] : {} : {},\r\n      formOrder: formOrder ? formOrder : null,\r\n      formTitle: formTitle ? formTitle : null,\r\n      sectionArchetype: sectionArchetype ? sectionArchetype : {},\r\n      idJDT: this.props.idJDT,\r\n      idComposition: this.props.idComposition ? this.props.idComposition : null,\r\n      template: this.props.template,\r\n      dlm: this.props.dlm,\r\n      datatypes: datatypes ? datatypes : {},\r\n      textHeight: textHeight ? textHeight : {},\r\n      showSectionTitle: showSectionTitle ? showSectionTitle : {},\r\n      limitCharacters: limitCharacters ? limitCharacters : {},\r\n      hsizes: hsizes ? hsizes : {},\r\n      fileExtensions: fileExtensions ? fileExtensions : {},\r\n      fileMaxSize: fileMaxSize ? fileMaxSize : {},\r\n      fontSize: fontSize ? fontSize : defaultFontSize,\r\n      fontStyle: fontStyle ? fontStyle : defaultFontStyle,\r\n      fontAlignment: fontAlignment ? fontAlignment : defaultFontAlignment,\r\n      fontLetters: fontLetters ? fontLetters : defaultFontLetters,\r\n      referenceModel: this.props.referenceModel && Array.isArray(this.props.referenceModel) ? this.props.referenceModel : [],\r\n      themeColor: this.props.formColors && Array.isArray(this.props.formColors) ? this.props.formDesignerMode !== true && this.props.formColors.length === 4 ? this.props.formColors : themeColor : themeColor,\r\n      themePalette: themePalette ? themePalette : defaultThemePalette,\r\n      backgroundColor: this.props.pageBackgroundColor ? this.props.pageBackgroundColor : \"default\",\r\n      showPalette: this.props.formDesignerMode === true,\r\n      showPrint: this.props.formDesignerMode === true ? false : this.props.showPrint === true,\r\n      editMode: this.props.editMode === true,\r\n      professionalTasks: this.props.professionalTasks && Array.isArray(this.props.professionalTasks) ? this.props.professionalTasks : [],\r\n      canSave: this.props.formDesignerMode === true ? false : this.props.canSave !== false,\r\n      canSubmit: this.props.formDesignerMode === true ? false : this.props.canSubmit !== false,\r\n      canSaveFD: this.props.formDesignerMode === true ? this.props.canSaveFD !== false : false,\r\n      canCreateFD: this.props.formDesignerMode === true ? this.props.canCreateFD !== false : false,\r\n      canCancel: this.props.canCancel !== false,\r\n      patientData: this.props.patientData ? this.props.patientData : {},\r\n      reportData: this.props.reportData ? this.props.reportData : {},\r\n      token: this.props.token ? this.props.token : null,\r\n      referenceModelJDT: this.props.rmJDT ? this.props.rmJDT : null,\r\n      formRM: this.props.formRM === undefined ? [] : this.props.formRM,\r\n      codigosDependencia: this.props.codigosDependencia && Array.isArray(this.props.codigosDependencia) ? this.props.codigosDependencia : null\r\n    });\r\n  } // Implementado para fazer o this.setState após a construção do formulário editável\r\n  // Sem isso os erros não dão, precisa de haver mudança no estado...\r\n\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.editMode && !this.state.confirmEditMode) {\r\n      this.setState(prevState => ({ ...prevState,\r\n        confirmEditMode: !prevState.confirmEditMode\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let form = null;\r\n    let formDesigner = null;\r\n\r\n    if (!this.state.formDesignerMode && this.state.template) {\r\n      if (this.state.editMode) {\r\n        let isVisible = !this.state.template.TaskVisible ? false : handleIsVisible(this.state.template, this.state.professionalTasks);\r\n\r\n        if (isVisible) {\r\n          form = /*#__PURE__*/React.createElement(FormEditMode, {\r\n            handleButtonClicked: type => this.setState({\r\n              buttonClicked: type\r\n            }),\r\n            buttonClickType: this.state.buttonClicked,\r\n            handleSubmit: (values, multipleSections) => this.handleSubmit(values, multipleSections),\r\n            handleCancelForm: () => this.handleCancelForm(),\r\n            professionalTasks: this.state.professionalTasks,\r\n            submitButtonDisabled: this.props.submitButtonDisabled,\r\n            saveButtonDisabled: this.props.saveButtonDisabled,\r\n            showInformacaoComplementar: this.props.showInformacaoComplementar,\r\n            showHeader: this.props.showHeader,\r\n            canSave: this.state.canSave,\r\n            canSubmit: this.state.canSubmit,\r\n            canCancel: this.state.canCancel,\r\n            showPrint: this.state.showPrint,\r\n            idJDT: this.state.idJDT,\r\n            idComposition: this.state.idComposition,\r\n            template: this.state.template,\r\n            formRM: this.state.formRM,\r\n            formTitle: this.state.formTitle,\r\n            multimediaFields: this.state.multimediaFields,\r\n            patientData: this.props.patientData,\r\n            userInfo: this.props.userInfo\r\n          });\r\n        }\r\n      } else if (!this.state.editMode) {\r\n        let isVisible;\r\n\r\n        if (!this.state.template.TaskVisible) {\r\n          isVisible = false;\r\n        } else {\r\n          isVisible = handleIsVisible(this.state.template, this.state.professionalTasks);\r\n        }\r\n\r\n        if (isVisible) {\r\n          form = /*#__PURE__*/React.createElement(FormConsultMode, {\r\n            professionalTasks: this.state.professionalTasks,\r\n            showPrint: this.state.showPrint,\r\n            template: this.state.template,\r\n            formRM: this.state.formRM,\r\n            formTitle: this.state.formTitle,\r\n            idComposition: this.state.idComposition\r\n          });\r\n        }\r\n      }\r\n    } else if (this.state.formDesignerMode) {\r\n      if (this.state.templateGroupId && this.state.formOrder) {\r\n        formDesigner = /*#__PURE__*/React.createElement(FormDesignerMode, {\r\n          handleFormOrder: this.handleFormOrder,\r\n          handleCancelForm: () => this.handleCancelForm(),\r\n          handleSaveFormDesigner: type => this.handleSaveFormDesigner(type),\r\n          canCancel: this.state.canCancel,\r\n          canCreateFD: this.state.canCreateFD,\r\n          canSaveFD: this.state.canSaveFD,\r\n          saveFDButtonDisabled: this.props.saveFDButtonDisabled,\r\n          createFDButtonDisabled: this.props.createFDButtonDisabled,\r\n          templateGroupId: this.state.templateGroupId,\r\n          formTitle: this.state.formTitle,\r\n          updateFormTitle: this.updateFormTitle\r\n        });\r\n      }\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(FormModeContext.Provider, {\r\n      value: this.state.formDesignerMode ? \"design\" : this.state.editMode ? \"edit\" : \"consult\"\r\n    }, /*#__PURE__*/React.createElement(ReferenceModelContext.Provider, {\r\n      value: {\r\n        rmJDT: this.state.referenceModelJDT,\r\n        rmForm: this.state.referenceModelForm,\r\n        handleRM: this.handleRM,\r\n        handleAddRM: this.handleAddRM,\r\n        handleRemoveRM: this.handleRemoveRM\r\n      }\r\n    }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\r\n      value: {\r\n        themeColor: this.state.themeColor,\r\n        themePalette: this.state.themePalette,\r\n        handleThemePalette: this.handleThemePalette,\r\n        handleThemeColor: this.handleThemeColor,\r\n        handleCancelThemeChange: this.handleCancelThemeChange\r\n      }\r\n    }, /*#__PURE__*/React.createElement(BackgroundContext.Provider, {\r\n      value: this.state.backgroundColor === \"default\" ? \"#ffffff\" : this.state.backgroundColor\r\n    }, /*#__PURE__*/React.createElement(ChangedFieldsContext.Provider, {\r\n      value: {\r\n        value: this.state.changedFields,\r\n        updateValue: this.handleChangedFields\r\n      }\r\n    }, /*#__PURE__*/React.createElement(DlmContextProvider, null, /*#__PURE__*/React.createElement(TokenContext.Provider, {\r\n      value: this.state.token\r\n    }, /*#__PURE__*/React.createElement(CodigosDependenciaContext.Provider, {\r\n      value: this.state.codigosDependencia\r\n    }, /*#__PURE__*/React.createElement(FormOrderContext.Provider, {\r\n      value: this.state.formOrder\r\n    }, /*#__PURE__*/React.createElement(DatatypesContext.Provider, {\r\n      value: {\r\n        datatypes: this.state.datatypes,\r\n        updateDatatypes: this.handleDatatypes,\r\n        textHeight: this.state.textHeight,\r\n        updateTextHeight: this.handleTextHeight,\r\n        limitCharacters: this.state.limitCharacters,\r\n        updateLimitCharacters: this.handleLimitCharacaters,\r\n        fileExtensions: this.state.fileExtensions,\r\n        fileMaxSize: this.state.fileMaxSize,\r\n        handleMultimediaFields: this.handleMultimediaFields,\r\n        handleFileMaxSize: this.handleFileMaxSize,\r\n        handleFileExtensions: this.handleFileExtensions,\r\n        removeField: this.handleRemoveField,\r\n        showSectionTitle: this.state.showSectionTitle,\r\n        updateSectionTitle: this.handleSectionTitleVisibility\r\n      }\r\n    }, /*#__PURE__*/React.createElement(HSizesContext.Provider, {\r\n      value: {\r\n        sizes: this.state.hsizes,\r\n        updateSizes: this.handleHSizes\r\n      }\r\n    }, /*#__PURE__*/React.createElement(FormDataContext.Provider, {\r\n      value: {\r\n        patientData: this.state.patientData,\r\n        reportData: this.state.reportData,\r\n        referenceModel: this.state.referenceModel\r\n      }\r\n    }, /*#__PURE__*/React.createElement(FontContext.Provider, {\r\n      value: {\r\n        fontSize: this.state.fontSize,\r\n        handleFontSize: this.handleFontSize,\r\n        fontStyle: this.state.fontStyle,\r\n        handleFontStyle: this.handleFontStyle,\r\n        fontLetters: this.state.fontLetters,\r\n        handleFontLetters: this.handleFontLetters,\r\n        fontAlignment: this.state.fontAlignment,\r\n        handleFontAlignment: this.handleFontAlignment,\r\n        handleCancelFontChange: this.handleCancelFontChange\r\n      }\r\n    }, /*#__PURE__*/React.createElement(CompositionPlanningContext.Provider, {\r\n      value: {\r\n        template: this.state.template,\r\n        compositionPlanning: this.state.compositionPlanning,\r\n        compositionPlanningRefsets: this.state.compositionPlanningRefsets,\r\n        compositionPlanningTasks: this.state.compositionPlanningTasks,\r\n        compositionPlanningFunctions: this.state.compositionPlanningFunctions,\r\n        compositionPlanningInternalFunctions: this.state.compositionPlanningInternalFunctions,\r\n        formFields: this.state.formFields,\r\n        updateCompositionPlanningRefsets: this.updateCompositionPlanningRefsets,\r\n        updateCompositionPlanningTasks: this.updateCompositionPlanningTasks,\r\n        updateCompositionPlanningFunctions: this.updateCompositionPlanningFunctions,\r\n        updateCompositionPlanningInternalFunctions: this.updateCompositionPlanningInternalFunctions,\r\n        updateFormFields: this.updateFormFields,\r\n        handleOpenCompositionPlanning: this.handleOpenCompositionPlanning,\r\n        openCompositionPlanningPath: this.state.openCompositionPlanningPath,\r\n        openCompositionPlanningDatatype: this.state.openCompositionPlanningDatatype,\r\n        openCompositionPlanning: this.state.openCompositionPlanning,\r\n        handleCompositionPlanning: this.handleCompositionPlanning\r\n      }\r\n    }, /*#__PURE__*/React.createElement(SectionArchetypeContext.Provider, {\r\n      value: {\r\n        sectionArchetype: this.state.sectionArchetype,\r\n        handleOpenSectionArchetype: this.handleOpenSectionArchetype,\r\n        openSectionArchetype: this.state.openSectionArchetype,\r\n        openSectionArchetypeData: this.state.openSectionArchetypeData,\r\n        handleSectionArchetype: this.handleAddSectionArchetype,\r\n        handleEditSectionArchetype: this.handleEditSectionArchetype,\r\n        handleRemoveSectionArchetype: this.handleRemoveSectionArchetype\r\n      }\r\n    }, /*#__PURE__*/React.createElement(PageContainer, null, this.state.formDesignerMode === false && this.state.professionalTasks.length > 0 && form, this.state.formDesignerMode === true && formDesigner))))))))))))))));\r\n  }\r\n\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}