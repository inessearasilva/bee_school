{"ast":null,"code":"import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function skipNotifyOnElement(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox, true);\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n    return false;\n  };\n  return ResizeObservation;\n}();\nexport { ResizeObservation };","map":{"version":3,"names":["ResizeObserverBoxOptions","calculateBoxSize","isSVG","isReplacedElement","skipNotifyOnElement","target","getComputedStyle","display","ResizeObservation","observedBox","CONTENT_BOX","lastReportedSize","inlineSize","blockSize","prototype","isActive","size"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/@juggle/resize-observer/lib/ResizeObservation.js"],"sourcesContent":["import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\r\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\r\nimport { isSVG, isReplacedElement } from './utils/element';\r\nvar skipNotifyOnElement = function (target) {\r\n    return !isSVG(target)\r\n        && !isReplacedElement(target)\r\n        && getComputedStyle(target).display === 'inline';\r\n};\r\nvar ResizeObservation = (function () {\r\n    function ResizeObservation(target, observedBox) {\r\n        this.target = target;\r\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\r\n        this.lastReportedSize = {\r\n            inlineSize: 0,\r\n            blockSize: 0\r\n        };\r\n    }\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var size = calculateBoxSize(this.target, this.observedBox, true);\r\n        if (skipNotifyOnElement(this.target)) {\r\n            this.lastReportedSize = size;\r\n        }\r\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\r\n            || this.lastReportedSize.blockSize !== size.blockSize) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ResizeObservation;\r\n}());\r\nexport { ResizeObservation };\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,KAAK,EAAEC,iBAAiB,QAAQ,iBAAiB;AAC1D,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAaC,MAAM,EAAE;EACxC,OAAO,CAACH,KAAK,CAACG,MAAM,CAAC,IACd,CAACF,iBAAiB,CAACE,MAAM,CAAC,IAC1BC,gBAAgB,CAACD,MAAM,CAAC,CAACE,OAAO,KAAK,QAAQ;AACxD,CAAC;AACD,IAAIC,iBAAiB,GAAI,YAAY;EACjC,SAASA,iBAAiB,CAACH,MAAM,EAAEI,WAAW,EAAE;IAC5C,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACI,WAAW,GAAGA,WAAW,IAAIT,wBAAwB,CAACU,WAAW;IACtE,IAAI,CAACC,gBAAgB,GAAG;MACpBC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;IACf,CAAC;EACL;EACAL,iBAAiB,CAACM,SAAS,CAACC,QAAQ,GAAG,YAAY;IAC/C,IAAIC,IAAI,GAAGf,gBAAgB,CAAC,IAAI,CAACI,MAAM,EAAE,IAAI,CAACI,WAAW,EAAE,IAAI,CAAC;IAChE,IAAIL,mBAAmB,CAAC,IAAI,CAACC,MAAM,CAAC,EAAE;MAClC,IAAI,CAACM,gBAAgB,GAAGK,IAAI;IAChC;IACA,IAAI,IAAI,CAACL,gBAAgB,CAACC,UAAU,KAAKI,IAAI,CAACJ,UAAU,IACjD,IAAI,CAACD,gBAAgB,CAACE,SAAS,KAAKG,IAAI,CAACH,SAAS,EAAE;MACvD,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACD,OAAOL,iBAAiB;AAC5B,CAAC,EAAG;AACJ,SAASA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}