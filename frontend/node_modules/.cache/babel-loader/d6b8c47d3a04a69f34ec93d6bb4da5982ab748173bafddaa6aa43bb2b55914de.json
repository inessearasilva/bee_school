{"ast":null,"code":"const cheerio = require('cheerio-without-node-native');\nconst urlObj = require('url');\nconst fetch = require('cross-fetch').fetch;\nrequire('es6-promise').polyfill();\nconst CONSTANTS = require('./constants');\nexports.getPreview = function (text, options) {\n  return new Promise(function (resolve, reject) {\n    if (!text) {\n      reject({\n        error: 'React-Native-Link-Preview did not receive either a url or text'\n      });\n    }\n    var detectedUrl = null;\n    text.replace(/\\n/g, ' ').split(' ').forEach(function (token) {\n      if (CONSTANTS.REGEX_VALID_URL.test(token) && !detectedUrl) {\n        detectedUrl = token;\n      }\n    });\n    if (detectedUrl) {\n      fetch(detectedUrl).then(function (response) {\n        // get final URL (after any redirects)\n        const finalUrl = response.url;\n\n        // get content type of response\n        var contentType = response.headers.get('content-type');\n        if (!contentType) {\n          return reject({\n            error: 'React-Native-Link-Preview: Could not extract content type for URL.'\n          });\n        }\n        if (contentType instanceof Array) {\n          contentType = contentType[0];\n        }\n\n        // parse response depending on content type\n        if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_IMAGE.test(contentType)) {\n          resolve(parseImageResponse(finalUrl, contentType));\n        } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_AUDIO.test(contentType)) {\n          resolve(parseAudioResponse(finalUrl, contentType));\n        } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_VIDEO.test(contentType)) {\n          resolve(parseVideoResponse(finalUrl, contentType));\n        } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_TEXT.test(contentType)) {\n          response.text().then(function (text) {\n            resolve(parseTextResponse(text, finalUrl, options || {}, contentType));\n          });\n        } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_APPLICATION.test(contentType)) {\n          resolve(parseApplicationResponse(finalUrl, contentType));\n        } else {\n          reject({\n            error: 'React-Native-Link-Preview: Unknown content type for URL.'\n          });\n        }\n      }).catch(function (error) {\n        reject({\n          error: error\n        });\n      });\n    } else {\n      reject({\n        error: 'React-Native-Link-Preview did not find a link in the text'\n      });\n    }\n  });\n};\nconst parseImageResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'image',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\nconst parseAudioResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'audio',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\nconst parseVideoResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'video',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\nconst parseApplicationResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'application',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\nconst parseTextResponse = function (body, url, options, contentType) {\n  const doc = cheerio.load(body);\n  return {\n    url: url,\n    title: getTitle(doc),\n    description: getDescription(doc),\n    mediaType: getMediaType(doc) || 'website',\n    contentType: contentType,\n    images: getImages(doc, url, options.imagesPropertyType),\n    videos: getVideos(doc),\n    favicons: getFavicons(doc, url)\n  };\n};\nconst getTitle = function (doc) {\n  var title = doc(\"meta[property='og:title']\").attr('content');\n  if (!title) {\n    title = doc('title').text();\n  }\n  return title;\n};\nconst getDescription = function (doc) {\n  var description = doc('meta[name=description]').attr('content');\n  if (description === undefined) {\n    description = doc('meta[name=Description]').attr('content');\n  }\n  if (description === undefined) {\n    description = doc(\"meta[property='og:description']\").attr('content');\n  }\n  return description;\n};\nconst getMediaType = function (doc) {\n  const node = doc('meta[name=medium]');\n  if (node.length) {\n    const content = node.attr('content');\n    return content === 'image' ? 'photo' : content;\n  } else {\n    return doc(\"meta[property='og:type']\").attr('content');\n  }\n};\nconst getImages = function (doc, rootUrl, imagesPropertyType) {\n  var images = [],\n    nodes,\n    src,\n    dic;\n  var imagePropertyType = imagesPropertyType || 'og';\n  nodes = doc('meta[property=\\'' + imagePropertyType + ':image\\']');\n  if (nodes.length) {\n    nodes.each(function (index, node) {\n      src = node.attribs.content;\n      if (src) {\n        src = urlObj.resolve(rootUrl, src);\n        images.push(src);\n      }\n    });\n  }\n  if (images.length <= 0 && !imagesPropertyType) {\n    src = doc('link[rel=image_src]').attr('href');\n    if (src) {\n      src = urlObj.resolve(rootUrl, src);\n      images = [src];\n    } else {\n      nodes = doc('img');\n      if (nodes.length) {\n        dic = {};\n        images = [];\n        nodes.each(function (index, node) {\n          src = node.attribs.src;\n          if (src && !dic[src]) {\n            dic[src] = 1;\n            // width = node.attribs.width;\n            // height = node.attribs.height;\n            images.push(urlObj.resolve(rootUrl, src));\n          }\n        });\n      }\n    }\n  }\n  return images;\n};\nconst getVideos = function (doc) {\n  const videos = [];\n  var nodeTypes;\n  var nodeSecureUrls;\n  var nodeType;\n  var nodeSecureUrl;\n  var video;\n  var videoType;\n  var videoSecureUrl;\n  var width;\n  var height;\n  var videoObj;\n  var index;\n  const nodes = doc(\"meta[property='og:video']\");\n  const length = nodes.length;\n  if (length) {\n    nodeTypes = doc(\"meta[property='og:video:type']\");\n    nodeSecureUrls = doc(\"meta[property='og:video:secure_url']\");\n    width = doc(\"meta[property='og:video:width']\").attr('content');\n    height = doc(\"meta[property='og:video:height']\").attr('content');\n    for (index = 0; index < length; index++) {\n      video = nodes[index].attribs.content;\n      nodeType = nodeTypes[index];\n      videoType = nodeType ? nodeType.attribs.content : null;\n      nodeSecureUrl = nodeSecureUrls[index];\n      videoSecureUrl = nodeSecureUrl ? nodeSecureUrl.attribs.content : null;\n      videoObj = {\n        url: video,\n        secureUrl: videoSecureUrl,\n        type: videoType,\n        width: width,\n        height: width\n      };\n      if (videoType && videoType.indexOf('video/') === 0) {\n        videos.splice(0, 0, videoObj);\n      } else {\n        videos.push(videoObj);\n      }\n    }\n  }\n  return videos;\n};\n\n// returns an array of URL's to favicon images\nconst getFavicons = function (doc, rootUrl) {\n  var images = [],\n    nodes = [],\n    src;\n  const relSelectors = ['rel=icon', 'rel=\"shortcut icon\"', 'rel=apple-touch-icon'];\n  relSelectors.forEach(function (relSelector) {\n    // look for all icon tags\n    nodes = doc('link[' + relSelector + ']');\n\n    // collect all images from icon tags\n    if (nodes.length) {\n      nodes.each(function (index, node) {\n        src = node.attribs.href;\n        if (src) {\n          src = urlObj.resolve(rootUrl, src);\n          images.push(src);\n        }\n      });\n    }\n  });\n\n  // if no icon images, use default favicon location\n  if (images.length <= 0) {\n    images.push(getDefaultFavicon(rootUrl));\n  }\n  return images;\n};\n\n// returns default favicon (//hostname/favicon.ico) for a url\nconst getDefaultFavicon = function (rootUrl) {\n  return urlObj.resolve(rootUrl, '/favicon.ico');\n};","map":{"version":3,"names":["cheerio","require","urlObj","fetch","polyfill","CONSTANTS","exports","getPreview","text","options","Promise","resolve","reject","error","detectedUrl","replace","split","forEach","token","REGEX_VALID_URL","test","then","response","finalUrl","url","contentType","headers","get","Array","REGEX_CONTENT_TYPE_IMAGE","parseImageResponse","REGEX_CONTENT_TYPE_AUDIO","parseAudioResponse","REGEX_CONTENT_TYPE_VIDEO","parseVideoResponse","REGEX_CONTENT_TYPE_TEXT","parseTextResponse","REGEX_CONTENT_TYPE_APPLICATION","parseApplicationResponse","catch","mediaType","favicons","getDefaultFavicon","body","doc","load","title","getTitle","description","getDescription","getMediaType","images","getImages","imagesPropertyType","videos","getVideos","getFavicons","attr","undefined","node","length","content","rootUrl","nodes","src","dic","imagePropertyType","each","index","attribs","push","nodeTypes","nodeSecureUrls","nodeType","nodeSecureUrl","video","videoType","videoSecureUrl","width","height","videoObj","secureUrl","type","indexOf","splice","relSelectors","relSelector","href"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/node_modules/react-native-link-preview/index.js"],"sourcesContent":["const cheerio = require('cheerio-without-node-native');\nconst urlObj = require('url');\nconst fetch = require('cross-fetch').fetch;\nrequire('es6-promise').polyfill();\n\nconst CONSTANTS = require('./constants');\n\nexports.getPreview = function (text, options) {\n  return new Promise(function (resolve, reject) {\n    if (!text) {\n      reject({\n        error: 'React-Native-Link-Preview did not receive either a url or text'\n      });\n    }\n\n    var detectedUrl = null;\n\n    text.replace(/\\n/g, ' ').split(' ').forEach(function (token) {\n      if (CONSTANTS.REGEX_VALID_URL.test(token) && !detectedUrl) {\n        detectedUrl = token;\n      }\n    });\n\n    if (detectedUrl) {\n      fetch(detectedUrl)\n        .then(function (response) {\n\n          // get final URL (after any redirects)\n          const finalUrl = response.url;\n\n          // get content type of response\n          var contentType = response.headers.get('content-type');\n\n          if (!contentType) {\n            return reject({ error: 'React-Native-Link-Preview: Could not extract content type for URL.' });\n          }\n          if (contentType instanceof Array) {\n            contentType = contentType[0];\n          }\n\n          // parse response depending on content type\n          if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_IMAGE.test(contentType)) {\n            resolve(parseImageResponse(finalUrl, contentType));\n          } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_AUDIO.test(contentType)) {\n            resolve(parseAudioResponse(finalUrl, contentType));\n          } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_VIDEO.test(contentType)) {\n            resolve(parseVideoResponse(finalUrl, contentType));\n          } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_TEXT.test(contentType)) {\n            response.text()\n              .then(function (text) {\n                resolve(parseTextResponse(text, finalUrl, options || {}, contentType));\n              });\n          } else if (contentType && CONSTANTS.REGEX_CONTENT_TYPE_APPLICATION.test(contentType)) {\n            resolve(parseApplicationResponse(finalUrl, contentType));\n          } else {\n            reject({ error: 'React-Native-Link-Preview: Unknown content type for URL.' });\n          }\n        })\n        .catch(function (error) { reject({ error: error }) });\n    } else {\n      reject({\n        error: 'React-Native-Link-Preview did not find a link in the text'\n      });\n    }\n  });\n};\n\nconst parseImageResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'image',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\n\nconst parseAudioResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'audio',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\n\nconst parseVideoResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'video',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\n\nconst parseApplicationResponse = function (url, contentType) {\n  return {\n    url: url,\n    mediaType: 'application',\n    contentType: contentType,\n    favicons: [getDefaultFavicon(url)]\n  };\n};\n\nconst parseTextResponse = function (body, url, options, contentType) {\n  const doc = cheerio.load(body);\n\n  return {\n    url: url,\n    title: getTitle(doc),\n    description: getDescription(doc),\n    mediaType: getMediaType(doc) || 'website',\n    contentType: contentType,\n    images: getImages(doc, url, options.imagesPropertyType),\n    videos: getVideos(doc),\n    favicons: getFavicons(doc, url)\n  };\n};\n\nconst getTitle = function (doc) {\n  var title = doc(\"meta[property='og:title']\").attr('content');\n\n  if (!title) {\n    title = doc('title').text();\n  }\n\n  return title;\n};\n\nconst getDescription = function (doc) {\n  var description = doc('meta[name=description]').attr('content');\n\n  if (description === undefined) {\n    description = doc('meta[name=Description]').attr('content');\n  }\n\n  if (description === undefined) {\n    description = doc(\"meta[property='og:description']\").attr('content');\n  }\n\n  return description;\n};\n\nconst getMediaType = function (doc) {\n  const node = doc('meta[name=medium]');\n\n  if (node.length) {\n    const content = node.attr('content');\n    return content === 'image' ? 'photo' : content;\n  } else {\n    return doc(\"meta[property='og:type']\").attr('content');\n  }\n};\n\nconst getImages = function (doc, rootUrl, imagesPropertyType) {\n  var images = [],\n    nodes,\n    src,\n    dic;\n\n  var imagePropertyType = imagesPropertyType || 'og'\n  nodes = doc('meta[property=\\'' + imagePropertyType + ':image\\']');\n\n  if (nodes.length) {\n    nodes.each(function (index, node) {\n      src = node.attribs.content;\n      if (src) {\n        src = urlObj.resolve(rootUrl, src);\n        images.push(src);\n      }\n    });\n  }\n\n  if (images.length <= 0 && !imagesPropertyType) {\n    src = doc('link[rel=image_src]').attr('href');\n    if (src) {\n      src = urlObj.resolve(rootUrl, src);\n      images = [src];\n    } else {\n      nodes = doc('img');\n\n      if (nodes.length) {\n        dic = {};\n        images = [];\n        nodes.each(function (index, node) {\n          src = node.attribs.src;\n          if (src && !dic[src]) {\n            dic[src] = 1;\n            // width = node.attribs.width;\n            // height = node.attribs.height;\n            images.push(urlObj.resolve(rootUrl, src));\n          }\n        });\n      }\n    }\n  }\n\n  return images;\n};\n\nconst getVideos = function (doc) {\n  const videos = [];\n  var nodeTypes;\n  var nodeSecureUrls;\n  var nodeType;\n  var nodeSecureUrl;\n  var video;\n  var videoType;\n  var videoSecureUrl;\n  var width;\n  var height;\n  var videoObj;\n  var index;\n\n  const nodes = doc(\"meta[property='og:video']\");\n  const length = nodes.length;\n\n  if (length) {\n    nodeTypes = doc(\"meta[property='og:video:type']\");\n    nodeSecureUrls = doc(\"meta[property='og:video:secure_url']\");\n    width = doc(\"meta[property='og:video:width']\").attr('content');\n    height = doc(\"meta[property='og:video:height']\").attr('content');\n\n    for (index = 0; index < length; index++) {\n      video = nodes[index].attribs.content;\n\n      nodeType = nodeTypes[index];\n      videoType = nodeType ? nodeType.attribs.content : null;\n\n      nodeSecureUrl = nodeSecureUrls[index];\n      videoSecureUrl = nodeSecureUrl ? nodeSecureUrl.attribs.content : null;\n\n      videoObj = {\n        url: video,\n        secureUrl: videoSecureUrl,\n        type: videoType,\n        width: width,\n        height: width\n      };\n      if (videoType && videoType.indexOf('video/') === 0) {\n        videos.splice(0, 0, videoObj);\n      } else {\n        videos.push(videoObj);\n      }\n    }\n  }\n\n  return videos;\n};\n\n// returns an array of URL's to favicon images\nconst getFavicons = function (doc, rootUrl) {\n  var images = [],\n    nodes = [],\n    src;\n\n  const relSelectors = ['rel=icon', 'rel=\"shortcut icon\"', 'rel=apple-touch-icon'];\n\n  relSelectors.forEach(function (relSelector) {\n    // look for all icon tags\n    nodes = doc('link[' + relSelector + ']');\n\n    // collect all images from icon tags\n    if (nodes.length) {\n      nodes.each(function (index, node) {\n        src = node.attribs.href;\n        if (src) {\n          src = urlObj.resolve(rootUrl, src);\n          images.push(src);\n        }\n      });\n    }\n  });\n\n  // if no icon images, use default favicon location\n  if (images.length <= 0) {\n    images.push(getDefaultFavicon(rootUrl));\n  }\n\n  return images;\n};\n\n// returns default favicon (//hostname/favicon.ico) for a url\nconst getDefaultFavicon = function (rootUrl) {\n  return urlObj.resolve(rootUrl, '/favicon.ico');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}