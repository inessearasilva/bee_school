{"ast":null,"code":"import { orderObjectByValue } from \"../Order/orderObjectByValue\"; // Esta função lida com o seguinte caso particular: mover itens dentro de um campo do any\n\nconst handleOrderAnyItens = (dragPath, dragOrder, hoverOrder, formOrder) => {\n  const immutableObj = orderObjectByValue(formOrder); // To guarantee the paths are by ascendent order while doing forEach\n\n  let objOrder = {\n    ...immutableObj\n  };\n  if (dragOrder > hoverOrder) {\n    // Move up section\n    let query = dragPath.split(\".\");\n    query.pop();\n    objOrder[dragPath] = hoverOrder;\n    Object.keys(immutableObj).forEach(path => {\n      if (path.indexOf(query.join(\".\") + \".\") > -1 && path !== dragPath) {\n        if (immutableObj[path] >= hoverOrder && immutableObj[path] < dragOrder) {\n          objOrder[path] = immutableObj[path] + 1;\n        }\n      }\n    });\n  } else if (dragOrder < hoverOrder) {\n    // Move down\n    let query = dragPath.split(\".\");\n    query.pop();\n    objOrder[dragPath] = hoverOrder;\n    Object.keys(immutableObj).forEach(path => {\n      if (path.indexOf(query.join(\".\") + \".\") > -1 && path !== dragPath) {\n        if (immutableObj[path] <= hoverOrder && immutableObj[path] > dragOrder) {\n          objOrder[path] = immutableObj[path] - 1;\n        }\n      }\n    });\n  }\n  return objOrder;\n};\nexport { handleOrderAnyItens };","map":{"version":3,"names":["orderObjectByValue","handleOrderAnyItens","dragPath","dragOrder","hoverOrder","formOrder","immutableObj","objOrder","query","split","pop","Object","keys","forEach","path","indexOf","join"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/assets/functions/HandleOrder/HandleOrderAnyItens.js"],"sourcesContent":["import { orderObjectByValue } from \"../Order/orderObjectByValue\"; // Esta função lida com o seguinte caso particular: mover itens dentro de um campo do any\r\n\r\nconst handleOrderAnyItens = (dragPath, dragOrder, hoverOrder, formOrder) => {\r\n  const immutableObj = orderObjectByValue(formOrder); // To guarantee the paths are by ascendent order while doing forEach\r\n\r\n  let objOrder = { ...immutableObj\r\n  };\r\n\r\n  if (dragOrder > hoverOrder) {\r\n    // Move up section\r\n    let query = dragPath.split(\".\");\r\n    query.pop();\r\n    objOrder[dragPath] = hoverOrder;\r\n    Object.keys(immutableObj).forEach(path => {\r\n      if (path.indexOf(query.join(\".\") + \".\") > -1 && path !== dragPath) {\r\n        if (immutableObj[path] >= hoverOrder && immutableObj[path] < dragOrder) {\r\n          objOrder[path] = immutableObj[path] + 1;\r\n        }\r\n      }\r\n    });\r\n  } else if (dragOrder < hoverOrder) {\r\n    // Move down\r\n    let query = dragPath.split(\".\");\r\n    query.pop();\r\n    objOrder[dragPath] = hoverOrder;\r\n    Object.keys(immutableObj).forEach(path => {\r\n      if (path.indexOf(query.join(\".\") + \".\") > -1 && path !== dragPath) {\r\n        if (immutableObj[path] <= hoverOrder && immutableObj[path] > dragOrder) {\r\n          objOrder[path] = immutableObj[path] - 1;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return objOrder;\r\n};\r\n\r\nexport { handleOrderAnyItens };"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,6BAA6B,CAAC,CAAC;;AAElE,MAAMC,mBAAmB,GAAG,CAACC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,KAAK;EAC1E,MAAMC,YAAY,GAAGN,kBAAkB,CAACK,SAAS,CAAC,CAAC,CAAC;;EAEpD,IAAIE,QAAQ,GAAG;IAAE,GAAGD;EACpB,CAAC;EAED,IAAIH,SAAS,GAAGC,UAAU,EAAE;IAC1B;IACA,IAAII,KAAK,GAAGN,QAAQ,CAACO,KAAK,CAAC,GAAG,CAAC;IAC/BD,KAAK,CAACE,GAAG,EAAE;IACXH,QAAQ,CAACL,QAAQ,CAAC,GAAGE,UAAU;IAC/BO,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,OAAO,CAACC,IAAI,IAAI;MACxC,IAAIA,IAAI,CAACC,OAAO,CAACP,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIF,IAAI,KAAKZ,QAAQ,EAAE;QACjE,IAAII,YAAY,CAACQ,IAAI,CAAC,IAAIV,UAAU,IAAIE,YAAY,CAACQ,IAAI,CAAC,GAAGX,SAAS,EAAE;UACtEI,QAAQ,CAACO,IAAI,CAAC,GAAGR,YAAY,CAACQ,IAAI,CAAC,GAAG,CAAC;QACzC;MACF;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIX,SAAS,GAAGC,UAAU,EAAE;IACjC;IACA,IAAII,KAAK,GAAGN,QAAQ,CAACO,KAAK,CAAC,GAAG,CAAC;IAC/BD,KAAK,CAACE,GAAG,EAAE;IACXH,QAAQ,CAACL,QAAQ,CAAC,GAAGE,UAAU;IAC/BO,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,OAAO,CAACC,IAAI,IAAI;MACxC,IAAIA,IAAI,CAACC,OAAO,CAACP,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIF,IAAI,KAAKZ,QAAQ,EAAE;QACjE,IAAII,YAAY,CAACQ,IAAI,CAAC,IAAIV,UAAU,IAAIE,YAAY,CAACQ,IAAI,CAAC,GAAGX,SAAS,EAAE;UACtEI,QAAQ,CAACO,IAAI,CAAC,GAAGR,YAAY,CAACQ,IAAI,CAAC,GAAG,CAAC;QACzC;MACF;IACF,CAAC,CAAC;EACJ;EAEA,OAAOP,QAAQ;AACjB,CAAC;AAED,SAASN,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}