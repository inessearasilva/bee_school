{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport Boolean from \"../../../../../components/Datatypes/Boolean/Boolean\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\nvar BuildBooleanEditMode = function BuildBooleanEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, templateRules, idJDT) {\n  var context = useContext(CombinedContext);\n  var isRM = pathArray[0] === \"rm\";\n  var isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks); // VER PORQUE É QUE HÁ DOIS TIPOS DE VISIBILIDADE A CUMPRIR\n\n  var isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\n  var initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\n  var initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\n  var _useState = useState(initialRuleVisibility),\n    _useState2 = _slicedToArray(_useState, 2),\n    ruleVisibility = _useState2[0],\n    setRuleVisibility = _useState2[1];\n  var _useState3 = useState(initialRuleMandatory),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ruleMandatory = _useState4[0],\n    setRuleMandatory = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFieldEditable = _useState6[0],\n    setFieldEditable = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    conditionValues = _useState8[0],\n    setConditionValues = _useState8[1];\n  var label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  var array = [];\n  array.push(\"value\");\n  var pathLabel = pathArray.concat(array).join(\"-\");\n  var path = pathArray.join(\".\");\n  var dlmConditions = getDLMConditions(item, templateRules);\n  var parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  var parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false; // primeiro ciclo que corre sempre que os valores dos campos do formulário são alterados\n  // serve para verificar se houve alterações nos valores das condições associadas a um item\n\n  useEffect(function () {\n    var newConditionValues = Object.keys(values).filter(function (key) {\n      return dlmConditions.includes(key);\n    }).reduce(function (obj, key) {\n      if (values[key]._immutable) {\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\n      } else {\n        obj[key] = values[key];\n      }\n      return obj;\n    }, {});\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\n      setConditionValues(newConditionValues);\n    }\n  }, [values, dlmConditions, conditionValues]); // segundo ciclo -> apenas corre quando os valores das condições são alterados\n  // serve para verificar se há alguma regra a executar, se o checkDLMRules for vazio não faz nada\n\n  useEffect(function () {\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\n    setFieldEditable(isEditable);\n    setFieldValue(pathLabel, initialValues[pathLabel]);\n    setRuleVisibility(initialRuleVisibility);\n    setRuleMandatory(initialRuleMandatory);\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(function (rules) {\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\n        var _iterator = _createForOfIteratorHelper(rules[0]),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var rule = _step.value;\n            if (rule.itemPath === path) {\n              var value = rule.value;\n              var action = rule.action;\n              switch (action) {\n                case \"isEqualTo\":\n                  setFieldValue(pathLabel, value);\n                  break;\n                case \"isNotEditable\":\n                  setFieldEditable(false);\n                  break;\n                case \"isMandatory\":\n                  setRuleMandatory(true);\n                  break;\n                case \"isVisible\":\n                  setRuleVisibility(true);\n                  break;\n                case \"isNotVisible\":\n                  setRuleVisibility(false);\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        context.dlm.updateIsDlmFinished(true);\n      } else {\n        context.dlm.updateIsDlmFinished(true);\n      }\n    });\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\n  if (isVisible || item.value !== null) {\n    buildInitialValueEditMode(item, pathLabel, initialValues);\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\n    }\n    if (isVisible && ruleVisibility) {\n      if (isEditable) {\n        return /*#__PURE__*/React.createElement(Boolean, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          path: pathArray.join(\".\"),\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: true,\n          isFieldEditable: isFieldEditable,\n          value: values[pathLabel],\n          onBooleanChange: setFieldValue,\n          label: label,\n          pathLabel: pathLabel,\n          error: touched[pathLabel] && errors[pathLabel],\n          onTouch: setFieldTouched,\n          optional: item.occurrences.lowerOccurrences === 0,\n          optionalMandatory: !ruleMandatory,\n          sectionOccurrence: itemSection[itemSection.length - 1],\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Boolean, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          path: pathArray.join(\".\"),\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          value: values[pathLabel] === \"\" ? \"\" : values[pathLabel],\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      }\n    }\n  }\n};\nexport default BuildBooleanEditMode;","map":{"version":3,"names":["React","useContext","useEffect","useState","handleRules","handleIsEditable","handleIsVisible","Boolean","buildInitialValueEditMode","buildValidationEditMode","firstAnyItem","checkDLMRules","getDLMConditions","CombinedContext","getParent","BuildBooleanEditMode","item","itemIndex","pathArray","setFieldValue","values","errors","touched","setFieldTouched","isAny","cardinalityObject","sectionValidation","initialValues","validationSchema","itemSection","multipleSections","professionalTasks","order","templateRules","idJDT","context","isRM","isEditable","TaskEditable","isVisible","TaskVisible","initialRuleVisibility","ruleVisibility","initialRuleMandatory","ruleMandatory","setRuleVisibility","setRuleMandatory","isFieldEditable","setFieldEditable","conditionValues","setConditionValues","label","itemName","node","text","array","push","pathLabel","concat","join","path","dlmConditions","parentSection","parentPath","split","composition","template","parentSectionVisibility","indexOf","newConditionValues","Object","keys","filter","key","includes","reduce","obj","_immutable","getCurrentContent","getPlainText","JSON","stringify","token","dlm","updateIsDlmFinished","dlmRules","then","rules","Array","isArray","length","rule","itemPath","value","action","createElement","showLabel","editMode","onBooleanChange","error","onTouch","optional","occurrences","lowerOccurrences","optionalMandatory","sectionOccurrence","description"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemEditMode/BuildBoolean/BuildBoolean.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\r\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\r\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport Boolean from \"../../../../../components/Datatypes/Boolean/Boolean\";\r\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\r\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\r\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\r\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\r\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\r\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\r\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\r\n\r\nconst BuildBooleanEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, templateRules, idJDT) => {\r\n  const context = useContext(CombinedContext);\r\n  const isRM = pathArray[0] === \"rm\";\r\n  const isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks); // VER PORQUE É QUE HÁ DOIS TIPOS DE VISIBILIDADE A CUMPRIR\r\n\r\n  const isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\r\n  const initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\r\n  const initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\r\n  const [ruleVisibility, setRuleVisibility] = useState(initialRuleVisibility);\r\n  const [ruleMandatory, setRuleMandatory] = useState(initialRuleMandatory);\r\n  const [isFieldEditable, setFieldEditable] = useState(true);\r\n  const [conditionValues, setConditionValues] = useState({});\r\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\r\n  let array = [];\r\n  array.push(\"value\");\r\n  const pathLabel = pathArray.concat(array).join(\"-\");\r\n  const path = pathArray.join(\".\");\r\n  const dlmConditions = getDLMConditions(item, templateRules);\r\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\r\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false; // primeiro ciclo que corre sempre que os valores dos campos do formulário são alterados\r\n  // serve para verificar se houve alterações nos valores das condições associadas a um item\r\n\r\n  useEffect(() => {\r\n    const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\r\n      if (values[key]._immutable) {\r\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\r\n      } else {\r\n        obj[key] = values[key];\r\n      }\r\n\r\n      return obj;\r\n    }, {});\r\n\r\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\r\n      setConditionValues(newConditionValues);\r\n    }\r\n  }, [values, dlmConditions, conditionValues]); // segundo ciclo -> apenas corre quando os valores das condições são alterados\r\n  // serve para verificar se há alguma regra a executar, se o checkDLMRules for vazio não faz nada\r\n\r\n  useEffect(() => {\r\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\r\n    setFieldEditable(isEditable);\r\n    setFieldValue(pathLabel, initialValues[pathLabel]);\r\n    setRuleVisibility(initialRuleVisibility);\r\n    setRuleMandatory(initialRuleMandatory);\r\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\r\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\r\n        for (const rule of rules[0]) {\r\n          if (rule.itemPath === path) {\r\n            const value = rule.value;\r\n            const action = rule.action;\r\n\r\n            switch (action) {\r\n              case \"isEqualTo\":\r\n                setFieldValue(pathLabel, value);\r\n                break;\r\n\r\n              case \"isNotEditable\":\r\n                setFieldEditable(false);\r\n                break;\r\n\r\n              case \"isMandatory\":\r\n                setRuleMandatory(true);\r\n                break;\r\n\r\n              case \"isVisible\":\r\n                setRuleVisibility(true);\r\n                break;\r\n\r\n              case \"isNotVisible\":\r\n                setRuleVisibility(false);\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n\r\n        context.dlm.updateIsDlmFinished(true);\r\n      } else {\r\n        context.dlm.updateIsDlmFinished(true);\r\n      }\r\n    });\r\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\r\n\r\n  if (isVisible || item.value !== null) {\r\n    buildInitialValueEditMode(item, pathLabel, initialValues);\r\n\r\n    if (isEditable && parentSectionVisibility) {\r\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\r\n    }\r\n\r\n    if (isVisible && ruleVisibility) {\r\n      if (isEditable) {\r\n        return /*#__PURE__*/React.createElement(Boolean, {\r\n          order: order ? order[pathArray.join(\".\")] : null,\r\n          key: itemIndex,\r\n          path: pathArray.join(\".\"),\r\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n          editMode: true,\r\n          isFieldEditable: isFieldEditable,\r\n          value: values[pathLabel],\r\n          onBooleanChange: setFieldValue,\r\n          label: label,\r\n          pathLabel: pathLabel,\r\n          error: touched[pathLabel] && errors[pathLabel],\r\n          onTouch: setFieldTouched,\r\n          optional: item.occurrences.lowerOccurrences === 0,\r\n          optionalMandatory: !ruleMandatory,\r\n          sectionOccurrence: itemSection[itemSection.length - 1],\r\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\r\n        });\r\n      } else {\r\n        return /*#__PURE__*/React.createElement(Boolean, {\r\n          order: order ? order[pathArray.join(\".\")] : null,\r\n          key: itemIndex,\r\n          path: pathArray.join(\".\"),\r\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n          editMode: false,\r\n          value: values[pathLabel] === \"\" ? \"\" : values[pathLabel],\r\n          label: label,\r\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default BuildBooleanEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}