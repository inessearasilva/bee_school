{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport * as Yup from \"yup\";\nimport { handleIfMandatoryValidation } from \"../../../../assets/functions/HandleRules/handleIfMandatoryValidation\";\nimport { handleConditionValidation } from \"../../../../assets/functions/HandleRules/handleConditionValidation\";\nimport { handleRules } from \"../../../../assets/functions/HandleRules/handleRules\";\nimport { handleRequiredValidation } from \"../../../../assets/functions/HandleSectionValidation/handleRequiredValidation\";\nimport { handleRequiredSection } from \"../../../../assets/functions/HandleSectionValidation/handleRequiredSection\"; // ATENÇÃO: CADA NOVA VALIDAÇÃO DEVE VER SE O CAMPO É VISÍVEL!\n\nvar buildTimeRangeValidation = function buildTimeRangeValidation(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections) {\n  var checkMandatory = handleIfMandatoryValidation(item);\n  var pathLabelArray = pathLabel.split(\"-\");\n  var pathArray = _toConsumableArray(pathLabelArray);\n  pathArray.pop();\n  if (item.occurrences.lowerOccurrences === 1 && item.occurrences.upperOccurrences === 1) {\n    if (pathLabelArray[pathLabelArray.length - 1] === \"end\") {\n      pathArray.push(\"start\");\n      var pathLabelStart = pathArray.join(\"-\");\n      validationSchema[pathLabel] = Yup.string().test(\"required\", \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var passedRequired = handleRequiredValidation(value, this.parent, itemSection);\n        if (passedRequired) {\n          return true;\n        } else {\n          return false;\n        }\n      }).test(pathLabel + \"superiorigual\", \"O tempo final deve ser superior ou igual ao tempo inicial\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var startTime;\n        var endTime;\n        if (this.parent[pathLabelStart] !== undefined) {\n          startTime = new Date(2000, 1, 1, this.parent[pathLabelStart].split(\":\")[0], this.parent[pathLabelStart].split(\":\")[1]);\n        } else {\n          startTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined) {\n          endTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\n        } else {\n          endTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined && this.parent[pathLabelStart] !== undefined) {\n          if (endTime < startTime) {\n            return false;\n          }\n          return true;\n        }\n        return true;\n      }).test(\"section-validation\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"at-least-one\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      });\n    } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\") {\n      pathArray.push(\"end\");\n      var pathLabelEnd = pathArray.join(\"-\");\n      validationSchema[pathLabel] = Yup.string().test(\"required\", \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var passedRequired = handleRequiredValidation(value, this.parent, itemSection);\n        if (passedRequired) {\n          return true;\n        } else {\n          return false;\n        }\n      }).test(pathLabel + \"inferiorigual\", \"O tempo inicial deve ser inferior ou igual ao tempo final\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var startTime;\n        var endTime;\n        if (this.parent[pathLabelEnd] !== undefined) {\n          endTime = new Date(2000, 1, 1, this.parent[pathLabelEnd].split(\":\")[0], this.parent[pathLabelEnd].split(\":\")[1]);\n        } else {\n          endTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined) {\n          startTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\n        } else {\n          startTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined && this.parent[pathLabelEnd] !== undefined) {\n          if (endTime < startTime) {\n            return false;\n          }\n          return true;\n        }\n        return true;\n      }).test(\"section-validation\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"at-least-one\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      });\n    }\n  } else if (item.occurrences.lowerOccurrences === 0 && item.occurrences.upperOccurrences === 1) {\n    if (pathLabelArray[pathLabelArray.length - 1] === \"end\") {\n      pathArray.push(\"start\");\n      var _pathLabelStart = pathArray.join(\"-\");\n      validationSchema[pathLabel] = Yup.string().test(pathLabel, \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var field = this.parent[_pathLabelStart];\n        if (field === undefined && value === undefined || field !== undefined && value !== undefined) {\n          return true;\n        } else if (field !== undefined && value === undefined) {\n          return false;\n        } else if (field === undefined && value !== undefined) {\n          return true;\n        }\n      }).test(pathLabel + \"superiorigual\", \"O tempo final deve ser superior ou igual ao tempo inicial\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var startTime;\n        var endTime;\n        if (this.parent[_pathLabelStart] !== undefined) {\n          startTime = new Date(2000, 1, 1, this.parent[_pathLabelStart].split(\":\")[0], this.parent[_pathLabelStart].split(\":\")[1]);\n        } else {\n          startTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined) {\n          endTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\n        } else {\n          endTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined && this.parent[_pathLabelStart] !== undefined) {\n          if (endTime < startTime) {\n            return false;\n          }\n          return true;\n        }\n        return true;\n      }).test(\"section-validation\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"at-least-one\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"rule-mandatory\", \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        if (!checkMandatory) {\n          return true;\n        } else {\n          var i;\n          for (i = 0; i < item.ruleMandatory.length; i++) {\n            var rule = item.ruleMandatory[i];\n            var mandatory = void 0;\n            if (rule[\"$or\"]) {\n              mandatory = false;\n              var j = void 0;\n              var conditionsArray = rule[\"$or\"];\n              for (j = 0; j < conditionsArray.length; j++) {\n                var condition = conditionsArray[j];\n                var path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\n                var conditionValidation = handleConditionValidation(condition, this.parent[path]);\n                if (conditionValidation) {\n                  mandatory = true;\n                  break;\n                }\n              }\n            } else if (rule[\"$and\"]) {\n              mandatory = true;\n              var _j = void 0;\n              var _conditionsArray = rule[\"$and\"];\n              for (_j = 0; _j < _conditionsArray.length; _j++) {\n                var _condition = _conditionsArray[_j];\n                var _path = _condition[\"$ItemPath\"].split(\".\").join(\"-\");\n                var _conditionValidation = handleConditionValidation(_condition, this.parent[_path]);\n                if (!_conditionValidation) {\n                  mandatory = false;\n                  break;\n                }\n              }\n            }\n            if (!mandatory) {\n              return true;\n            } else {\n              if (value === \"\" || value === undefined) {\n                return false;\n              } else if (Array.isArray(value)) {\n                if (value.length === 0) {\n                  return false;\n                } else if (value[0].identifierId !== undefined && value.filter(function (obj) {\n                  return obj.value !== \"\";\n                }).length === 0) {\n                  return false;\n                } else if (value[0].textId !== undefined && value.filter(function (obj) {\n                  return obj.value.getCurrentContent().hasText();\n                }).length === 0) {\n                  return false;\n                } else {\n                  return true;\n                }\n              } else if (value._immutable !== undefined) {\n                if (!value.getCurrentContent().hasText()) {\n                  return false;\n                } else {\n                  return true;\n                }\n              } else {\n                return true;\n              }\n            }\n          }\n        }\n      });\n    } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\") {\n      pathArray.push(\"end\");\n      var _pathLabelEnd = pathArray.join(\"-\");\n      validationSchema[pathLabel] = Yup.string().test(pathLabel, \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var field = this.parent[_pathLabelEnd];\n        if (field === undefined && value === undefined || field !== undefined && value !== undefined) {\n          return true;\n        } else if (field !== undefined && value === undefined) {\n          return false;\n        } else if (field === undefined && value !== undefined) {\n          return true;\n        }\n      }).test(pathLabel + \"inferiorigual\", \"O tempo inicial deve ser inferior ou igual ao tempo final\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var startTime;\n        var endTime;\n        if (this.parent[_pathLabelEnd] !== undefined) {\n          endTime = new Date(2000, 1, 1, this.parent[_pathLabelEnd].split(\":\")[0], this.parent[_pathLabelEnd].split(\":\")[1]);\n        } else {\n          endTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined) {\n          startTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\n        } else {\n          startTime = new Date(2000, 1, 1);\n        }\n        if (value !== undefined && this.parent[_pathLabelEnd] !== undefined) {\n          if (endTime < startTime) {\n            return false;\n          }\n          return true;\n        }\n        return true;\n      }).test(\"section-validation\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"at-least-one\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        var res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\n        if (res === true) {\n          return true;\n        } else {\n          var sectionsError = res;\n          if (sectionsError.length > 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          } else if (sectionsError.length === 1) {\n            return this.createError({\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\n            });\n          }\n        }\n      }).test(\"rule-mandatory\", \"Campo obrigatório\", function (value) {\n        var isVisible = handleRules(item, this.parent, \"visibility\");\n        if (!isVisible) {\n          return true;\n        }\n        if (!checkMandatory) {\n          return true;\n        } else {\n          var i;\n          for (i = 0; i < item.ruleMandatory.length; i++) {\n            var rule = item.ruleMandatory[i];\n            var mandatory = void 0;\n            if (rule[\"$or\"]) {\n              mandatory = false;\n              var j = void 0;\n              var conditionsArray = rule[\"$or\"];\n              for (j = 0; j < conditionsArray.length; j++) {\n                var condition = conditionsArray[j];\n                var path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\n                var conditionValidation = handleConditionValidation(condition, this.parent[path]);\n                if (conditionValidation) {\n                  mandatory = true;\n                  break;\n                }\n              }\n            } else if (rule[\"$and\"]) {\n              mandatory = true;\n              var _j2 = void 0;\n              var _conditionsArray2 = rule[\"$and\"];\n              for (_j2 = 0; _j2 < _conditionsArray2.length; _j2++) {\n                var _condition2 = _conditionsArray2[_j2];\n                var _path2 = _condition2[\"$ItemPath\"].split(\".\").join(\"-\");\n                var _conditionValidation2 = handleConditionValidation(_condition2, this.parent[_path2]);\n                if (!_conditionValidation2) {\n                  mandatory = false;\n                  break;\n                }\n              }\n            }\n            if (!mandatory) {\n              return true;\n            } else {\n              if (value === \"\" || value === undefined) {\n                return false;\n              } else if (Array.isArray(value)) {\n                if (value.length === 0) {\n                  return false;\n                } else if (value[0].identifierId !== undefined && value.filter(function (obj) {\n                  return obj.value !== \"\";\n                }).length === 0) {\n                  return false;\n                } else if (value[0].textId !== undefined && value.filter(function (obj) {\n                  return obj.value.getCurrentContent().hasText();\n                }).length === 0) {\n                  return false;\n                } else {\n                  return true;\n                }\n              } else if (value._immutable !== undefined) {\n                if (!value.getCurrentContent().hasText()) {\n                  return false;\n                } else {\n                  return true;\n                }\n              } else {\n                return true;\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n};\nexport { buildTimeRangeValidation };","map":{"version":3,"names":["Yup","handleIfMandatoryValidation","handleConditionValidation","handleRules","handleRequiredValidation","handleRequiredSection","buildTimeRangeValidation","item","pathLabel","cardinalityObject","validationSchema","itemSection","sectionValidation","multipleSections","checkMandatory","pathLabelArray","split","pathArray","pop","occurrences","lowerOccurrences","upperOccurrences","length","push","pathLabelStart","join","string","test","value","isVisible","parent","passedRequired","startTime","endTime","undefined","Date","res","sectionsError","createError","message","toString","toLocaleLowerCase","pathLabelEnd","field","i","ruleMandatory","rule","mandatory","j","conditionsArray","condition","path","conditionValidation","Array","isArray","identifierId","filter","obj","textId","getCurrentContent","hasText","_immutable"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/FormValidation/BuildTimeRangeValidation/BuildTimeRangeValidation.js"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport { handleIfMandatoryValidation } from \"../../../../assets/functions/HandleRules/handleIfMandatoryValidation\";\r\nimport { handleConditionValidation } from \"../../../../assets/functions/HandleRules/handleConditionValidation\";\r\nimport { handleRules } from \"../../../../assets/functions/HandleRules/handleRules\";\r\nimport { handleRequiredValidation } from \"../../../../assets/functions/HandleSectionValidation/handleRequiredValidation\";\r\nimport { handleRequiredSection } from \"../../../../assets/functions/HandleSectionValidation/handleRequiredSection\"; // ATENÇÃO: CADA NOVA VALIDAÇÃO DEVE VER SE O CAMPO É VISÍVEL!\r\n\r\nconst buildTimeRangeValidation = (item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections) => {\r\n  const checkMandatory = handleIfMandatoryValidation(item);\r\n  let pathLabelArray = pathLabel.split(\"-\");\r\n  let pathArray = [...pathLabelArray];\r\n  pathArray.pop();\r\n\r\n  if (item.occurrences.lowerOccurrences === 1 && item.occurrences.upperOccurrences === 1) {\r\n    if (pathLabelArray[pathLabelArray.length - 1] === \"end\") {\r\n      pathArray.push(\"start\");\r\n      let pathLabelStart = pathArray.join(\"-\");\r\n      validationSchema[pathLabel] = Yup.string().test(\"required\", \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const passedRequired = handleRequiredValidation(value, this.parent, itemSection);\r\n\r\n        if (passedRequired) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }).test(pathLabel + \"superiorigual\", \"O tempo final deve ser superior ou igual ao tempo inicial\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let startTime;\r\n        let endTime;\r\n\r\n        if (this.parent[pathLabelStart] !== undefined) {\r\n          startTime = new Date(2000, 1, 1, this.parent[pathLabelStart].split(\":\")[0], this.parent[pathLabelStart].split(\":\")[1]);\r\n        } else {\r\n          startTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined) {\r\n          endTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\r\n        } else {\r\n          endTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined && this.parent[pathLabelStart] !== undefined) {\r\n          if (endTime < startTime) {\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        return true;\r\n      }).test(\"section-validation\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"at-least-one\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\") {\r\n      pathArray.push(\"end\");\r\n      let pathLabelEnd = pathArray.join(\"-\");\r\n      validationSchema[pathLabel] = Yup.string().test(\"required\", \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const passedRequired = handleRequiredValidation(value, this.parent, itemSection);\r\n\r\n        if (passedRequired) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }).test(pathLabel + \"inferiorigual\", \"O tempo inicial deve ser inferior ou igual ao tempo final\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let startTime;\r\n        let endTime;\r\n\r\n        if (this.parent[pathLabelEnd] !== undefined) {\r\n          endTime = new Date(2000, 1, 1, this.parent[pathLabelEnd].split(\":\")[0], this.parent[pathLabelEnd].split(\":\")[1]);\r\n        } else {\r\n          endTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined) {\r\n          startTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\r\n        } else {\r\n          startTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined && this.parent[pathLabelEnd] !== undefined) {\r\n          if (endTime < startTime) {\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        return true;\r\n      }).test(\"section-validation\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"at-least-one\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  } else if (item.occurrences.lowerOccurrences === 0 && item.occurrences.upperOccurrences === 1) {\r\n    if (pathLabelArray[pathLabelArray.length - 1] === \"end\") {\r\n      pathArray.push(\"start\");\r\n      let pathLabelStart = pathArray.join(\"-\");\r\n      validationSchema[pathLabel] = Yup.string().test(pathLabel, \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let field = this.parent[pathLabelStart];\r\n\r\n        if (field === undefined && value === undefined || field !== undefined && value !== undefined) {\r\n          return true;\r\n        } else if (field !== undefined && value === undefined) {\r\n          return false;\r\n        } else if (field === undefined && value !== undefined) {\r\n          return true;\r\n        }\r\n      }).test(pathLabel + \"superiorigual\", \"O tempo final deve ser superior ou igual ao tempo inicial\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let startTime;\r\n        let endTime;\r\n\r\n        if (this.parent[pathLabelStart] !== undefined) {\r\n          startTime = new Date(2000, 1, 1, this.parent[pathLabelStart].split(\":\")[0], this.parent[pathLabelStart].split(\":\")[1]);\r\n        } else {\r\n          startTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined) {\r\n          endTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\r\n        } else {\r\n          endTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined && this.parent[pathLabelStart] !== undefined) {\r\n          if (endTime < startTime) {\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        return true;\r\n      }).test(\"section-validation\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"at-least-one\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"rule-mandatory\", \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        if (!checkMandatory) {\r\n          return true;\r\n        } else {\r\n          let i;\r\n\r\n          for (i = 0; i < item.ruleMandatory.length; i++) {\r\n            const rule = item.ruleMandatory[i];\r\n            let mandatory;\r\n\r\n            if (rule[\"$or\"]) {\r\n              mandatory = false;\r\n              let j;\r\n              const conditionsArray = rule[\"$or\"];\r\n\r\n              for (j = 0; j < conditionsArray.length; j++) {\r\n                const condition = conditionsArray[j];\r\n                const path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\r\n                const conditionValidation = handleConditionValidation(condition, this.parent[path]);\r\n\r\n                if (conditionValidation) {\r\n                  mandatory = true;\r\n                  break;\r\n                }\r\n              }\r\n            } else if (rule[\"$and\"]) {\r\n              mandatory = true;\r\n              let j;\r\n              const conditionsArray = rule[\"$and\"];\r\n\r\n              for (j = 0; j < conditionsArray.length; j++) {\r\n                const condition = conditionsArray[j];\r\n                const path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\r\n                const conditionValidation = handleConditionValidation(condition, this.parent[path]);\r\n\r\n                if (!conditionValidation) {\r\n                  mandatory = false;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (!mandatory) {\r\n              return true;\r\n            } else {\r\n              if (value === \"\" || value === undefined) {\r\n                return false;\r\n              } else if (Array.isArray(value)) {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else if (value[0].identifierId !== undefined && value.filter(obj => obj.value !== \"\").length === 0) {\r\n                  return false;\r\n                } else if (value[0].textId !== undefined && value.filter(obj => obj.value.getCurrentContent().hasText()).length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              } else if (value._immutable !== undefined) {\r\n                if (!value.getCurrentContent().hasText()) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              } else {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\") {\r\n      pathArray.push(\"end\");\r\n      let pathLabelEnd = pathArray.join(\"-\");\r\n      validationSchema[pathLabel] = Yup.string().test(pathLabel, \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let field = this.parent[pathLabelEnd];\r\n\r\n        if (field === undefined && value === undefined || field !== undefined && value !== undefined) {\r\n          return true;\r\n        } else if (field !== undefined && value === undefined) {\r\n          return false;\r\n        } else if (field === undefined && value !== undefined) {\r\n          return true;\r\n        }\r\n      }).test(pathLabel + \"inferiorigual\", \"O tempo inicial deve ser inferior ou igual ao tempo final\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        let startTime;\r\n        let endTime;\r\n\r\n        if (this.parent[pathLabelEnd] !== undefined) {\r\n          endTime = new Date(2000, 1, 1, this.parent[pathLabelEnd].split(\":\")[0], this.parent[pathLabelEnd].split(\":\")[1]);\r\n        } else {\r\n          endTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined) {\r\n          startTime = new Date(2000, 1, 1, value.split(\":\")[0], value.split(\":\")[1]);\r\n        } else {\r\n          startTime = new Date(2000, 1, 1);\r\n        }\r\n\r\n        if (value !== undefined && this.parent[pathLabelEnd] !== undefined) {\r\n          if (endTime < startTime) {\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        return true;\r\n      }).test(\"section-validation\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(sectionValidation, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"at-least-one\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        const res = handleRequiredSection(cardinalityObject, pathLabel, this.parent, multipleSections);\r\n\r\n        if (res === true) {\r\n          return true;\r\n        } else {\r\n          const sectionsError = res;\r\n\r\n          if (sectionsError.length > 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos nas secções: \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          } else if (sectionsError.length === 1) {\r\n            return this.createError({\r\n              message: \"Precisa de preencher mais campos na secção \" + sectionsError.toString().toLocaleLowerCase()\r\n            });\r\n          }\r\n        }\r\n      }).test(\"rule-mandatory\", \"Campo obrigatório\", function (value) {\r\n        const isVisible = handleRules(item, this.parent, \"visibility\");\r\n\r\n        if (!isVisible) {\r\n          return true;\r\n        }\r\n\r\n        if (!checkMandatory) {\r\n          return true;\r\n        } else {\r\n          let i;\r\n\r\n          for (i = 0; i < item.ruleMandatory.length; i++) {\r\n            const rule = item.ruleMandatory[i];\r\n            let mandatory;\r\n\r\n            if (rule[\"$or\"]) {\r\n              mandatory = false;\r\n              let j;\r\n              const conditionsArray = rule[\"$or\"];\r\n\r\n              for (j = 0; j < conditionsArray.length; j++) {\r\n                const condition = conditionsArray[j];\r\n                const path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\r\n                const conditionValidation = handleConditionValidation(condition, this.parent[path]);\r\n\r\n                if (conditionValidation) {\r\n                  mandatory = true;\r\n                  break;\r\n                }\r\n              }\r\n            } else if (rule[\"$and\"]) {\r\n              mandatory = true;\r\n              let j;\r\n              const conditionsArray = rule[\"$and\"];\r\n\r\n              for (j = 0; j < conditionsArray.length; j++) {\r\n                const condition = conditionsArray[j];\r\n                const path = condition[\"$ItemPath\"].split(\".\").join(\"-\");\r\n                const conditionValidation = handleConditionValidation(condition, this.parent[path]);\r\n\r\n                if (!conditionValidation) {\r\n                  mandatory = false;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (!mandatory) {\r\n              return true;\r\n            } else {\r\n              if (value === \"\" || value === undefined) {\r\n                return false;\r\n              } else if (Array.isArray(value)) {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else if (value[0].identifierId !== undefined && value.filter(obj => obj.value !== \"\").length === 0) {\r\n                  return false;\r\n                } else if (value[0].textId !== undefined && value.filter(obj => obj.value.getCurrentContent().hasText()).length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              } else if (value._immutable !== undefined) {\r\n                if (!value.getCurrentContent().hasText()) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              } else {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport { buildTimeRangeValidation };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}