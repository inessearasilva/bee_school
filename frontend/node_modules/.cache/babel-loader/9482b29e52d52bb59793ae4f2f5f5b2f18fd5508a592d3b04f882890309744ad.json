{"ast":null,"code":"import React, { useContext, useEffect, useState } from \"react\";\nimport SidePanel from \"../../SidePanel\";\nimport CombinedContext from \"../../../../../../contexts/CombinedContext\";\nimport ProviderCombinedContext from \"../../../../../../contexts/ProviderCombinedContext\";\nimport Tab from \"../../../../UI/Tab/Tab\";\nimport axios from \"axios\";\nimport CompositionPlanningPanel from \"../CompositionPlanningPanel\";\nimport { getFormFields } from \"../../../../../../assets/functions/GetFormFields/getFormFields\";\nimport { maxValueArray } from \"../../../../../../assets/functions/Maximum/maxValueArray\";\nimport ConfirmButton from \"../../../../UI/Button/ConfirmButton\";\nimport { getEnvUrl } from \"../../../../../../environment\";\nconst FunctionSettingsPanel = props => {\n  const context = useContext(CombinedContext); // INTERNAL FUNCTIONS\n\n  const [iFunctionSelected, setIFunction] = useState(null);\n  const [showDrop, setShowDrop] = useState({\n    showDropList: false,\n    // Show primeiro dropdown dos conceitos\n    showDropRefsets: false,\n    // Show dropdown dos refsets\n    showDropColRes: false,\n    // Show dropdowm coluna com a resposta\n    showDropField: false,\n    // Show dropdown coluna com o campo a ser preenchido\n    showDropDependencyField: [{\n      id: 0,\n      boolean: false\n    }],\n    // show dropdown campos dependencia\n    showDropDependencyColumn: [{\n      id: 0,\n      boolean: false\n    }],\n    // show dropdown colunas dependencia\n    showDropCodeColumn: false,\n    showDropTextColumn: false\n  });\n  const [field, setField] = useState(null); // Campo a ser preenchido\n\n  const [refset, setRefset] = useState(null); // refset selecionado\n\n  const [columnRes, setColumnRes] = useState(null); // coluna com a resposta\n\n  const [dependencies, setDependencies] = useState([{\n    id: 0,\n    columnRef: null,\n    field: null\n  }]); // dependencias\n\n  const [codeColumn, setCodeColumn] = useState(null);\n  const [textColumn, setTextColumn] = useState(null);\n  const handleOpenDropList = key => {\n    setShowDrop(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n  };\n  const handleIFunctionSelected = obj => {\n    setIFunction(iFunctionSelected !== null && iFunctionSelected.id === obj.id ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropList: false\n    }));\n    setField(null);\n    setRefset(null);\n  };\n  const handleClearIFunction = () => {\n    setIFunction(null);\n    setField(null);\n    setRefset(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropList: false,\n      showDropField: false,\n      showDropRefsets: false\n    }));\n  };\n  useEffect(() => {\n    (async () => {\n      if (iFunctionSelected !== null && iFunctionSelected.IFUNCAO === \"Preenchimento automático de campos\") {\n        if (context.composition.compositionPlanningRefsets.length === 0) {\n          axios({\n            method: \"get\",\n            url: `${getEnvUrl('aidarefsets', '4010')}/localRefsets`,\n            // url: \"http://172.21.220.49:4010/localRefsets\",\n            headers: {\n              Authorization: \"Bearer \" + context.token\n            }\n          }).then(response => {\n            if (response.data.success === true && Array.isArray(response.data.refsets)) {\n              context.composition.updateCompositionPlanningRefsets(response.data.refsets);\n            }\n          });\n        }\n        if (context.composition.formFields.length === 0) {\n          const values = await getFormFields(context.composition.template);\n          context.composition.updateFormFields(values);\n        }\n      }\n    })();\n  }, [iFunctionSelected, context.token, context.composition]);\n  const handleFieldSelected = obj => {\n    setField(field === obj ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropField: false\n    }));\n  };\n  const handleRemoveField = () => {\n    setField(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropField: false\n    }));\n    setDependencies([{\n      id: 0,\n      columnRef: null,\n      field: null\n    }]);\n    setColumnRes(null);\n    setTextColumn(null);\n    setCodeColumn(null);\n  };\n  const handleRefsetSelected = obj => {\n    setRefset(refset === obj ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropRefsets: false\n    }));\n  };\n  const handleRemoveRefset = () => {\n    setRefset(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropRefsets: false\n    }));\n    setDependencies([{\n      id: 0,\n      columnRef: null,\n      field: null\n    }]);\n    setColumnRes(null);\n    setTextColumn(null);\n    setCodeColumn(null);\n  };\n  const handleCodeColumnSelected = obj => {\n    setCodeColumn(codeColumn === obj ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropCodeColumn: false\n    }));\n  };\n  const handleRemoveCodeColumn = () => {\n    setCodeColumn(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropCodeColumn: false\n    }));\n  };\n  const handleTextColumnSelected = obj => {\n    setTextColumn(textColumn === obj ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropTextColumn: false\n    }));\n  };\n  const handleRemoveTextColumn = () => {\n    setTextColumn(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropTextColumn: false\n    }));\n  };\n  const handleColumnResSelected = obj => {\n    setColumnRes(columnRes === obj ? null : obj);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropColRes: false\n    }));\n  };\n  const handleRemoveColumnRes = () => {\n    setColumnRes(null);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropColRes: false\n    }));\n  };\n  const handleDependency = (id, type, value) => {\n    let newDependencies = [];\n    dependencies.forEach(obj => {\n      if (obj.id === id) {\n        newDependencies.push({\n          ...obj,\n          [type]: value\n        });\n      } else {\n        newDependencies.push(obj);\n      }\n    });\n    setDependencies(newDependencies);\n    let newShowDropDependencyColumn = [];\n    showDrop.showDropDependencyColumn.forEach(obj => {\n      newShowDropDependencyColumn.push({\n        ...obj,\n        boolean: false\n      });\n    });\n    let newShowDropDependencyField = [];\n    showDrop.showDropDependencyField.forEach(obj => {\n      newShowDropDependencyField.push({\n        ...obj,\n        boolean: false\n      });\n    });\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropDependencyColumn: newShowDropDependencyColumn,\n      showDropDependencyField: newShowDropDependencyField\n    }));\n  };\n  const handleDropDependency = (id, type) => {\n    let array = [];\n    showDrop[type].forEach(obj => {\n      if (obj.id === id) {\n        array.push({\n          ...obj,\n          boolean: !obj.boolean\n        });\n      } else {\n        array.push(obj);\n      }\n    });\n    setShowDrop(prevState => ({\n      ...prevState,\n      [type]: array\n    }));\n  };\n  const removeDependency = id => {\n    let newDependencies = dependencies.filter(obj => obj.id !== id);\n    let newShowDropDependencyField = showDrop.showDropDependencyField.filter(obj => obj.id !== id);\n    let newShowDropDependencyColumn = showDrop.showDropDependencyColumn.filter(obj => obj.id !== id);\n    setDependencies(newDependencies);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropDependencyColumn: newShowDropDependencyColumn,\n      showDropDependencyField: newShowDropDependencyField\n    }));\n  };\n  const addDependency = () => {\n    const ids = dependencies.map(obj => {\n      return obj.id;\n    });\n    let maxId = maxValueArray(ids);\n    const newDependencies = [...dependencies, {\n      id: maxId + 1,\n      field: null,\n      columnRef: null\n    }];\n    setDependencies(newDependencies);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropDependencyColumn: [...prevState.showDropDependencyColumn, {\n        id: maxId + 1,\n        boolean: false\n      }],\n      showDropDependencyField: [...prevState.showDropDependencyField, {\n        id: maxId + 1,\n        boolean: false\n      }]\n    }));\n  };\n  const handleComposition = () => {\n    let value = [];\n    if (iFunctionSelected.IFUNCAO === \"Preenchimento automático de campos\") {\n      if (context.composition.compositionPlanning[context.composition.openCompositionPlanningPath] && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"] && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].length > 0 && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type === \"Preenchimento automático de campos\").length > 0) {\n        let currentValue = context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type === \"Preenchimento automático de campos\")[0];\n        let obj = {\n          ...currentValue.affectedFields\n        };\n        let props = {};\n        dependencies.forEach(y => {\n          props[y.columnRef] = y.field.path;\n        });\n        currentValue.affectedFields = {\n          ...obj,\n          [field.path]: {\n            url: `${getEnvUrl('aidarefsets', '4010')}/`,\n            // url: \"http://172.21.220.49:4010/\",\n            serviceName: `refsetConceptsPaginated?id=${refset.id}`,\n            method: \"post\",\n            body: {\n              page: 0,\n              props: [props]\n            },\n            datatype: field.datatype,\n            upperOccurrences: field.upperOccurrences,\n            name: field.name,\n            path: field.path,\n            refsetName: refset.name,\n            refsetId: refset.id,\n            resColumn: columnRes,\n            codeColumn: codeColumn,\n            textColumn: textColumn,\n            dependencies: dependencies.map(y => {\n              return {\n                columnRef: y.columnRef,\n                field: y.field\n              };\n            })\n          }\n        };\n        value = [...context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type !== \"Preenchimento automático de campos\"), currentValue];\n      } else {\n        let props = {};\n        dependencies.forEach(y => {\n          props[y.columnRef] = y.field.path;\n        });\n        value = [...context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"], {\n          affectedFields: {\n            [field.path]: {\n              url: `${getEnvUrl('aidarefsets', '4010')}/`,\n              // url: \"http://172.21.220.49:4010/\",\n              serviceName: `refsetConceptsPaginated?id=${refset.id}`,\n              method: \"post\",\n              body: {\n                page: 0,\n                props: [props]\n              },\n              datatype: field.datatype,\n              upperOccurrences: field.upperOccurrences,\n              name: field.name,\n              path: field.path,\n              refsetName: refset.name,\n              refsetId: refset.id,\n              resColumn: columnRes,\n              codeColumn: codeColumn,\n              textColumn: textColumn,\n              dependencies: dependencies.map(y => {\n                return {\n                  columnRef: y.columnRef,\n                  field: y.field\n                };\n              })\n            }\n          },\n          type: \"Preenchimento automático de campos\"\n        }];\n      }\n    }\n    context.composition.handleCompositionPlanning(context.composition.openCompositionPlanningPath, \"InternalFunctions\", value);\n    setField(null);\n    setRefset(null);\n    setColumnRes(null);\n    setCodeColumn(null);\n    setTextColumn(null);\n    setDependencies([{\n      id: 0,\n      columnRef: null,\n      field: null\n    }]);\n    setShowDrop(prevState => ({\n      ...prevState,\n      showDropList: false,\n      showDropRefsets: false,\n      showDropColRes: false,\n      showDropField: false,\n      showDropDependencyField: [{\n        id: 0,\n        boolean: false\n      }],\n      showDropDependencyColumn: [{\n        id: 0,\n        boolean: false\n      }],\n      showDropCodeColumn: false,\n      showDropTextColumn: false\n    }));\n  }; // FUNCTIONS\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [functionSelected, setFunction] = useState(null);\n  const [concepts, setConcepts] = useState(null);\n  const [showDropConcepts, setShowDropConcepts] = useState(false);\n  const [conceptSelected, setConcept] = useState(null);\n  useEffect(() => {\n    functionSelected !== null && axios({\n      method: \"get\",\n      url: `${getEnvUrl('aidarefsets', '4010')}/refsetConcepts?id=${functionSelected.id}`,\n      // url: `http://172.21.220.49:4010/refsetConcepts?id=${functionSelected.id}`,\n      headers: {\n        Authorization: \"Bearer \" + context.token\n      }\n    }).then(response => {\n      if (response.data.success === true) {\n        setConcepts(response.data.concepts);\n      } else {\n        setConcepts([]);\n      }\n    }).catch(error => {\n      setConcepts([]);\n    });\n  }, [functionSelected, context.token]);\n  const handleFunctionsComposition = () => {\n    const value = [conceptSelected.functionName];\n    context.composition.handleCompositionPlanning(context.composition.openCompositionPlanningPath, \"Functions\", value);\n    setFunction(null);\n    setConcept(null);\n    setShowDropConcepts(false);\n  };\n  const handleFunctionSelected = obj => {\n    setFunction(functionSelected !== null && functionSelected.id === obj.id ? null : obj);\n    setConcept(null);\n    setConcepts(null);\n  };\n  const handleSetValue = value => {\n    setConcept(conceptSelected !== null && conceptSelected === value ? null : value);\n    setShowDropConcepts(false);\n  };\n  const handleClearValue = () => {\n    setConcept(null);\n    setShowDropConcepts(false);\n  };\n  const handleSetShowDropConcepts = () => {\n    setShowDropConcepts(!showDropConcepts);\n  };\n  const handleRemoveFilter = () => {\n    setSearchValue(\"\");\n    setFunction(null);\n    setConcepts(null);\n  };\n  const handleCancelChanges = () => {\n    props.onCancel(); // ver se ao carregar no botão de cancelar, queremos que o item fique deseleccionado -> descomentar linha de baixo\n    //await this.context.composition.handleOpenCompositionPlanning(this.context.composition.openCompositionPlanningPath);\n  };\n\n  const handleConfirmChanges = () => {\n    functionSelected !== null && conceptSelected !== null && handleFunctionsComposition();\n  };\n  let bodyDataFunctions = [{\n    value: conceptSelected,\n    valueKey: \"functionName\",\n    placeholder: \"Selecione uma função...\",\n    type: \"dropdown\",\n    key: \"concepts\",\n    isDropSelected: showDropConcepts,\n    dropList: concepts,\n    dropListID: \"idFunction\",\n    dropListTextID: \"functionName\",\n    handleOpenDrop: handleSetShowDropConcepts,\n    handleSetValue: handleSetValue,\n    handleClearValue: handleClearValue\n  }];\n  let bodyDataInternalFunctions1 = [{\n    title: \"Campo a ser preenchido\",\n    value: field,\n    valueKey: \"name\",\n    placeholder: \"Selecione um campo...\",\n    type: \"dropdown\",\n    key: \"field\",\n    isDropSelected: showDrop.showDropField,\n    dropList: context.composition.formFields,\n    dropListID: \"path\",\n    dropListTextID: \"name\",\n    handleOpenDrop: handleOpenDropList,\n    handleSetValue: handleFieldSelected,\n    handleClearValue: handleRemoveField\n  }, {\n    title: \"Refset\",\n    value: refset,\n    valueKey: \"name\",\n    placeholder: \"Selecione um refset...\",\n    type: \"dropdown\",\n    key: \"refsets\",\n    isDropSelected: showDrop.showDropRefsets,\n    dropList: context.composition.compositionPlanningRefsets,\n    dropListID: \"id\",\n    dropListTextID: \"name\",\n    handleOpenDrop: handleOpenDropList,\n    handleSetValue: handleRefsetSelected,\n    handleClearValue: handleRemoveRefset\n  }];\n  let bodyDataInternalFunctions2 = [];\n  let bodyDataInternalFunctions3 = [];\n  if (refset !== null && field !== null) {\n    bodyDataInternalFunctions2 = [{\n      type: \"dependency\",\n      title: \"Associar dependências\",\n      text: \"Nota: Para os campos com opções, o identificador único é utilizado como variável para associar à coluna do refset.\",\n      dependencies: dependencies,\n      handleDependency: handleDependency,\n      handleOpenDrop: handleDropDependency,\n      showDropDependencyField: showDrop.showDropDependencyField,\n      showDropDependencyColumn: showDrop.showDropDependencyColumn,\n      formFields: context.composition.formFields,\n      refsets: refset.concept_keys,\n      removeDependency: removeDependency,\n      addDependency: addDependency\n    }];\n    bodyDataInternalFunctions3 = field.datatype === \"DV_CODED_TEXT\" ? [{\n      title: \"Coluna do identificador único do resultado\",\n      value: codeColumn,\n      placeholder: \"Selecione uma coluna...\",\n      type: \"dropdown\",\n      key: \"codeColumn\",\n      isDropSelected: showDrop.showDropCodeColumn,\n      dropList: refset.concept_keys,\n      handleOpenDrop: handleOpenDropList,\n      handleSetValue: handleCodeColumnSelected,\n      handleClearValue: handleRemoveCodeColumn\n    }, {\n      title: \"Coluna da designação do resultado\",\n      value: textColumn,\n      placeholder: \"Selecione uma coluna...\",\n      type: \"dropdown\",\n      key: \"textColumn\",\n      isDropSelected: showDrop.showDropTextColumn,\n      dropList: refset.concept_keys,\n      handleOpenDrop: handleOpenDropList,\n      handleSetValue: handleTextColumnSelected,\n      handleClearValue: handleRemoveTextColumn\n    }] : [{\n      title: \"Coluna do resultado\",\n      value: columnRes,\n      placeholder: \"Selecione uma coluna...\",\n      type: \"dropdown\",\n      key: \"colRes\",\n      isDropSelected: showDrop.showDropColRes,\n      dropList: refset.concept_keys,\n      handleOpenDrop: handleOpenDropList,\n      handleSetValue: handleColumnResSelected,\n      handleClearValue: handleRemoveColumnRes\n    }];\n  }\n  let bodyDataInternalFunctions = bodyDataInternalFunctions1.concat(bodyDataInternalFunctions2, bodyDataInternalFunctions3);\n  let functionsList = context.composition.compositionPlanningFunctions;\n  let internalFunctionsList = context.composition.compositionPlanningInternalFunctions;\n  let functionsContent;\n  let internalFunctionsContent;\n  functionsContent = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(CompositionPlanningPanel, {\n    jsonTitle: \"Functions\",\n    itemsList: functionsList,\n    selectedItem: functionSelected,\n    handleSelectItem: handleFunctionSelected,\n    badgePrefix: \"F\",\n    hasSearchBar: true,\n    searchBarType: \"SearchBar\",\n    searchValue: searchValue,\n    handleChangeSearch: setSearchValue,\n    handleRemoveFilter: handleRemoveFilter,\n    concepts: concepts,\n    bodyData: bodyDataFunctions\n  });\n  internalFunctionsContent = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(CompositionPlanningPanel, {\n    jsonTitle: \"InternalFunctions\",\n    itemsList: internalFunctionsList,\n    hasSearchBar: false,\n    selectedItem: iFunctionSelected,\n    dropListID: \"ID\",\n    dropListTextID: \"IFUNCAO\",\n    showDropList: showDrop.showDropList,\n    handleOpenDrop: handleOpenDropList,\n    dropKey: \"list\",\n    handleClearValue: handleClearIFunction,\n    handleSelectItem: handleIFunctionSelected,\n    bodyData: bodyDataInternalFunctions\n  }), refset !== null && field !== null && (field.datatype !== \"DV_CODED_TEXT\" ? columnRes !== null : codeColumn !== null && textColumn !== null) && dependencies.filter(obj => obj.columnRef !== null && obj.field !== null).length === dependencies.length && /*#__PURE__*/React.createElement(ConfirmButton, {\n    title: \"Criar depend\\xEAncia\",\n    handleConfirm: handleComposition\n  }));\n  const tabData = [{\n    title: 'Funções',\n    content: functionsContent\n  }, {\n    title: 'Funções Internas',\n    content: internalFunctionsContent\n  }];\n  const content = /*#__PURE__*/React.createElement(Tab, {\n    tabData: tabData\n  });\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(SidePanel, {\n    title: \"Associar Fun\\xE7\\xE3o\",\n    content: content,\n    isSidePanelOpen: props.isSidePanelOpen,\n    collapseSidePanel: () => props.collapseSidePanel(),\n    onCancelChanges: () => handleCancelChanges(),\n    onClosed: () => handleConfirmChanges()\n  }));\n};\nexport default FunctionSettingsPanel;","map":{"version":3,"names":["React","useContext","useEffect","useState","SidePanel","CombinedContext","ProviderCombinedContext","Tab","axios","CompositionPlanningPanel","getFormFields","maxValueArray","ConfirmButton","getEnvUrl","FunctionSettingsPanel","props","context","iFunctionSelected","setIFunction","showDrop","setShowDrop","showDropList","showDropRefsets","showDropColRes","showDropField","showDropDependencyField","id","boolean","showDropDependencyColumn","showDropCodeColumn","showDropTextColumn","field","setField","refset","setRefset","columnRes","setColumnRes","dependencies","setDependencies","columnRef","codeColumn","setCodeColumn","textColumn","setTextColumn","handleOpenDropList","key","prevState","handleIFunctionSelected","obj","handleClearIFunction","IFUNCAO","composition","compositionPlanningRefsets","length","method","url","headers","Authorization","token","then","response","data","success","Array","isArray","refsets","updateCompositionPlanningRefsets","formFields","values","template","updateFormFields","handleFieldSelected","handleRemoveField","handleRefsetSelected","handleRemoveRefset","handleCodeColumnSelected","handleRemoveCodeColumn","handleTextColumnSelected","handleRemoveTextColumn","handleColumnResSelected","handleRemoveColumnRes","handleDependency","type","value","newDependencies","forEach","push","newShowDropDependencyColumn","newShowDropDependencyField","handleDropDependency","array","removeDependency","filter","addDependency","ids","map","maxId","handleComposition","compositionPlanning","openCompositionPlanningPath","currentValue","affectedFields","y","path","serviceName","body","page","datatype","upperOccurrences","name","refsetName","refsetId","resColumn","handleCompositionPlanning","searchValue","setSearchValue","functionSelected","setFunction","concepts","setConcepts","showDropConcepts","setShowDropConcepts","conceptSelected","setConcept","catch","error","handleFunctionsComposition","functionName","handleFunctionSelected","handleSetValue","handleClearValue","handleSetShowDropConcepts","handleRemoveFilter","handleCancelChanges","onCancel","handleConfirmChanges","bodyDataFunctions","valueKey","placeholder","isDropSelected","dropList","dropListID","dropListTextID","handleOpenDrop","bodyDataInternalFunctions1","title","bodyDataInternalFunctions2","bodyDataInternalFunctions3","text","concept_keys","bodyDataInternalFunctions","concat","functionsList","compositionPlanningFunctions","internalFunctionsList","compositionPlanningInternalFunctions","functionsContent","internalFunctionsContent","openCompositionPlanning","createElement","jsonTitle","itemsList","selectedItem","handleSelectItem","badgePrefix","hasSearchBar","searchBarType","handleChangeSearch","bodyData","dropKey","handleConfirm","tabData","content","isSidePanelOpen","collapseSidePanel","onCancelChanges","onClosed"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/FormDesigner/Sidebar/SidePanel/CompositionPlanningPanels/FunctionSettingsPanel/FunctionSettingsPanel.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport SidePanel from \"../../SidePanel\";\r\nimport CombinedContext from \"../../../../../../contexts/CombinedContext\";\r\nimport ProviderCombinedContext from \"../../../../../../contexts/ProviderCombinedContext\";\r\nimport Tab from \"../../../../UI/Tab/Tab\";\r\nimport axios from \"axios\";\r\nimport CompositionPlanningPanel from \"../CompositionPlanningPanel\";\r\nimport { getFormFields } from \"../../../../../../assets/functions/GetFormFields/getFormFields\";\r\nimport { maxValueArray } from \"../../../../../../assets/functions/Maximum/maxValueArray\";\r\nimport ConfirmButton from \"../../../../UI/Button/ConfirmButton\";\r\nimport { getEnvUrl } from \"../../../../../../environment\";\r\n\r\nconst FunctionSettingsPanel = props => {\r\n  const context = useContext(CombinedContext); // INTERNAL FUNCTIONS\r\n\r\n  const [iFunctionSelected, setIFunction] = useState(null);\r\n  const [showDrop, setShowDrop] = useState({\r\n    showDropList: false,\r\n    // Show primeiro dropdown dos conceitos\r\n    showDropRefsets: false,\r\n    // Show dropdown dos refsets\r\n    showDropColRes: false,\r\n    // Show dropdowm coluna com a resposta\r\n    showDropField: false,\r\n    // Show dropdown coluna com o campo a ser preenchido\r\n    showDropDependencyField: [{\r\n      id: 0,\r\n      boolean: false\r\n    }],\r\n    // show dropdown campos dependencia\r\n    showDropDependencyColumn: [{\r\n      id: 0,\r\n      boolean: false\r\n    }],\r\n    // show dropdown colunas dependencia\r\n    showDropCodeColumn: false,\r\n    showDropTextColumn: false\r\n  });\r\n  const [field, setField] = useState(null); // Campo a ser preenchido\r\n\r\n  const [refset, setRefset] = useState(null); // refset selecionado\r\n\r\n  const [columnRes, setColumnRes] = useState(null); // coluna com a resposta\r\n\r\n  const [dependencies, setDependencies] = useState([{\r\n    id: 0,\r\n    columnRef: null,\r\n    field: null\r\n  }]); // dependencias\r\n\r\n  const [codeColumn, setCodeColumn] = useState(null);\r\n  const [textColumn, setTextColumn] = useState(null);\r\n\r\n  const handleOpenDropList = key => {\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      [key]: !prevState[key]\r\n    }));\r\n  };\r\n\r\n  const handleIFunctionSelected = obj => {\r\n    setIFunction(iFunctionSelected !== null && iFunctionSelected.id === obj.id ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropList: false\r\n    }));\r\n    setField(null);\r\n    setRefset(null);\r\n  };\r\n\r\n  const handleClearIFunction = () => {\r\n    setIFunction(null);\r\n    setField(null);\r\n    setRefset(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropList: false,\r\n      showDropField: false,\r\n      showDropRefsets: false\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (iFunctionSelected !== null && iFunctionSelected.IFUNCAO === \"Preenchimento automático de campos\") {\r\n        if (context.composition.compositionPlanningRefsets.length === 0) {\r\n          axios({\r\n            method: \"get\",\r\n            url: `${getEnvUrl('aidarefsets', '4010')}/localRefsets`,\r\n            // url: \"http://172.21.220.49:4010/localRefsets\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + context.token\r\n            }\r\n          }).then(response => {\r\n            if (response.data.success === true && Array.isArray(response.data.refsets)) {\r\n              context.composition.updateCompositionPlanningRefsets(response.data.refsets);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (context.composition.formFields.length === 0) {\r\n          const values = await getFormFields(context.composition.template);\r\n          context.composition.updateFormFields(values);\r\n        }\r\n      }\r\n    })();\r\n  }, [iFunctionSelected, context.token, context.composition]);\r\n\r\n  const handleFieldSelected = obj => {\r\n    setField(field === obj ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropField: false\r\n    }));\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    setField(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropField: false\r\n    }));\r\n    setDependencies([{\r\n      id: 0,\r\n      columnRef: null,\r\n      field: null\r\n    }]);\r\n    setColumnRes(null);\r\n    setTextColumn(null);\r\n    setCodeColumn(null);\r\n  };\r\n\r\n  const handleRefsetSelected = obj => {\r\n    setRefset(refset === obj ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropRefsets: false\r\n    }));\r\n  };\r\n\r\n  const handleRemoveRefset = () => {\r\n    setRefset(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropRefsets: false\r\n    }));\r\n    setDependencies([{\r\n      id: 0,\r\n      columnRef: null,\r\n      field: null\r\n    }]);\r\n    setColumnRes(null);\r\n    setTextColumn(null);\r\n    setCodeColumn(null);\r\n  };\r\n\r\n  const handleCodeColumnSelected = obj => {\r\n    setCodeColumn(codeColumn === obj ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropCodeColumn: false\r\n    }));\r\n  };\r\n\r\n  const handleRemoveCodeColumn = () => {\r\n    setCodeColumn(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropCodeColumn: false\r\n    }));\r\n  };\r\n\r\n  const handleTextColumnSelected = obj => {\r\n    setTextColumn(textColumn === obj ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropTextColumn: false\r\n    }));\r\n  };\r\n\r\n  const handleRemoveTextColumn = () => {\r\n    setTextColumn(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropTextColumn: false\r\n    }));\r\n  };\r\n\r\n  const handleColumnResSelected = obj => {\r\n    setColumnRes(columnRes === obj ? null : obj);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropColRes: false\r\n    }));\r\n  };\r\n\r\n  const handleRemoveColumnRes = () => {\r\n    setColumnRes(null);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropColRes: false\r\n    }));\r\n  };\r\n\r\n  const handleDependency = (id, type, value) => {\r\n    let newDependencies = [];\r\n    dependencies.forEach(obj => {\r\n      if (obj.id === id) {\r\n        newDependencies.push({ ...obj,\r\n          [type]: value\r\n        });\r\n      } else {\r\n        newDependencies.push(obj);\r\n      }\r\n    });\r\n    setDependencies(newDependencies);\r\n    let newShowDropDependencyColumn = [];\r\n    showDrop.showDropDependencyColumn.forEach(obj => {\r\n      newShowDropDependencyColumn.push({ ...obj,\r\n        boolean: false\r\n      });\r\n    });\r\n    let newShowDropDependencyField = [];\r\n    showDrop.showDropDependencyField.forEach(obj => {\r\n      newShowDropDependencyField.push({ ...obj,\r\n        boolean: false\r\n      });\r\n    });\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropDependencyColumn: newShowDropDependencyColumn,\r\n      showDropDependencyField: newShowDropDependencyField\r\n    }));\r\n  };\r\n\r\n  const handleDropDependency = (id, type) => {\r\n    let array = [];\r\n    showDrop[type].forEach(obj => {\r\n      if (obj.id === id) {\r\n        array.push({ ...obj,\r\n          boolean: !obj.boolean\r\n        });\r\n      } else {\r\n        array.push(obj);\r\n      }\r\n    });\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      [type]: array\r\n    }));\r\n  };\r\n\r\n  const removeDependency = id => {\r\n    let newDependencies = dependencies.filter(obj => obj.id !== id);\r\n    let newShowDropDependencyField = showDrop.showDropDependencyField.filter(obj => obj.id !== id);\r\n    let newShowDropDependencyColumn = showDrop.showDropDependencyColumn.filter(obj => obj.id !== id);\r\n    setDependencies(newDependencies);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropDependencyColumn: newShowDropDependencyColumn,\r\n      showDropDependencyField: newShowDropDependencyField\r\n    }));\r\n  };\r\n\r\n  const addDependency = () => {\r\n    const ids = dependencies.map(obj => {\r\n      return obj.id;\r\n    });\r\n    let maxId = maxValueArray(ids);\r\n    const newDependencies = [...dependencies, {\r\n      id: maxId + 1,\r\n      field: null,\r\n      columnRef: null\r\n    }];\r\n    setDependencies(newDependencies);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropDependencyColumn: [...prevState.showDropDependencyColumn, {\r\n        id: maxId + 1,\r\n        boolean: false\r\n      }],\r\n      showDropDependencyField: [...prevState.showDropDependencyField, {\r\n        id: maxId + 1,\r\n        boolean: false\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const handleComposition = () => {\r\n    let value = [];\r\n\r\n    if (iFunctionSelected.IFUNCAO === \"Preenchimento automático de campos\") {\r\n      if (context.composition.compositionPlanning[context.composition.openCompositionPlanningPath] && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"] && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].length > 0 && context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type === \"Preenchimento automático de campos\").length > 0) {\r\n        let currentValue = context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type === \"Preenchimento automático de campos\")[0];\r\n        let obj = { ...currentValue.affectedFields\r\n        };\r\n        let props = {};\r\n        dependencies.forEach(y => {\r\n          props[y.columnRef] = y.field.path;\r\n        });\r\n        currentValue.affectedFields = { ...obj,\r\n          [field.path]: {\r\n            url: `${getEnvUrl('aidarefsets', '4010')}/`,\r\n            // url: \"http://172.21.220.49:4010/\",\r\n            serviceName: `refsetConceptsPaginated?id=${refset.id}`,\r\n            method: \"post\",\r\n            body: {\r\n              page: 0,\r\n              props: [props]\r\n            },\r\n            datatype: field.datatype,\r\n            upperOccurrences: field.upperOccurrences,\r\n            name: field.name,\r\n            path: field.path,\r\n            refsetName: refset.name,\r\n            refsetId: refset.id,\r\n            resColumn: columnRes,\r\n            codeColumn: codeColumn,\r\n            textColumn: textColumn,\r\n            dependencies: dependencies.map(y => {\r\n              return {\r\n                columnRef: y.columnRef,\r\n                field: y.field\r\n              };\r\n            })\r\n          }\r\n        };\r\n        value = [...context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"].filter(obj => obj.type !== \"Preenchimento automático de campos\"), currentValue];\r\n      } else {\r\n        let props = {};\r\n        dependencies.forEach(y => {\r\n          props[y.columnRef] = y.field.path;\r\n        });\r\n        value = [...context.composition.compositionPlanning[context.composition.openCompositionPlanningPath][\"InternalFunctions\"], {\r\n          affectedFields: {\r\n            [field.path]: {\r\n              url: `${getEnvUrl('aidarefsets', '4010')}/`,\r\n              // url: \"http://172.21.220.49:4010/\",\r\n              serviceName: `refsetConceptsPaginated?id=${refset.id}`,\r\n              method: \"post\",\r\n              body: {\r\n                page: 0,\r\n                props: [props]\r\n              },\r\n              datatype: field.datatype,\r\n              upperOccurrences: field.upperOccurrences,\r\n              name: field.name,\r\n              path: field.path,\r\n              refsetName: refset.name,\r\n              refsetId: refset.id,\r\n              resColumn: columnRes,\r\n              codeColumn: codeColumn,\r\n              textColumn: textColumn,\r\n              dependencies: dependencies.map(y => {\r\n                return {\r\n                  columnRef: y.columnRef,\r\n                  field: y.field\r\n                };\r\n              })\r\n            }\r\n          },\r\n          type: \"Preenchimento automático de campos\"\r\n        }];\r\n      }\r\n    }\r\n\r\n    context.composition.handleCompositionPlanning(context.composition.openCompositionPlanningPath, \"InternalFunctions\", value);\r\n    setField(null);\r\n    setRefset(null);\r\n    setColumnRes(null);\r\n    setCodeColumn(null);\r\n    setTextColumn(null);\r\n    setDependencies([{\r\n      id: 0,\r\n      columnRef: null,\r\n      field: null\r\n    }]);\r\n    setShowDrop(prevState => ({ ...prevState,\r\n      showDropList: false,\r\n      showDropRefsets: false,\r\n      showDropColRes: false,\r\n      showDropField: false,\r\n      showDropDependencyField: [{\r\n        id: 0,\r\n        boolean: false\r\n      }],\r\n      showDropDependencyColumn: [{\r\n        id: 0,\r\n        boolean: false\r\n      }],\r\n      showDropCodeColumn: false,\r\n      showDropTextColumn: false\r\n    }));\r\n  }; // FUNCTIONS\r\n\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [functionSelected, setFunction] = useState(null);\r\n  const [concepts, setConcepts] = useState(null);\r\n  const [showDropConcepts, setShowDropConcepts] = useState(false);\r\n  const [conceptSelected, setConcept] = useState(null);\r\n  useEffect(() => {\r\n    functionSelected !== null && axios({\r\n      method: \"get\",\r\n      url: `${getEnvUrl('aidarefsets', '4010')}/refsetConcepts?id=${functionSelected.id}`,\r\n      // url: `http://172.21.220.49:4010/refsetConcepts?id=${functionSelected.id}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + context.token\r\n      }\r\n    }).then(response => {\r\n      if (response.data.success === true) {\r\n        setConcepts(response.data.concepts);\r\n      } else {\r\n        setConcepts([]);\r\n      }\r\n    }).catch(error => {\r\n      setConcepts([]);\r\n    });\r\n  }, [functionSelected, context.token]);\r\n\r\n  const handleFunctionsComposition = () => {\r\n    const value = [conceptSelected.functionName];\r\n    context.composition.handleCompositionPlanning(context.composition.openCompositionPlanningPath, \"Functions\", value);\r\n    setFunction(null);\r\n    setConcept(null);\r\n    setShowDropConcepts(false);\r\n  };\r\n\r\n  const handleFunctionSelected = obj => {\r\n    setFunction(functionSelected !== null && functionSelected.id === obj.id ? null : obj);\r\n    setConcept(null);\r\n    setConcepts(null);\r\n  };\r\n\r\n  const handleSetValue = value => {\r\n    setConcept(conceptSelected !== null && conceptSelected === value ? null : value);\r\n    setShowDropConcepts(false);\r\n  };\r\n\r\n  const handleClearValue = () => {\r\n    setConcept(null);\r\n    setShowDropConcepts(false);\r\n  };\r\n\r\n  const handleSetShowDropConcepts = () => {\r\n    setShowDropConcepts(!showDropConcepts);\r\n  };\r\n\r\n  const handleRemoveFilter = () => {\r\n    setSearchValue(\"\");\r\n    setFunction(null);\r\n    setConcepts(null);\r\n  };\r\n\r\n  const handleCancelChanges = () => {\r\n    props.onCancel(); // ver se ao carregar no botão de cancelar, queremos que o item fique deseleccionado -> descomentar linha de baixo\r\n    //await this.context.composition.handleOpenCompositionPlanning(this.context.composition.openCompositionPlanningPath);\r\n  };\r\n\r\n  const handleConfirmChanges = () => {\r\n    functionSelected !== null && conceptSelected !== null && handleFunctionsComposition();\r\n  };\r\n\r\n  let bodyDataFunctions = [{\r\n    value: conceptSelected,\r\n    valueKey: \"functionName\",\r\n    placeholder: \"Selecione uma função...\",\r\n    type: \"dropdown\",\r\n    key: \"concepts\",\r\n    isDropSelected: showDropConcepts,\r\n    dropList: concepts,\r\n    dropListID: \"idFunction\",\r\n    dropListTextID: \"functionName\",\r\n    handleOpenDrop: handleSetShowDropConcepts,\r\n    handleSetValue: handleSetValue,\r\n    handleClearValue: handleClearValue\r\n  }];\r\n  let bodyDataInternalFunctions1 = [{\r\n    title: \"Campo a ser preenchido\",\r\n    value: field,\r\n    valueKey: \"name\",\r\n    placeholder: \"Selecione um campo...\",\r\n    type: \"dropdown\",\r\n    key: \"field\",\r\n    isDropSelected: showDrop.showDropField,\r\n    dropList: context.composition.formFields,\r\n    dropListID: \"path\",\r\n    dropListTextID: \"name\",\r\n    handleOpenDrop: handleOpenDropList,\r\n    handleSetValue: handleFieldSelected,\r\n    handleClearValue: handleRemoveField\r\n  }, {\r\n    title: \"Refset\",\r\n    value: refset,\r\n    valueKey: \"name\",\r\n    placeholder: \"Selecione um refset...\",\r\n    type: \"dropdown\",\r\n    key: \"refsets\",\r\n    isDropSelected: showDrop.showDropRefsets,\r\n    dropList: context.composition.compositionPlanningRefsets,\r\n    dropListID: \"id\",\r\n    dropListTextID: \"name\",\r\n    handleOpenDrop: handleOpenDropList,\r\n    handleSetValue: handleRefsetSelected,\r\n    handleClearValue: handleRemoveRefset\r\n  }];\r\n  let bodyDataInternalFunctions2 = [];\r\n  let bodyDataInternalFunctions3 = [];\r\n\r\n  if (refset !== null && field !== null) {\r\n    bodyDataInternalFunctions2 = [{\r\n      type: \"dependency\",\r\n      title: \"Associar dependências\",\r\n      text: \"Nota: Para os campos com opções, o identificador único é utilizado como variável para associar à coluna do refset.\",\r\n      dependencies: dependencies,\r\n      handleDependency: handleDependency,\r\n      handleOpenDrop: handleDropDependency,\r\n      showDropDependencyField: showDrop.showDropDependencyField,\r\n      showDropDependencyColumn: showDrop.showDropDependencyColumn,\r\n      formFields: context.composition.formFields,\r\n      refsets: refset.concept_keys,\r\n      removeDependency: removeDependency,\r\n      addDependency: addDependency\r\n    }];\r\n    bodyDataInternalFunctions3 = field.datatype === \"DV_CODED_TEXT\" ? [{\r\n      title: \"Coluna do identificador único do resultado\",\r\n      value: codeColumn,\r\n      placeholder: \"Selecione uma coluna...\",\r\n      type: \"dropdown\",\r\n      key: \"codeColumn\",\r\n      isDropSelected: showDrop.showDropCodeColumn,\r\n      dropList: refset.concept_keys,\r\n      handleOpenDrop: handleOpenDropList,\r\n      handleSetValue: handleCodeColumnSelected,\r\n      handleClearValue: handleRemoveCodeColumn\r\n    }, {\r\n      title: \"Coluna da designação do resultado\",\r\n      value: textColumn,\r\n      placeholder: \"Selecione uma coluna...\",\r\n      type: \"dropdown\",\r\n      key: \"textColumn\",\r\n      isDropSelected: showDrop.showDropTextColumn,\r\n      dropList: refset.concept_keys,\r\n      handleOpenDrop: handleOpenDropList,\r\n      handleSetValue: handleTextColumnSelected,\r\n      handleClearValue: handleRemoveTextColumn\r\n    }] : [{\r\n      title: \"Coluna do resultado\",\r\n      value: columnRes,\r\n      placeholder: \"Selecione uma coluna...\",\r\n      type: \"dropdown\",\r\n      key: \"colRes\",\r\n      isDropSelected: showDrop.showDropColRes,\r\n      dropList: refset.concept_keys,\r\n      handleOpenDrop: handleOpenDropList,\r\n      handleSetValue: handleColumnResSelected,\r\n      handleClearValue: handleRemoveColumnRes\r\n    }];\r\n  }\r\n\r\n  let bodyDataInternalFunctions = bodyDataInternalFunctions1.concat(bodyDataInternalFunctions2, bodyDataInternalFunctions3);\r\n  let functionsList = context.composition.compositionPlanningFunctions;\r\n  let internalFunctionsList = context.composition.compositionPlanningInternalFunctions;\r\n  let functionsContent;\r\n  let internalFunctionsContent;\r\n  functionsContent = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(CompositionPlanningPanel, {\r\n    jsonTitle: \"Functions\",\r\n    itemsList: functionsList,\r\n    selectedItem: functionSelected,\r\n    handleSelectItem: handleFunctionSelected,\r\n    badgePrefix: \"F\",\r\n    hasSearchBar: true,\r\n    searchBarType: \"SearchBar\",\r\n    searchValue: searchValue,\r\n    handleChangeSearch: setSearchValue,\r\n    handleRemoveFilter: handleRemoveFilter,\r\n    concepts: concepts,\r\n    bodyData: bodyDataFunctions\r\n  });\r\n  internalFunctionsContent = context.composition.openCompositionPlanning && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(CompositionPlanningPanel, {\r\n    jsonTitle: \"InternalFunctions\",\r\n    itemsList: internalFunctionsList,\r\n    hasSearchBar: false,\r\n    selectedItem: iFunctionSelected,\r\n    dropListID: \"ID\",\r\n    dropListTextID: \"IFUNCAO\",\r\n    showDropList: showDrop.showDropList,\r\n    handleOpenDrop: handleOpenDropList,\r\n    dropKey: \"list\",\r\n    handleClearValue: handleClearIFunction,\r\n    handleSelectItem: handleIFunctionSelected,\r\n    bodyData: bodyDataInternalFunctions\r\n  }), refset !== null && field !== null && (field.datatype !== \"DV_CODED_TEXT\" ? columnRes !== null : codeColumn !== null && textColumn !== null) && dependencies.filter(obj => obj.columnRef !== null && obj.field !== null).length === dependencies.length && /*#__PURE__*/React.createElement(ConfirmButton, {\r\n    title: \"Criar depend\\xEAncia\",\r\n    handleConfirm: handleComposition\r\n  }));\r\n  const tabData = [{\r\n    title: 'Funções',\r\n    content: functionsContent\r\n  }, {\r\n    title: 'Funções Internas',\r\n    content: internalFunctionsContent\r\n  }];\r\n  const content = /*#__PURE__*/React.createElement(Tab, {\r\n    tabData: tabData\r\n  });\r\n  return /*#__PURE__*/React.createElement(ProviderCombinedContext, null, /*#__PURE__*/React.createElement(SidePanel, {\r\n    title: \"Associar Fun\\xE7\\xE3o\",\r\n    content: content,\r\n    isSidePanelOpen: props.isSidePanelOpen,\r\n    collapseSidePanel: () => props.collapseSidePanel(),\r\n    onCancelChanges: () => handleCancelChanges(),\r\n    onClosed: () => handleConfirmChanges()\r\n  }));\r\n};\r\n\r\nexport default FunctionSettingsPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}