{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nvar styles = {\n  \"link-preview-section\": \"_3elLK\",\n  \"animated-background\": \"_Z-Tng\",\n  \"link-image-loader\": \"_13bre\",\n  \"img\": \"_1Igjx\",\n  \"placeHolderShimmer\": \"_yKlsy\",\n  \"link-description\": \"_3IjjD\",\n  \"domain\": \"_3Y4Nu\",\n  \"link-url\": \"_CZu1J\",\n  \"link-url-loader\": \"_2immM\",\n  \"link-data\": \"_2bWne\",\n  \"link-title\": \"_35AKc\",\n  \"link-data-loader\": \"_322CG\",\n  \"p1\": \"_3rFBW\",\n  \"p2\": \"_L7vLm\",\n  \"link-image\": \"_3EjBn\"\n};\nvar isValidUrlProp = function isValidUrlProp(props, propName, componentName) {\n  if (!props) {\n    return new Error(\"Required parameter URL was not passed.\");\n  }\n  if (!isValidUrl(props[propName])) {\n    return new Error(\"Invalid prop '\" + propName + \"' passed to '\" + componentName + \"'. Expected a valid url.\");\n  }\n};\nvar isValidUrl = function isValidUrl(url) {\n  var regex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/;\n  var validUrl = regex.test(url);\n  return validUrl;\n};\nfunction LinkPreview(props) {\n  var _useState = useState(true),\n    loading = _useState[0],\n    setLoading = _useState[1];\n  var _useState2 = useState({}),\n    preview = _useState2[0],\n    setPreviewData = _useState2[1];\n  var _useState3 = useState(false),\n    isUrlValid = _useState3[0],\n    setUrlValidation = _useState3[1];\n  var url = props.url,\n    width = props.width,\n    maxWidth = props.maxWidth,\n    marginTop = props.marginTop,\n    marginBottom = props.marginBottom,\n    marginRight = props.marginRight,\n    marginLeft = props.marginLeft,\n    onClick = props.onClick,\n    render = props.render;\n  var api = 'https://lpdg.up.railway.app/parse/link';\n  var style = {\n    width: width,\n    maxWidth: maxWidth,\n    marginTop: marginTop,\n    marginBottom: marginBottom,\n    marginRight: marginRight,\n    marginLeft: marginLeft\n  };\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      try {\n        var fetch = window.fetch;\n        if (isValidUrl(url)) {\n          setUrlValidation(true);\n        } else {\n          return Promise.resolve({});\n        }\n        setLoading(true);\n        return Promise.resolve(fetch(api, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            url: url\n          })\n        })).then(function (response) {\n          return Promise.resolve(response.json()).then(function (data) {\n            setPreviewData(data);\n            setLoading(false);\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n    fetchData();\n  }, [url]);\n  if (!isUrlValid) {\n    console.error('LinkPreview Error: You need to provide url in props to render the component');\n    return null;\n  }\n  if (render) {\n    return render({\n      loading: loading,\n      preview: preview\n    });\n  } else if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-preview-section'],\n      style: style\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-description']\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.domain\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles['animated-background']\n    }, \"facebook.com\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-data-loader']\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['animated-background']\n    }, \"Shashank Shekhar\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['animated-background']\n    }, \"This is some description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-image-loader']\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.img\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-preview-section'],\n      style: style,\n      onClick: onClick\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-description']\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.domain\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles['link-url']\n    }, preview.domain)), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-data']\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-title']\n    }, preview.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-description']\n    }, preview.description))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['link-image']\n    }, preview.img && /*#__PURE__*/React.createElement(\"img\", {\n      src: preview.img,\n      alt: preview.description\n    }))));\n  }\n}\nLinkPreview.defaultProps = {\n  onClick: function onClick() {},\n  width: '90%',\n  maxWidth: '700px',\n  marginTop: '18px',\n  marginBottom: '18px',\n  marginRight: 'auto',\n  marginLeft: 'auto'\n};\nLinkPreview.propTyps = {\n  url: isValidUrlProp,\n  onClick: PropTypes.func,\n  render: PropTypes.func,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  marginTop: PropTypes.string,\n  marginBottom: PropTypes.string,\n  marginRight: PropTypes.string,\n  marginLeft: PropTypes.string\n};\nexport default LinkPreview;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAIA,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAK;EACzD,IAAI,CAACF,KAAK,EAAE;IACV,OAAO,IAAIG,KAAK,yCAAyC,CAAC;;EAE5D,IAAI,CAACC,UAAU,CAACJ,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE;IAChC,OAAO,IAAIE,KAAK,oBACGF,QAAQ,qBAAgBC,aAAa,6BACxD,CAAC;;AAEL,CAAC;AAED,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIC,GAAG,EAAK;EAC1B,IAAMC,KAAK,GAAG,2FAA2F;EACzG,IAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAACH,GAAG,CAAC;EAChC,OAAOE,QAAQ;AACjB,CAAC;AAED,SAASE,WAAWA,CAACT,KAAK,EAAE;EAC1B,gBAA8BU,QAAQ,CAAC,IAAI,CAAC;IAArCC,OAAO;IAAEC,UAAU;EAC1B,iBAAkCF,QAAQ,CAAC,EAAE,CAAC;IAAvCG,OAAO;IAAEC,cAAc;EAC9B,iBAAuCJ,QAAQ,CAAC,KAAK,CAAC;IAA/CK,UAAU;IAAEC,gBAAgB;EAEnC,IACEX,GAAG,GASDL,KAAK,CATPK,GAAG;IACHY,KAAK,GAQHjB,KAAK,CARPiB,KAAK;IACLC,QAAQ,GAONlB,KAAK,CAPPkB,QAAQ;IACRC,SAAS,GAMPnB,KAAK,CANPmB,SAAS;IACTC,YAAY,GAKVpB,KAAK,CALPoB,YAAY;IACZC,WAAW,GAITrB,KAAK,CAJPqB,WAAW;IACXC,UAAU,GAGRtB,KAAK,CAHPsB,UAAU;IACVC,OAAO,GAELvB,KAAK,CAFPuB,OAAO;IACPC,MAAM,GACJxB,KAAK,CADPwB,MAAM;EAGR,IAAMC,GAAG,GAAG,wCAAwC;EAEpD,IAAMC,KAAK,GAAG;IACZT,KAAK,EAALA,KAAK;IACLC,QAAQ,EAARA,QAAQ;IACRC,SAAS,EAATA,SAAS;IACTC,YAAY,EAAZA,YAAY;IACZC,WAAW,EAAXA,WAAW;IACXC,UAAU,EAAVA;GACD;EAEDK,SAAS,CAAC,YAAM;IAAA,IACCC,SAAS,YAATA,SAASA;MAAA,IAAG;QACzB,IAAMC,KAAK,GAAGC,MAAM,CAACD,KAAK;QAC1B,IAAIzB,UAAU,CAACC,GAAG,CAAC,EAAE;UACnBW,gBAAgB,CAAC,IAAI,CAAC;SACvB,MAAM;UACL,uBAAO,EAAE;;QAEXJ,UAAU,CAAC,IAAI,CAAC;QAAA,uBACOiB,KAAK,CAACJ,GAAG,EAAE;UAChCM,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE;WACjB;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAE/B,GAAG,EAAHA;WAAK;SAC7B,CAAC,iBAPIgC,QAAQ;UAAA,uBAQKA,QAAQ,CAACC,IAAI,EAAE,iBAA5BC,IAAI;YACVzB,cAAc,CAACyB,IAAI,CAAC;YACpB3B,UAAU,CAAC,KAAK,CAAC;;;OAClB;QAAA;;;IACDgB,SAAS,EAAE;GACZ,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,IAAI,CAACU,UAAU,EAAE;IACfyB,OAAO,CAACC,KAAK,CACX,6EACF,CAAC;IACD,OAAO,IAAI;;EAIb,IAAIjB,MAAM,EAAE;IACV,OAAOA,MAAM,CAAC;MACZb,OAAO,EAAEA,OAAO;MAChBE,OAAO,EAAEA;KACV,CAAC;GACH,MAAM,IAAIF,OAAO,EAAE;IAClB,oBACE+B,8CACEA;MAAKC,SAAS,EAAEC,MAAM,CAAC,sBAAsB,CAAE;MAAClB,KAAK,EAAEA;oBACrDgB;MAAKC,SAAS,EAAEC,MAAM,CAAC,kBAAkB;oBACvCF;MAAKC,SAAS,EAAEC,MAAM,CAACC;oBACrBH;MACEC,SAAS,EACNC,MAAiC,CAAC,qBAAqB;OAE3D,cAEK,CACH,CAAC,eACNF;MAAKC,SAAS,EAAEC,MAAM,CAAC,kBAAkB;oBACvCF;MAAKC,SAAS,EAAGC,MAAiB,CAAC,qBAAqB;OAAI,kBAEvD,CAAC,eACNF;MAAKC,SAAS,EAAGC,MAAiB,CAAC,qBAAqB;OAAI,0BAEvD,CACF,CACF,CAAC,eACNF;MAAKC,SAAS,EAAEC,MAAM,CAAC,mBAAmB;oBACxCF;MAAKC,SAAS,EAAEC,MAAM,CAACE;KAAM,CAC1B,CACF,CACF,CAAC;GAET,MAAM;IACL,oBACEJ,8CACEA;MACEC,SAAS,EAAEC,MAAM,CAAC,sBAAsB,CAAE;MAC1ClB,KAAK,EAAEA,KAAM;MACbH,OAAO,EAAEA;oBAETmB;MAAKC,SAAS,EAAEC,MAAM,CAAC,kBAAkB;oBACvCF;MAAKC,SAAS,EAAEC,MAAM,CAACC;oBACrBH;MAAMC,SAAS,EAAEC,MAAM,CAAC,UAAU;OAAI/B,OAAO,CAACgC,MAAa,CACxD,CAAC,eACNH;MAAKC,SAAS,EAAEC,MAAM,CAAC,WAAW;oBAChCF;MAAKC,SAAS,EAAEC,MAAM,CAAC,YAAY;OAAI/B,OAAO,CAACkC,KAAW,CAAC,eAC3DL;MAAKC,SAAS,EAAEC,MAAM,CAAC,kBAAkB;OACtC/B,OAAO,CAACmC,WACN,CACF,CACF,CAAC,eACNN;MAAKC,SAAS,EAAEC,MAAM,CAAC,YAAY;OAChC/B,OAAO,CAACiC,GAAG,iBAAIJ;MAAKO,GAAG,EAAEpC,OAAO,CAACiC,GAAI;MAACI,GAAG,EAAErC,OAAO,CAACmC;KAAc,CAC/D,CACF,CACF,CAAC;;AAGZ;AAEAvC,WAAW,CAAC0C,YAAY,GAAG;EACzB5B,OAAO,EAAE,mBAAM,EAAE;EACjBN,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,MAAM;EACjBC,YAAY,EAAE,MAAM;EACpBC,WAAW,EAAE,MAAM;EACnBC,UAAU,EAAE;AACd,CAAC;AAEDb,WAAW,CAAC2C,QAAQ,GAAG;EACrB/C,GAAG,EAAEN,cAAc;EACnBwB,OAAO,EAAE8B,SAAS,CAACC,IAAI;EACvB9B,MAAM,EAAE6B,SAAS,CAACC,IAAI;EACtBrC,KAAK,EAAEoC,SAAS,CAACE,MAAM;EACvBrC,QAAQ,EAAEmC,SAAS,CAACE,MAAM;EAC1BpC,SAAS,EAAEkC,SAAS,CAACE,MAAM;EAC3BnC,YAAY,EAAEiC,SAAS,CAACE,MAAM;EAC9BlC,WAAW,EAAEgC,SAAS,CAACE,MAAM;EAC7BjC,UAAU,EAAE+B,SAAS,CAACE;AACxB,CAAC","names":["isValidUrlProp","props","propName","componentName","Error","isValidUrl","url","regex","validUrl","test","LinkPreview","useState","loading","setLoading","preview","setPreviewData","isUrlValid","setUrlValidation","width","maxWidth","marginTop","marginBottom","marginRight","marginLeft","onClick","render","api","style","useEffect","fetchData","fetch","window","method","headers","Accept","body","JSON","stringify","response","json","data","console","error","React","className","styles","domain","img","title","description","src","alt","defaultProps","propTyps","PropTypes","func","string"],"sources":["C:\\Users\\ines_\\bee_v2\\bee_school\\frontend\\node_modules\\@ashwamegh\\react-link-preview\\src\\components\\LinkPreview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './LinkPreview.css'\n\nconst isValidUrlProp = (props, propName, componentName) => {\n  if (!props) {\n    return new Error(`Required parameter URL was not passed.`)\n  }\n  if (!isValidUrl(props[propName])) {\n    return new Error(\n      `Invalid prop '${propName}' passed to '${componentName}'. Expected a valid url.`\n    )\n  }\n}\n\nconst isValidUrl = (url) => {\n  const regex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/\n  const validUrl = regex.test(url)\n  return validUrl\n}\n\nfunction LinkPreview(props) {\n  const [loading, setLoading] = useState(true)\n  const [preview, setPreviewData] = useState({})\n  const [isUrlValid, setUrlValidation] = useState(false)\n\n  const {\n    url,\n    width,\n    maxWidth,\n    marginTop,\n    marginBottom,\n    marginRight,\n    marginLeft,\n    onClick,\n    render\n  } = props\n\n  const api = 'https://lpdg.up.railway.app/parse/link'\n\n  const style = {\n    width,\n    maxWidth,\n    marginTop,\n    marginBottom,\n    marginRight,\n    marginLeft\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const fetch = window.fetch\n      if (isValidUrl(url)) {\n        setUrlValidation(true)\n      } else {\n        return {}\n      }\n      setLoading(true)\n      const response = await fetch(api, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ url })\n      })\n      const data = await response.json()\n      setPreviewData(data)\n      setLoading(false)\n    }\n    fetchData()\n  }, [url])\n\n  if (!isUrlValid) {\n    console.error(\n      'LinkPreview Error: You need to provide url in props to render the component'\n    )\n    return null\n  }\n\n  // If the user wants to use its own element structure with the fetched data\n  if (render) {\n    return render({\n      loading: loading,\n      preview: preview\n    })\n  } else if (loading) {\n    return (\n      <div>\n        <div className={styles['link-preview-section']} style={style}>\n          <div className={styles['link-description']}>\n            <div className={styles.domain}>\n              <span\n                className={\n                  (styles['link-url-loader'], styles['animated-background'])\n                }\n              >\n                facebook.com\n              </span>\n            </div>\n            <div className={styles['link-data-loader']}>\n              <div className={(styles.p1, styles['animated-background'])}>\n                Shashank Shekhar\n              </div>\n              <div className={(styles.p2, styles['animated-background'])}>\n                This is some description\n              </div>\n            </div>\n          </div>\n          <div className={styles['link-image-loader']}>\n            <div className={styles.img} />\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div\n          className={styles['link-preview-section']}\n          style={style}\n          onClick={onClick}\n        >\n          <div className={styles['link-description']}>\n            <div className={styles.domain}>\n              <span className={styles['link-url']}>{preview.domain}</span>\n            </div>\n            <div className={styles['link-data']}>\n              <div className={styles['link-title']}>{preview.title}</div>\n              <div className={styles['link-description']}>\n                {preview.description}\n              </div>\n            </div>\n          </div>\n          <div className={styles['link-image']}>\n            {preview.img && <img src={preview.img} alt={preview.description} />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nLinkPreview.defaultProps = {\n  onClick: () => {},\n  width: '90%',\n  maxWidth: '700px',\n  marginTop: '18px',\n  marginBottom: '18px',\n  marginRight: 'auto',\n  marginLeft: 'auto'\n}\n\nLinkPreview.propTyps = {\n  url: isValidUrlProp,\n  onClick: PropTypes.func,\n  render: PropTypes.func,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  marginTop: PropTypes.string,\n  marginBottom: PropTypes.string,\n  marginRight: PropTypes.string,\n  marginLeft: PropTypes.string\n}\n\nexport default LinkPreview\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}