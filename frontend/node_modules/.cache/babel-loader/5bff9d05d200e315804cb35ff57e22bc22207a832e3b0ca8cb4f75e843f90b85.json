{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { handleIsVisible } from \"../HandleTasks/handleIsVisible\"; // Quando são campos que têm mais do que um path (tipo quantity, duration, etc)\n// só uso um deles para assinalar o campo\n\nvar handleCardinalityDataType = function handleCardinalityDataType(item, pathArray, array, professionalTasks) {\n  var isVisible;\n  if (!item.TaskVisible) {\n    isVisible = false;\n  } else {\n    isVisible = handleIsVisible(item, professionalTasks);\n  }\n  if (isVisible) {\n    if (item.dataType === \"DV_TEXT\" || item.dataType === \"DV_BOOLEAN\" || item.dataType === \"DV_CODED_TEXT\" || item.dataType === \"DV_DATE\" || item.dataType === \"DV_TIME\" || item.dataType === \"DV_COUNT\" || item.dataType === \"DV_IDENTIFIER\" || item.dataType === \"DV_MULTIMEDIA\" || item.dataType === \"DV_ORDINAL\" || item.dataType === \"DV_PROPORTION\") {\n      var value = [].concat(_toConsumableArray(array), [\"value\"]);\n      return pathArray.concat(value).join(\"-\");\n    } else if (item.dataType === \"DV_QUANTITY\" || item.dataType === \"DV_DURATION\") {\n      var _value = [].concat(_toConsumableArray(array), [\"value\", \"value\"]);\n      return pathArray.concat(_value).join(\"-\");\n    } else if (item.dataType === \"DV_DATE_TIME\") {\n      var date = [].concat(_toConsumableArray(array), [\"value\", \"date\"]);\n      return pathArray.concat(date).join(\"-\");\n    } else if (item.dataType === \"DV_INTERVAL<DV_DATE>\" || item.dataType === \"DV_INTERVAL<DV_TIME>\" || item.dataType === \"DV_INTERVAL<DV_COUNT>\") {\n      var start = [].concat(_toConsumableArray(array), [\"value\", \"start\"]);\n      return pathArray.concat(start).join(\"-\");\n    } else if (item.dataType === \"DV_INTERVAL<DV_DATE_TIME>\") {\n      var startDate = [].concat(_toConsumableArray(array), [\"value\", \"date\", \"start\"]);\n      return pathArray.concat(startDate).join(\"-\");\n    } else if (item.dataType === \"DV_INTERVAL<DV_QUANTITY>\") {\n      var _start = [].concat(_toConsumableArray(array), [\"value\", \"value\", \"start\"]);\n      return pathArray.concat(_start).join(\"-\");\n    }\n  }\n  return;\n};\nvar handleCardinalityAny = function handleCardinalityAny(item, pathArray, array, professionalTasks) {\n  var paths = item.map(function (subItem, index) {\n    return handleCardinalityDataType(subItem, pathArray, [].concat(_toConsumableArray(array), [index]), professionalTasks);\n  });\n  return paths;\n};\nvar handleCardinalityItem = function handleCardinalityItem(item, pathArray, array, professionalTasks) {\n  var paths = item.items.map(function (subItem, subItemIndex) {\n    if (subItem.data_type === \"Title\") {\n      return handleCardinalityItem(subItem, pathArray, [].concat(_toConsumableArray(array), [\"items\", subItemIndex]), professionalTasks);\n    } else {\n      if (Array.isArray(subItem)) {\n        return handleCardinalityAny(subItem, pathArray, [].concat(_toConsumableArray(array), [\"items\", subItemIndex]), professionalTasks);\n      } else {\n        return handleCardinalityDataType(subItem, pathArray, [].concat(_toConsumableArray(array), [\"items\", subItemIndex]), professionalTasks);\n      }\n    }\n  });\n  return paths;\n};\nvar handleCardinality = function handleCardinality(item, pathArray, professionalTasks) {\n  var itemsPaths = item.items.map(function (item, index) {\n    if (item.data_type === \"Title\") {\n      return handleCardinalityItem(item, pathArray, [\"items\", index], professionalTasks);\n    } else {\n      if (Array.isArray(item)) {\n        return handleCardinalityAny(item, pathArray, [\"items\", index], professionalTasks);\n      } else {\n        return handleCardinalityDataType(item, pathArray, [\"items\", index], professionalTasks);\n      }\n    }\n  });\n  var processed = itemsPaths.toString().split(\",\");\n  return processed.filter(function (x) {\n    return x !== \"\";\n  });\n};\nexport { handleCardinality };","map":{"version":3,"names":["handleIsVisible","handleCardinalityDataType","item","pathArray","array","professionalTasks","isVisible","TaskVisible","dataType","value","concat","join","date","start","startDate","handleCardinalityAny","paths","map","subItem","index","handleCardinalityItem","items","subItemIndex","data_type","Array","isArray","handleCardinality","itemsPaths","processed","toString","split","filter","x"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/assets/functions/HandleCardinality/HandleCardinality.js"],"sourcesContent":["import { handleIsVisible } from \"../HandleTasks/handleIsVisible\"; // Quando são campos que têm mais do que um path (tipo quantity, duration, etc)\r\n// só uso um deles para assinalar o campo\r\n\r\nconst handleCardinalityDataType = (item, pathArray, array, professionalTasks) => {\r\n  let isVisible;\r\n\r\n  if (!item.TaskVisible) {\r\n    isVisible = false;\r\n  } else {\r\n    isVisible = handleIsVisible(item, professionalTasks);\r\n  }\r\n\r\n  if (isVisible) {\r\n    if (item.dataType === \"DV_TEXT\" || item.dataType === \"DV_BOOLEAN\" || item.dataType === \"DV_CODED_TEXT\" || item.dataType === \"DV_DATE\" || item.dataType === \"DV_TIME\" || item.dataType === \"DV_COUNT\" || item.dataType === \"DV_IDENTIFIER\" || item.dataType === \"DV_MULTIMEDIA\" || item.dataType === \"DV_ORDINAL\" || item.dataType === \"DV_PROPORTION\") {\r\n      let value = [...array, \"value\"];\r\n      return pathArray.concat(value).join(\"-\");\r\n    } else if (item.dataType === \"DV_QUANTITY\" || item.dataType === \"DV_DURATION\") {\r\n      let value = [...array, \"value\", \"value\"];\r\n      return pathArray.concat(value).join(\"-\");\r\n    } else if (item.dataType === \"DV_DATE_TIME\") {\r\n      let date = [...array, \"value\", \"date\"];\r\n      return pathArray.concat(date).join(\"-\");\r\n    } else if (item.dataType === \"DV_INTERVAL<DV_DATE>\" || item.dataType === \"DV_INTERVAL<DV_TIME>\" || item.dataType === \"DV_INTERVAL<DV_COUNT>\") {\r\n      let start = [...array, \"value\", \"start\"];\r\n      return pathArray.concat(start).join(\"-\");\r\n    } else if (item.dataType === \"DV_INTERVAL<DV_DATE_TIME>\") {\r\n      let startDate = [...array, \"value\", \"date\", \"start\"];\r\n      return pathArray.concat(startDate).join(\"-\");\r\n    } else if (item.dataType === \"DV_INTERVAL<DV_QUANTITY>\") {\r\n      let start = [...array, \"value\", \"value\", \"start\"];\r\n      return pathArray.concat(start).join(\"-\");\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nconst handleCardinalityAny = (item, pathArray, array, professionalTasks) => {\r\n  let paths = item.map((subItem, index) => {\r\n    return handleCardinalityDataType(subItem, pathArray, [...array, index], professionalTasks);\r\n  });\r\n  return paths;\r\n};\r\n\r\nconst handleCardinalityItem = (item, pathArray, array, professionalTasks) => {\r\n  let paths = item.items.map((subItem, subItemIndex) => {\r\n    if (subItem.data_type === \"Title\") {\r\n      return handleCardinalityItem(subItem, pathArray, [...array, \"items\", subItemIndex], professionalTasks);\r\n    } else {\r\n      if (Array.isArray(subItem)) {\r\n        return handleCardinalityAny(subItem, pathArray, [...array, \"items\", subItemIndex], professionalTasks);\r\n      } else {\r\n        return handleCardinalityDataType(subItem, pathArray, [...array, \"items\", subItemIndex], professionalTasks);\r\n      }\r\n    }\r\n  });\r\n  return paths;\r\n};\r\n\r\nconst handleCardinality = (item, pathArray, professionalTasks) => {\r\n  let itemsPaths = item.items.map((item, index) => {\r\n    if (item.data_type === \"Title\") {\r\n      return handleCardinalityItem(item, pathArray, [\"items\", index], professionalTasks);\r\n    } else {\r\n      if (Array.isArray(item)) {\r\n        return handleCardinalityAny(item, pathArray, [\"items\", index], professionalTasks);\r\n      } else {\r\n        return handleCardinalityDataType(item, pathArray, [\"items\", index], professionalTasks);\r\n      }\r\n    }\r\n  });\r\n  const processed = itemsPaths.toString().split(\",\");\r\n  return processed.filter(x => x !== \"\");\r\n};\r\n\r\nexport { handleCardinality };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}