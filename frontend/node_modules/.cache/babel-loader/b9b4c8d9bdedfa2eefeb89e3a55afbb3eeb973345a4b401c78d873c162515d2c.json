{"ast":null,"code":"import React from \"react\";\nimport QuantityRange from \"../../../../../components/FormDesigner/Datatypes/QuantityRange/QuantityRange\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nconst buildQuantityRangeFormDesigner = (item, itemIndex, pathArray, setFieldValue, values, isAny, itemSection, initialValues, handleFormOrder, formOrder) => {\n  const isRM = pathArray[0] === \"rm\" ? true : false;\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  let arrayStart = [];\n  let arrayEnd = [];\n  let arrayUnit = [];\n  arrayStart.push(\"value\", \"value\", \"start\");\n  arrayEnd.push(\"value\", \"value\", \"end\");\n  arrayUnit.push(\"value\", \"unit\");\n  const pathLabelStart = pathArray.concat(arrayStart).join(\"-\");\n  const pathLabelEnd = pathArray.concat(arrayEnd).join(\"-\");\n  const pathLabelUnit = pathArray.concat(arrayUnit).join(\"-\");\n  buildInitialValueEditMode(item, pathLabelStart, initialValues);\n  buildInitialValueEditMode(item, pathLabelEnd, initialValues);\n  buildInitialValueEditMode(item, pathLabelUnit, initialValues);\n  let unitsList = [];\n  if (Array.isArray(item.units)) {\n    item.units.forEach(obj => {\n      unitsList.push(obj.unit);\n    });\n  } else {\n    unitsList.push(item.units.unit);\n  }\n  return /*#__PURE__*/React.createElement(QuantityRange, {\n    isRM: isRM,\n    data: isRM && item,\n    isSection: false,\n    groupID: item.groupID,\n    path: pathArray.join(\".\"),\n    handleFormOrder: handleFormOrder,\n    order: formOrder ? formOrder[pathArray.join(\".\")] : null,\n    item: item,\n    key: itemIndex,\n    isAny: isAny,\n    showLabel: !isAny || (formOrder ? firstAnyItem(formOrder, pathArray, isAny) : itemIndex === 0),\n    startValue: values[pathLabelStart],\n    endValue: values[pathLabelEnd],\n    unitValue: values[pathLabelUnit],\n    onQuantityRangeChange: setFieldValue,\n    label: label,\n    unitsList: unitsList,\n    pathLabelStart: pathLabelStart,\n    pathLabelEnd: pathLabelEnd,\n    pathLabelUnit: pathLabelUnit,\n    optional: item.occurrences.lowerOccurrences === 0,\n    sectionOccurrence: itemSection[itemSection.length - 1],\n    description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n  });\n};\nexport { buildQuantityRangeFormDesigner };","map":{"version":3,"names":["React","QuantityRange","buildInitialValueEditMode","firstAnyItem","buildQuantityRangeFormDesigner","item","itemIndex","pathArray","setFieldValue","values","isAny","itemSection","initialValues","handleFormOrder","formOrder","isRM","label","itemName","node","text","arrayStart","arrayEnd","arrayUnit","push","pathLabelStart","concat","join","pathLabelEnd","pathLabelUnit","unitsList","Array","isArray","units","forEach","obj","unit","createElement","data","isSection","groupID","path","order","key","showLabel","startValue","endValue","unitValue","onQuantityRangeChange","optional","occurrences","lowerOccurrences","sectionOccurrence","length","description"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemDesignerMode/BuildQuantityRange/BuildQuantityRange.js"],"sourcesContent":["import React from \"react\";\nimport QuantityRange from \"../../../../../components/FormDesigner/Datatypes/QuantityRange/QuantityRange\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\n\nconst buildQuantityRangeFormDesigner = (item, itemIndex, pathArray, setFieldValue, values, isAny, itemSection, initialValues, handleFormOrder, formOrder) => {\n  const isRM = pathArray[0] === \"rm\" ? true : false;\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  let arrayStart = [];\n  let arrayEnd = [];\n  let arrayUnit = [];\n  arrayStart.push(\"value\", \"value\", \"start\");\n  arrayEnd.push(\"value\", \"value\", \"end\");\n  arrayUnit.push(\"value\", \"unit\");\n  const pathLabelStart = pathArray.concat(arrayStart).join(\"-\");\n  const pathLabelEnd = pathArray.concat(arrayEnd).join(\"-\");\n  const pathLabelUnit = pathArray.concat(arrayUnit).join(\"-\");\n  buildInitialValueEditMode(item, pathLabelStart, initialValues);\n  buildInitialValueEditMode(item, pathLabelEnd, initialValues);\n  buildInitialValueEditMode(item, pathLabelUnit, initialValues);\n  let unitsList = [];\n\n  if (Array.isArray(item.units)) {\n    item.units.forEach(obj => {\n      unitsList.push(obj.unit);\n    });\n  } else {\n    unitsList.push(item.units.unit);\n  }\n\n  return /*#__PURE__*/React.createElement(QuantityRange, {\n    isRM: isRM,\n    data: isRM && item,\n    isSection: false,\n    groupID: item.groupID,\n    path: pathArray.join(\".\"),\n    handleFormOrder: handleFormOrder,\n    order: formOrder ? formOrder[pathArray.join(\".\")] : null,\n    item: item,\n    key: itemIndex,\n    isAny: isAny,\n    showLabel: !isAny || (formOrder ? firstAnyItem(formOrder, pathArray, isAny) : itemIndex === 0),\n    startValue: values[pathLabelStart],\n    endValue: values[pathLabelEnd],\n    unitValue: values[pathLabelUnit],\n    onQuantityRangeChange: setFieldValue,\n    label: label,\n    unitsList: unitsList,\n    pathLabelStart: pathLabelStart,\n    pathLabelEnd: pathLabelEnd,\n    pathLabelUnit: pathLabelUnit,\n    optional: item.occurrences.lowerOccurrences === 0,\n    sectionOccurrence: itemSection[itemSection.length - 1],\n    description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n  });\n};\n\nexport { buildQuantityRangeFormDesigner };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}