{"ast":null,"code":"import { isDefined } from \"./isDefined\";\nconst handleRequiredValidation = (fieldValue, values, itemSection) => {\n  // Se o lowerOccurrences === 0, então só passa a ser um campo obrigatório quando pelo menos um\n  // dos campos da sua secção está preenchido\n  if (itemSection[itemSection.length - 1] === 0) {\n    let isRequired = false; // Não se liga aos últimos dois elementos da lista pois correspondem ao nome da secção e ao lowerOccurrences\n\n    itemSection.forEach((path, index) => {\n      if (index !== itemSection.length - 1 && index !== itemSection.length - 2) {\n        const value = values[path]; // Verificar o campo está preenchido\n\n        let checkIsDefined = isDefined(value);\n        if (checkIsDefined) {\n          isRequired = true;\n        }\n      }\n    });\n    if (isRequired) {\n      return isDefined(fieldValue);\n    } else {\n      return true;\n    }\n  } else {\n    // Se o lowerOccurrences !== 0 (1, 2, etc.), então o campo é obrigatório\n    // independentemente do resto porque a secção deve ser preenchida (occorrer pelo menos uma vez)\n    return isDefined(fieldValue);\n  }\n};\nexport { handleRequiredValidation };","map":{"version":3,"names":["isDefined","handleRequiredValidation","fieldValue","values","itemSection","length","isRequired","forEach","path","index","value","checkIsDefined"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/assets/functions/HandleSectionValidation/handleRequiredValidation.js"],"sourcesContent":["import { isDefined } from \"./isDefined\";\r\n\r\nconst handleRequiredValidation = (fieldValue, values, itemSection) => {\r\n  // Se o lowerOccurrences === 0, então só passa a ser um campo obrigatório quando pelo menos um\r\n  // dos campos da sua secção está preenchido\r\n  if (itemSection[itemSection.length - 1] === 0) {\r\n    let isRequired = false; // Não se liga aos últimos dois elementos da lista pois correspondem ao nome da secção e ao lowerOccurrences\r\n\r\n    itemSection.forEach((path, index) => {\r\n      if (index !== itemSection.length - 1 && index !== itemSection.length - 2) {\r\n        const value = values[path]; // Verificar o campo está preenchido\r\n\r\n        let checkIsDefined = isDefined(value);\r\n\r\n        if (checkIsDefined) {\r\n          isRequired = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (isRequired) {\r\n      return isDefined(fieldValue);\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    // Se o lowerOccurrences !== 0 (1, 2, etc.), então o campo é obrigatório\r\n    // independentemente do resto porque a secção deve ser preenchida (occorrer pelo menos uma vez)\r\n    return isDefined(fieldValue);\r\n  }\r\n};\r\n\r\nexport { handleRequiredValidation };"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AAEvC,MAAMC,wBAAwB,GAAG,CAACC,UAAU,EAAEC,MAAM,EAAEC,WAAW,KAAK;EACpE;EACA;EACA,IAAIA,WAAW,CAACA,WAAW,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;IAC7C,IAAIC,UAAU,GAAG,KAAK,CAAC,CAAC;;IAExBF,WAAW,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACnC,IAAIA,KAAK,KAAKL,WAAW,CAACC,MAAM,GAAG,CAAC,IAAII,KAAK,KAAKL,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;QACxE,MAAMK,KAAK,GAAGP,MAAM,CAACK,IAAI,CAAC,CAAC,CAAC;;QAE5B,IAAIG,cAAc,GAAGX,SAAS,CAACU,KAAK,CAAC;QAErC,IAAIC,cAAc,EAAE;UAClBL,UAAU,GAAG,IAAI;QACnB;MACF;IACF,CAAC,CAAC;IAEF,IAAIA,UAAU,EAAE;MACd,OAAON,SAAS,CAACE,UAAU,CAAC;IAC9B,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,MAAM;IACL;IACA;IACA,OAAOF,SAAS,CAACE,UAAU,CAAC;EAC9B;AACF,CAAC;AAED,SAASD,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}