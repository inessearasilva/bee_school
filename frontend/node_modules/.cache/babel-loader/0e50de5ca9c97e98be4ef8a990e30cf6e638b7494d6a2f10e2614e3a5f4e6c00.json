{"ast":null,"code":"import _slicedToArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nexport var DlmContext = /*#__PURE__*/React.createContext(null);\nexport default function DlmContextProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDlmFinished = _useState2[0],\n    setIsDlmFinished = _useState2[1];\n  var updateIsDlmFinished = useCallback(function (status) {\n    setIsDlmFinished(status);\n  }, []);\n  var store = useMemo(function () {\n    return {\n      isDlmFinished: isDlmFinished,\n      updateIsDlmFinished: updateIsDlmFinished\n    };\n  }, [isDlmFinished, updateIsDlmFinished]);\n  return /*#__PURE__*/React.createElement(DlmContext.Provider, {\n    value: store\n  }, children);\n} // descomentar quando fizer a conversão do formEditMode para Hooks\n// remover o export do DlmContext e removê-lo do ficheiro ProviderCombinedContext\n// depois basta chamar const { updateIsDlmFinished } = useDlmContext();\n// e já posso adicionar às dependências do UseEffect sem criar ciclo infinito\n// export const useDlmContext = () => {\n//     const context = useContext(DlmContext);\n//     return context;\n// };","map":{"version":3,"names":["React","useCallback","useMemo","useState","DlmContext","createContext","DlmContextProvider","children","isDlmFinished","setIsDlmFinished","updateIsDlmFinished","status","store","createElement","Provider","value"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/contexts/DlmContext.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\r\nexport const DlmContext = /*#__PURE__*/React.createContext(null);\r\nexport default function DlmContextProvider({\r\n  children\r\n}) {\r\n  const [isDlmFinished, setIsDlmFinished] = useState(true);\r\n  const updateIsDlmFinished = useCallback(status => {\r\n    setIsDlmFinished(status);\r\n  }, []);\r\n  const store = useMemo(() => ({\r\n    isDlmFinished,\r\n    updateIsDlmFinished\r\n  }), [isDlmFinished, updateIsDlmFinished]);\r\n  return /*#__PURE__*/React.createElement(DlmContext.Provider, {\r\n    value: store\r\n  }, children);\r\n} // descomentar quando fizer a conversão do formEditMode para Hooks\r\n// remover o export do DlmContext e removê-lo do ficheiro ProviderCombinedContext\r\n// depois basta chamar const { updateIsDlmFinished } = useDlmContext();\r\n// e já posso adicionar às dependências do UseEffect sem criar ciclo infinito\r\n// export const useDlmContext = () => {\r\n//     const context = useContext(DlmContext);\r\n//     return context;\r\n// };"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,OAAO,IAAMC,UAAU,GAAG,aAAaJ,KAAK,CAACK,aAAa,CAAC,IAAI,CAAC;AAChE,eAAe,SAASC,kBAAkB,OAEvC;EAAA,IADDC,QAAQ,QAARA,QAAQ;EAER,gBAA0CJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDK,aAAa;IAAEC,gBAAgB;EACtC,IAAMC,mBAAmB,GAAGT,WAAW,CAAC,UAAAU,MAAM,EAAI;IAChDF,gBAAgB,CAACE,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,KAAK,GAAGV,OAAO,CAAC;IAAA,OAAO;MAC3BM,aAAa,EAAbA,aAAa;MACbE,mBAAmB,EAAnBA;IACF,CAAC;EAAA,CAAC,EAAE,CAACF,aAAa,EAAEE,mBAAmB,CAAC,CAAC;EACzC,OAAO,aAAaV,KAAK,CAACa,aAAa,CAACT,UAAU,CAACU,QAAQ,EAAE;IAC3DC,KAAK,EAAEH;EACT,CAAC,EAAEL,QAAQ,CAAC;AACd,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}