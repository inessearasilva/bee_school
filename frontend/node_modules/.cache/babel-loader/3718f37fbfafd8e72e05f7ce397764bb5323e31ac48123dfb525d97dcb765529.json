{"ast":null,"code":"const buildDateTimeRangeInitialValue = (item, pathLabel, initialValues) => {\n  let pathLabelArray = pathLabel.split(\"-\");\n  if (pathLabelArray[pathLabelArray.length - 1] === \"end\" && pathLabelArray[pathLabelArray.length - 2] === \"date\") {\n    let endDate = item.value.date.end === null ? \"\" : item.value.date.end;\n    initialValues[pathLabel] = endDate;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\" && pathLabelArray[pathLabelArray.length - 2] === \"date\") {\n    let startDate = item.value.date.start === null ? \"\" : item.value.date.start;\n    initialValues[pathLabel] = startDate;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\" && pathLabelArray[pathLabelArray.length - 2] === \"time\") {\n    let startTime = item.value.time.start === null ? \"\" : item.value.time.start;\n    initialValues[pathLabel] = startTime;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"end\" && pathLabelArray[pathLabelArray.length - 2] === \"time\") {\n    let endTime = item.value.time.end === null ? \"\" : item.value.time.end;\n    initialValues[pathLabel] = endTime;\n  }\n};\nexport { buildDateTimeRangeInitialValue };","map":{"version":3,"names":["buildDateTimeRangeInitialValue","item","pathLabel","initialValues","pathLabelArray","split","length","endDate","value","date","end","startDate","start","startTime","time","endTime"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/FormInitialValues/BuildDateTimeRangeInitialValue/BuildDateTimeRangeInitialValue.js"],"sourcesContent":["const buildDateTimeRangeInitialValue = (item, pathLabel, initialValues) => {\n  let pathLabelArray = pathLabel.split(\"-\");\n\n  if (pathLabelArray[pathLabelArray.length - 1] === \"end\" && pathLabelArray[pathLabelArray.length - 2] === \"date\") {\n    let endDate = item.value.date.end === null ? \"\" : item.value.date.end;\n    initialValues[pathLabel] = endDate;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\" && pathLabelArray[pathLabelArray.length - 2] === \"date\") {\n    let startDate = item.value.date.start === null ? \"\" : item.value.date.start;\n    initialValues[pathLabel] = startDate;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"start\" && pathLabelArray[pathLabelArray.length - 2] === \"time\") {\n    let startTime = item.value.time.start === null ? \"\" : item.value.time.start;\n    initialValues[pathLabel] = startTime;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"end\" && pathLabelArray[pathLabelArray.length - 2] === \"time\") {\n    let endTime = item.value.time.end === null ? \"\" : item.value.time.end;\n    initialValues[pathLabel] = endTime;\n  }\n};\n\nexport { buildDateTimeRangeInitialValue };"],"mappings":"AAAA,MAAMA,8BAA8B,GAAG,CAACC,IAAI,EAAEC,SAAS,EAAEC,aAAa,KAAK;EACzE,IAAIC,cAAc,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC;EAEzC,IAAID,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,KAAK,IAAIF,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;IAC/G,IAAIC,OAAO,GAAGN,IAAI,CAACO,KAAK,CAACC,IAAI,CAACC,GAAG,KAAK,IAAI,GAAG,EAAE,GAAGT,IAAI,CAACO,KAAK,CAACC,IAAI,CAACC,GAAG;IACrEP,aAAa,CAACD,SAAS,CAAC,GAAGK,OAAO;EACpC,CAAC,MAAM,IAAIH,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,IAAIF,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;IACxH,IAAIK,SAAS,GAAGV,IAAI,CAACO,KAAK,CAACC,IAAI,CAACG,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGX,IAAI,CAACO,KAAK,CAACC,IAAI,CAACG,KAAK;IAC3ET,aAAa,CAACD,SAAS,CAAC,GAAGS,SAAS;EACtC,CAAC,MAAM,IAAIP,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,IAAIF,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;IACxH,IAAIO,SAAS,GAAGZ,IAAI,CAACO,KAAK,CAACM,IAAI,CAACF,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGX,IAAI,CAACO,KAAK,CAACM,IAAI,CAACF,KAAK;IAC3ET,aAAa,CAACD,SAAS,CAAC,GAAGW,SAAS;EACtC,CAAC,MAAM,IAAIT,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,KAAK,IAAIF,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;IACtH,IAAIS,OAAO,GAAGd,IAAI,CAACO,KAAK,CAACM,IAAI,CAACJ,GAAG,KAAK,IAAI,GAAG,EAAE,GAAGT,IAAI,CAACO,KAAK,CAACM,IAAI,CAACJ,GAAG;IACrEP,aAAa,CAACD,SAAS,CAAC,GAAGa,OAAO;EACpC;AACF,CAAC;AAED,SAASf,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}