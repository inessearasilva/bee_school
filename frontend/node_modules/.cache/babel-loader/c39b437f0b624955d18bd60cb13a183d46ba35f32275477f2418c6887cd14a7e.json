{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mediaSetup = void 0;\nconst fields_1 = __importDefault(require(\"./fields\"));\nconst utils_1 = require(\"./utils\");\nconst mediaMapperTwitterImage = item => ({\n  alt: item[3],\n  height: item[2],\n  url: item[0],\n  width: item[1]\n});\nconst mediaMapperTwitterPlayer = item => ({\n  height: item[2],\n  stream: item[3],\n  url: item[0],\n  width: item[1]\n});\nconst mediaMapperMusicSong = item => ({\n  disc: item[2],\n  track: item[1],\n  url: item[0]\n});\nconst mediaMapper = item => ({\n  height: item[2],\n  type: item[3],\n  url: item[0],\n  width: item[1]\n});\nconst mediaSorter = (a, b) => {\n  if (!(a.url && b.url)) {\n    return 0;\n  }\n  const aRes = a.url.match(/\\.(\\w{2,5})$/);\n  const aExt = aRes && aRes[1].toLowerCase() || null;\n  const bRes = b.url.match(/\\.(\\w{2,5})$/);\n  const bExt = bRes && bRes[1].toLowerCase() || null;\n  if (aExt === 'gif' && bExt !== 'gif') {\n    return -1;\n  }\n  if (aExt !== 'gif' && bExt === 'gif') {\n    return 1;\n  }\n  return Math.max(b.width || 0, b.height || 0) - Math.max(a.width || 0, a.height || 0);\n};\nconst mediaSorterMusicSong = (a, b) => {\n  if (!(a.track && b.track)) {\n    return 0;\n  }\n  if ((a.disc || 0) > (b.disc || 0)) {\n    return 1;\n  }\n  if ((a.disc || 0) < (b.disc || 0)) {\n    return -1;\n  }\n  return a.track - b.track;\n};\n// lodash zip replacement\nconst zip = function (array) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (array === undefined) return [];\n  return array.map((value, idx) => [value, ...args.map(arr => arr[idx])]);\n};\n/**\n * formats the multiple media values\n *\n * @param {object} ogObject - the current ogObject\n * @param {object} options - options for ogs\n * @return {object} object with ogs results with updated media values\n *\n */\nfunction mediaSetup(ogObject) {\n  // sets ogImage property/width/height/type to empty array if one these exists\n  if (ogObject.ogImageSecureURL || ogObject.ogImageURL || ogObject.ogImageProperty || ogObject.ogImageWidth || ogObject.ogImageHeight || ogObject.ogImageType) {\n    ogObject.ogImageSecureURL = ogObject.ogImageSecureURL ? ogObject.ogImageSecureURL : [];\n    ogObject.ogImageURL = ogObject.ogImageURL ? ogObject.ogImageURL : [];\n    ogObject.ogImageProperty = ogObject.ogImageProperty ? ogObject.ogImageProperty : [];\n    // set ogImageProperty to ogImageSecureURL if it exists\n    // eslint-disable-next-line max-len\n    ogObject.ogImageProperty = ogObject.ogImageSecureURL.length !== 0 ? ogObject.ogImageSecureURL : ogObject.ogImageProperty;\n    // fall back to ogImageURL if ogImageProperty isn't set\n    ogObject.ogImageProperty = ogObject.ogImageProperty.length !== 0 ? ogObject.ogImageProperty : ogObject.ogImageURL;\n    ogObject.ogImageWidth = ogObject.ogImageWidth ? ogObject.ogImageWidth : [];\n    ogObject.ogImageHeight = ogObject.ogImageHeight ? ogObject.ogImageHeight : [];\n    ogObject.ogImageType = ogObject.ogImageType ? ogObject.ogImageType : [];\n  }\n  // format images and limit to 10\n  const ogImages = zip(ogObject.ogImageProperty, ogObject.ogImageWidth, ogObject.ogImageHeight, ogObject.ogImageType).map(mediaMapper).filter(value => value.url !== undefined && value.url !== '').filter((value, index) => index < 10).sort(mediaSorter);\n  // sets ogVideo property/width/height/type to empty array if one these exists\n  if (ogObject.ogVideoProperty || ogObject.ogVideoWidth || ogObject.ogVideoHeight || ogObject.ogVideoType) {\n    ogObject.ogVideoProperty = ogObject.ogVideoProperty ? ogObject.ogVideoProperty : [];\n    ogObject.ogVideoWidth = ogObject.ogVideoWidth ? ogObject.ogVideoWidth : [];\n    ogObject.ogVideoHeight = ogObject.ogVideoHeight ? ogObject.ogVideoHeight : [];\n    ogObject.ogVideoType = ogObject.ogVideoType ? ogObject.ogVideoType : [];\n  }\n  // format videos and limit to 10\n  const ogVideos = zip(ogObject.ogVideoProperty, ogObject.ogVideoWidth, ogObject.ogVideoHeight, ogObject.ogVideoType).map(mediaMapper).filter(value => value.url !== undefined && value.url !== '').filter((value, index) => index < 10).sort(mediaSorter);\n  // sets twitter image src/property/width/height/alt to empty array if one these exists\n  if (ogObject.twitterImageSrc || ogObject.twitterImageProperty || ogObject.twitterImageWidth || ogObject.twitterImageHeight || ogObject.twitterImageAlt) {\n    ogObject.twitterImageSrc = ogObject.twitterImageSrc ? ogObject.twitterImageSrc : [];\n    // eslint-disable-next-line max-len\n    ogObject.twitterImageProperty = ogObject.twitterImageProperty ? ogObject.twitterImageProperty : ogObject.twitterImageSrc; // deafult to twitterImageSrc\n    ogObject.twitterImageWidth = ogObject.twitterImageWidth ? ogObject.twitterImageWidth : [];\n    ogObject.twitterImageHeight = ogObject.twitterImageHeight ? ogObject.twitterImageHeight : [];\n    ogObject.twitterImageAlt = ogObject.twitterImageAlt ? ogObject.twitterImageAlt : [];\n  }\n  // format twitter images and limit to 10\n  const twitterImages = zip(ogObject.twitterImageProperty, ogObject.twitterImageWidth, ogObject.twitterImageHeight, ogObject.twitterImageAlt).map(mediaMapperTwitterImage).filter(value => value.url !== undefined && value.url !== '').filter((value, index) => index < 10).sort(mediaSorter);\n  // sets twitter property/width/height/stream to empty array if one these exists\n  if (ogObject.twitterPlayerProperty || ogObject.twitterPlayerWidth || ogObject.twitterPlayerHeight || ogObject.twitterPlayerStream) {\n    ogObject.twitterPlayerProperty = ogObject.twitterPlayerProperty ? ogObject.twitterPlayerProperty : [];\n    ogObject.twitterPlayerWidth = ogObject.twitterPlayerWidth ? ogObject.twitterPlayerWidth : [];\n    ogObject.twitterPlayerHeight = ogObject.twitterPlayerHeight ? ogObject.twitterPlayerHeight : [];\n    ogObject.twitterPlayerStream = ogObject.twitterPlayerStream ? ogObject.twitterPlayerStream : [];\n  }\n  // format twitter player and limit to 10\n  const twitterPlayers = zip(ogObject.twitterPlayerProperty, ogObject.twitterPlayerWidth, ogObject.twitterPlayerHeight, ogObject.twitterPlayerStream).map(mediaMapperTwitterPlayer).filter(value => value.url !== undefined && value.url !== '').filter((value, index) => index < 10).sort(mediaSorter);\n  // sets music property/songTrack/songDisc to empty array if one these exists\n  if (ogObject.musicSongProperty || ogObject.musicSongTrack || ogObject.musicSongDisc || ogObject.musicSongUrl) {\n    ogObject.musicSongUrl = ogObject.musicSongUrl ? ogObject.musicSongUrl : [];\n    ogObject.musicSongProperty = ogObject.musicSongProperty ? ogObject.musicSongProperty : ogObject.musicSongUrl; // deafult to musicSongUrl\n    ogObject.musicSongTrack = ogObject.musicSongTrack ? ogObject.musicSongTrack : [];\n    ogObject.musicSongDisc = ogObject.musicSongDisc ? ogObject.musicSongDisc : [];\n  }\n  // format music songs and limit to 10\n  const musicSongs = zip(ogObject.musicSongProperty, ogObject.musicSongTrack, ogObject.musicSongDisc).map(mediaMapperMusicSong).filter(value => value.url !== undefined && value.url !== '').filter((value, index) => index < 10).sort(mediaSorterMusicSong);\n  // remove old values since everything will live under the main property\n  fields_1.default.filter(item => item.multiple && item.fieldName && item.fieldName.match('(ogImage|ogVideo|twitter|musicSong).*')).forEach(item => {\n    delete ogObject[item.fieldName];\n  });\n  if (ogImages.length) ogObject.ogImage = ogImages;\n  if (ogVideos.length) ogObject.ogVideo = ogVideos;\n  if (twitterImages.length) ogObject.twitterImage = twitterImages;\n  if (twitterPlayers.length) ogObject.twitterPlayer = twitterPlayers;\n  if (musicSongs.length) ogObject.musicSong = musicSongs;\n  // removes any undefs\n  ogObject = (0, utils_1.removeNestedUndefinedValues)(ogObject);\n  return ogObject;\n}\nexports.mediaSetup = mediaSetup;\nexports.default = mediaSetup;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","mediaSetup","fields_1","require","utils_1","mediaMapperTwitterImage","item","alt","height","url","width","mediaMapperTwitterPlayer","stream","mediaMapperMusicSong","disc","track","mediaMapper","type","mediaSorter","a","b","aRes","match","aExt","toLowerCase","bRes","bExt","Math","max","mediaSorterMusicSong","zip","array","args","undefined","map","idx","arr","ogObject","ogImageSecureURL","ogImageURL","ogImageProperty","ogImageWidth","ogImageHeight","ogImageType","length","ogImages","filter","index","sort","ogVideoProperty","ogVideoWidth","ogVideoHeight","ogVideoType","ogVideos","twitterImageSrc","twitterImageProperty","twitterImageWidth","twitterImageHeight","twitterImageAlt","twitterImages","twitterPlayerProperty","twitterPlayerWidth","twitterPlayerHeight","twitterPlayerStream","twitterPlayers","musicSongProperty","musicSongTrack","musicSongDisc","musicSongUrl","musicSongs","default","multiple","fieldName","forEach","ogImage","ogVideo","twitterImage","twitterPlayer","musicSong","removeNestedUndefinedValues"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/node_modules/open-graph-scraper/dist/lib/media.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaSetup = void 0;\nconst fields_1 = __importDefault(require(\"./fields\"));\nconst utils_1 = require(\"./utils\");\nconst mediaMapperTwitterImage = (item) => ({\n    alt: item[3],\n    height: item[2],\n    url: item[0],\n    width: item[1],\n});\nconst mediaMapperTwitterPlayer = (item) => ({\n    height: item[2],\n    stream: item[3],\n    url: item[0],\n    width: item[1],\n});\nconst mediaMapperMusicSong = (item) => ({\n    disc: item[2],\n    track: item[1],\n    url: item[0],\n});\nconst mediaMapper = (item) => ({\n    height: item[2],\n    type: item[3],\n    url: item[0],\n    width: item[1],\n});\nconst mediaSorter = (a, b) => {\n    if (!(a.url && b.url)) {\n        return 0;\n    }\n    const aRes = a.url.match(/\\.(\\w{2,5})$/);\n    const aExt = (aRes && aRes[1].toLowerCase()) || null;\n    const bRes = b.url.match(/\\.(\\w{2,5})$/);\n    const bExt = (bRes && bRes[1].toLowerCase()) || null;\n    if (aExt === 'gif' && bExt !== 'gif') {\n        return -1;\n    }\n    if (aExt !== 'gif' && bExt === 'gif') {\n        return 1;\n    }\n    return Math.max(b.width || 0, b.height || 0) - Math.max(a.width || 0, a.height || 0);\n};\nconst mediaSorterMusicSong = (a, b) => {\n    if (!(a.track && b.track)) {\n        return 0;\n    }\n    if ((a.disc || 0) > (b.disc || 0)) {\n        return 1;\n    }\n    if ((a.disc || 0) < (b.disc || 0)) {\n        return -1;\n    }\n    return a.track - b.track;\n};\n// lodash zip replacement\nconst zip = (array, ...args) => {\n    if (array === undefined)\n        return [];\n    return array\n        .map((value, idx) => [value, ...args.map((arr) => arr[idx])]);\n};\n/**\n * formats the multiple media values\n *\n * @param {object} ogObject - the current ogObject\n * @param {object} options - options for ogs\n * @return {object} object with ogs results with updated media values\n *\n */\nfunction mediaSetup(ogObject) {\n    // sets ogImage property/width/height/type to empty array if one these exists\n    if (ogObject.ogImageSecureURL\n        || ogObject.ogImageURL\n        || ogObject.ogImageProperty\n        || ogObject.ogImageWidth\n        || ogObject.ogImageHeight\n        || ogObject.ogImageType) {\n        ogObject.ogImageSecureURL = ogObject.ogImageSecureURL ? ogObject.ogImageSecureURL : [];\n        ogObject.ogImageURL = ogObject.ogImageURL ? ogObject.ogImageURL : [];\n        ogObject.ogImageProperty = ogObject.ogImageProperty ? ogObject.ogImageProperty : [];\n        // set ogImageProperty to ogImageSecureURL if it exists\n        // eslint-disable-next-line max-len\n        ogObject.ogImageProperty = (ogObject.ogImageSecureURL.length !== 0) ? ogObject.ogImageSecureURL : ogObject.ogImageProperty;\n        // fall back to ogImageURL if ogImageProperty isn't set\n        ogObject.ogImageProperty = (ogObject.ogImageProperty.length !== 0) ? ogObject.ogImageProperty : ogObject.ogImageURL;\n        ogObject.ogImageWidth = ogObject.ogImageWidth ? ogObject.ogImageWidth : [];\n        ogObject.ogImageHeight = ogObject.ogImageHeight ? ogObject.ogImageHeight : [];\n        ogObject.ogImageType = ogObject.ogImageType ? ogObject.ogImageType : [];\n    }\n    // format images and limit to 10\n    const ogImages = zip(ogObject.ogImageProperty, ogObject.ogImageWidth, ogObject.ogImageHeight, ogObject.ogImageType)\n        .map(mediaMapper)\n        .filter((value) => value.url !== undefined && value.url !== '')\n        .filter((value, index) => index < 10)\n        .sort(mediaSorter);\n    // sets ogVideo property/width/height/type to empty array if one these exists\n    if (ogObject.ogVideoProperty || ogObject.ogVideoWidth || ogObject.ogVideoHeight || ogObject.ogVideoType) {\n        ogObject.ogVideoProperty = ogObject.ogVideoProperty ? ogObject.ogVideoProperty : [];\n        ogObject.ogVideoWidth = ogObject.ogVideoWidth ? ogObject.ogVideoWidth : [];\n        ogObject.ogVideoHeight = ogObject.ogVideoHeight ? ogObject.ogVideoHeight : [];\n        ogObject.ogVideoType = ogObject.ogVideoType ? ogObject.ogVideoType : [];\n    }\n    // format videos and limit to 10\n    const ogVideos = zip(ogObject.ogVideoProperty, ogObject.ogVideoWidth, ogObject.ogVideoHeight, ogObject.ogVideoType)\n        .map(mediaMapper)\n        .filter((value) => value.url !== undefined && value.url !== '')\n        .filter((value, index) => index < 10)\n        .sort(mediaSorter);\n    // sets twitter image src/property/width/height/alt to empty array if one these exists\n    if (ogObject.twitterImageSrc\n        || ogObject.twitterImageProperty\n        || ogObject.twitterImageWidth\n        || ogObject.twitterImageHeight\n        || ogObject.twitterImageAlt) {\n        ogObject.twitterImageSrc = ogObject.twitterImageSrc ? ogObject.twitterImageSrc : [];\n        // eslint-disable-next-line max-len\n        ogObject.twitterImageProperty = ogObject.twitterImageProperty ? ogObject.twitterImageProperty : ogObject.twitterImageSrc; // deafult to twitterImageSrc\n        ogObject.twitterImageWidth = ogObject.twitterImageWidth ? ogObject.twitterImageWidth : [];\n        ogObject.twitterImageHeight = ogObject.twitterImageHeight ? ogObject.twitterImageHeight : [];\n        ogObject.twitterImageAlt = ogObject.twitterImageAlt ? ogObject.twitterImageAlt : [];\n    }\n    // format twitter images and limit to 10\n    const twitterImages = zip(ogObject.twitterImageProperty, ogObject.twitterImageWidth, ogObject.twitterImageHeight, ogObject.twitterImageAlt)\n        .map(mediaMapperTwitterImage)\n        .filter((value) => value.url !== undefined && value.url !== '')\n        .filter((value, index) => index < 10)\n        .sort(mediaSorter);\n    // sets twitter property/width/height/stream to empty array if one these exists\n    if (ogObject.twitterPlayerProperty\n        || ogObject.twitterPlayerWidth\n        || ogObject.twitterPlayerHeight\n        || ogObject.twitterPlayerStream) {\n        ogObject.twitterPlayerProperty = ogObject.twitterPlayerProperty ? ogObject.twitterPlayerProperty : [];\n        ogObject.twitterPlayerWidth = ogObject.twitterPlayerWidth ? ogObject.twitterPlayerWidth : [];\n        ogObject.twitterPlayerHeight = ogObject.twitterPlayerHeight ? ogObject.twitterPlayerHeight : [];\n        ogObject.twitterPlayerStream = ogObject.twitterPlayerStream ? ogObject.twitterPlayerStream : [];\n    }\n    // format twitter player and limit to 10\n    const twitterPlayers = zip(ogObject.twitterPlayerProperty, ogObject.twitterPlayerWidth, ogObject.twitterPlayerHeight, ogObject.twitterPlayerStream).map(mediaMapperTwitterPlayer)\n        .filter((value) => value.url !== undefined && value.url !== '')\n        .filter((value, index) => index < 10)\n        .sort(mediaSorter);\n    // sets music property/songTrack/songDisc to empty array if one these exists\n    if (ogObject.musicSongProperty || ogObject.musicSongTrack || ogObject.musicSongDisc || ogObject.musicSongUrl) {\n        ogObject.musicSongUrl = ogObject.musicSongUrl ? ogObject.musicSongUrl : [];\n        ogObject.musicSongProperty = ogObject.musicSongProperty ? ogObject.musicSongProperty : ogObject.musicSongUrl; // deafult to musicSongUrl\n        ogObject.musicSongTrack = ogObject.musicSongTrack ? ogObject.musicSongTrack : [];\n        ogObject.musicSongDisc = ogObject.musicSongDisc ? ogObject.musicSongDisc : [];\n    }\n    // format music songs and limit to 10\n    const musicSongs = zip(ogObject.musicSongProperty, ogObject.musicSongTrack, ogObject.musicSongDisc)\n        .map(mediaMapperMusicSong)\n        .filter((value) => value.url !== undefined && value.url !== '')\n        .filter((value, index) => index < 10)\n        .sort(mediaSorterMusicSong);\n    // remove old values since everything will live under the main property\n    fields_1.default.filter((item) => (item.multiple && item.fieldName && item.fieldName.match('(ogImage|ogVideo|twitter|musicSong).*')))\n        .forEach((item) => {\n        delete ogObject[item.fieldName];\n    });\n    if (ogImages.length)\n        ogObject.ogImage = ogImages;\n    if (ogVideos.length)\n        ogObject.ogVideo = ogVideos;\n    if (twitterImages.length)\n        ogObject.twitterImage = twitterImages;\n    if (twitterPlayers.length)\n        ogObject.twitterPlayer = twitterPlayers;\n    if (musicSongs.length)\n        ogObject.musicSong = musicSongs;\n    // removes any undefs\n    ogObject = (0, utils_1.removeNestedUndefinedValues)(ogObject);\n    return ogObject;\n}\nexports.mediaSetup = mediaSetup;\nexports.default = mediaSetup;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,QAAQ,GAAGR,eAAe,CAACS,OAAO,CAAC,UAAU,CAAC,CAAC;AACrD,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,uBAAuB,GAAIC,IAAI,KAAM;EACvCC,GAAG,EAAED,IAAI,CAAC,CAAC,CAAC;EACZE,MAAM,EAAEF,IAAI,CAAC,CAAC,CAAC;EACfG,GAAG,EAAEH,IAAI,CAAC,CAAC,CAAC;EACZI,KAAK,EAAEJ,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AACF,MAAMK,wBAAwB,GAAIL,IAAI,KAAM;EACxCE,MAAM,EAAEF,IAAI,CAAC,CAAC,CAAC;EACfM,MAAM,EAAEN,IAAI,CAAC,CAAC,CAAC;EACfG,GAAG,EAAEH,IAAI,CAAC,CAAC,CAAC;EACZI,KAAK,EAAEJ,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AACF,MAAMO,oBAAoB,GAAIP,IAAI,KAAM;EACpCQ,IAAI,EAAER,IAAI,CAAC,CAAC,CAAC;EACbS,KAAK,EAAET,IAAI,CAAC,CAAC,CAAC;EACdG,GAAG,EAAEH,IAAI,CAAC,CAAC;AACf,CAAC,CAAC;AACF,MAAMU,WAAW,GAAIV,IAAI,KAAM;EAC3BE,MAAM,EAAEF,IAAI,CAAC,CAAC,CAAC;EACfW,IAAI,EAAEX,IAAI,CAAC,CAAC,CAAC;EACbG,GAAG,EAAEH,IAAI,CAAC,CAAC,CAAC;EACZI,KAAK,EAAEJ,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AACF,MAAMY,WAAW,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC1B,IAAI,EAAED,CAAC,CAACV,GAAG,IAAIW,CAAC,CAACX,GAAG,CAAC,EAAE;IACnB,OAAO,CAAC;EACZ;EACA,MAAMY,IAAI,GAAGF,CAAC,CAACV,GAAG,CAACa,KAAK,CAAC,cAAc,CAAC;EACxC,MAAMC,IAAI,GAAIF,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,EAAE,IAAK,IAAI;EACpD,MAAMC,IAAI,GAAGL,CAAC,CAACX,GAAG,CAACa,KAAK,CAAC,cAAc,CAAC;EACxC,MAAMI,IAAI,GAAID,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACD,WAAW,EAAE,IAAK,IAAI;EACpD,IAAID,IAAI,KAAK,KAAK,IAAIG,IAAI,KAAK,KAAK,EAAE;IAClC,OAAO,CAAC,CAAC;EACb;EACA,IAAIH,IAAI,KAAK,KAAK,IAAIG,IAAI,KAAK,KAAK,EAAE;IAClC,OAAO,CAAC;EACZ;EACA,OAAOC,IAAI,CAACC,GAAG,CAACR,CAAC,CAACV,KAAK,IAAI,CAAC,EAAEU,CAAC,CAACZ,MAAM,IAAI,CAAC,CAAC,GAAGmB,IAAI,CAACC,GAAG,CAACT,CAAC,CAACT,KAAK,IAAI,CAAC,EAAES,CAAC,CAACX,MAAM,IAAI,CAAC,CAAC;AACxF,CAAC;AACD,MAAMqB,oBAAoB,GAAG,CAACV,CAAC,EAAEC,CAAC,KAAK;EACnC,IAAI,EAAED,CAAC,CAACJ,KAAK,IAAIK,CAAC,CAACL,KAAK,CAAC,EAAE;IACvB,OAAO,CAAC;EACZ;EACA,IAAI,CAACI,CAAC,CAACL,IAAI,IAAI,CAAC,KAAKM,CAAC,CAACN,IAAI,IAAI,CAAC,CAAC,EAAE;IAC/B,OAAO,CAAC;EACZ;EACA,IAAI,CAACK,CAAC,CAACL,IAAI,IAAI,CAAC,KAAKM,CAAC,CAACN,IAAI,IAAI,CAAC,CAAC,EAAE;IAC/B,OAAO,CAAC,CAAC;EACb;EACA,OAAOK,CAAC,CAACJ,KAAK,GAAGK,CAAC,CAACL,KAAK;AAC5B,CAAC;AACD;AACA,MAAMe,GAAG,GAAG,UAACC,KAAK,EAAc;EAAA,kCAATC,IAAI;IAAJA,IAAI;EAAA;EACvB,IAAID,KAAK,KAAKE,SAAS,EACnB,OAAO,EAAE;EACb,OAAOF,KAAK,CACPG,GAAG,CAAC,CAAClC,KAAK,EAAEmC,GAAG,KAAK,CAACnC,KAAK,EAAE,GAAGgC,IAAI,CAACE,GAAG,CAAEE,GAAG,IAAKA,GAAG,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASlC,UAAU,CAACoC,QAAQ,EAAE;EAC1B;EACA,IAAIA,QAAQ,CAACC,gBAAgB,IACtBD,QAAQ,CAACE,UAAU,IACnBF,QAAQ,CAACG,eAAe,IACxBH,QAAQ,CAACI,YAAY,IACrBJ,QAAQ,CAACK,aAAa,IACtBL,QAAQ,CAACM,WAAW,EAAE;IACzBN,QAAQ,CAACC,gBAAgB,GAAGD,QAAQ,CAACC,gBAAgB,GAAGD,QAAQ,CAACC,gBAAgB,GAAG,EAAE;IACtFD,QAAQ,CAACE,UAAU,GAAGF,QAAQ,CAACE,UAAU,GAAGF,QAAQ,CAACE,UAAU,GAAG,EAAE;IACpEF,QAAQ,CAACG,eAAe,GAAGH,QAAQ,CAACG,eAAe,GAAGH,QAAQ,CAACG,eAAe,GAAG,EAAE;IACnF;IACA;IACAH,QAAQ,CAACG,eAAe,GAAIH,QAAQ,CAACC,gBAAgB,CAACM,MAAM,KAAK,CAAC,GAAIP,QAAQ,CAACC,gBAAgB,GAAGD,QAAQ,CAACG,eAAe;IAC1H;IACAH,QAAQ,CAACG,eAAe,GAAIH,QAAQ,CAACG,eAAe,CAACI,MAAM,KAAK,CAAC,GAAIP,QAAQ,CAACG,eAAe,GAAGH,QAAQ,CAACE,UAAU;IACnHF,QAAQ,CAACI,YAAY,GAAGJ,QAAQ,CAACI,YAAY,GAAGJ,QAAQ,CAACI,YAAY,GAAG,EAAE;IAC1EJ,QAAQ,CAACK,aAAa,GAAGL,QAAQ,CAACK,aAAa,GAAGL,QAAQ,CAACK,aAAa,GAAG,EAAE;IAC7EL,QAAQ,CAACM,WAAW,GAAGN,QAAQ,CAACM,WAAW,GAAGN,QAAQ,CAACM,WAAW,GAAG,EAAE;EAC3E;EACA;EACA,MAAME,QAAQ,GAAGf,GAAG,CAACO,QAAQ,CAACG,eAAe,EAAEH,QAAQ,CAACI,YAAY,EAAEJ,QAAQ,CAACK,aAAa,EAAEL,QAAQ,CAACM,WAAW,CAAC,CAC9GT,GAAG,CAAClB,WAAW,CAAC,CAChB8B,MAAM,CAAE9C,KAAK,IAAKA,KAAK,CAACS,GAAG,KAAKwB,SAAS,IAAIjC,KAAK,CAACS,GAAG,KAAK,EAAE,CAAC,CAC9DqC,MAAM,CAAC,CAAC9C,KAAK,EAAE+C,KAAK,KAAKA,KAAK,GAAG,EAAE,CAAC,CACpCC,IAAI,CAAC9B,WAAW,CAAC;EACtB;EACA,IAAImB,QAAQ,CAACY,eAAe,IAAIZ,QAAQ,CAACa,YAAY,IAAIb,QAAQ,CAACc,aAAa,IAAId,QAAQ,CAACe,WAAW,EAAE;IACrGf,QAAQ,CAACY,eAAe,GAAGZ,QAAQ,CAACY,eAAe,GAAGZ,QAAQ,CAACY,eAAe,GAAG,EAAE;IACnFZ,QAAQ,CAACa,YAAY,GAAGb,QAAQ,CAACa,YAAY,GAAGb,QAAQ,CAACa,YAAY,GAAG,EAAE;IAC1Eb,QAAQ,CAACc,aAAa,GAAGd,QAAQ,CAACc,aAAa,GAAGd,QAAQ,CAACc,aAAa,GAAG,EAAE;IAC7Ed,QAAQ,CAACe,WAAW,GAAGf,QAAQ,CAACe,WAAW,GAAGf,QAAQ,CAACe,WAAW,GAAG,EAAE;EAC3E;EACA;EACA,MAAMC,QAAQ,GAAGvB,GAAG,CAACO,QAAQ,CAACY,eAAe,EAAEZ,QAAQ,CAACa,YAAY,EAAEb,QAAQ,CAACc,aAAa,EAAEd,QAAQ,CAACe,WAAW,CAAC,CAC9GlB,GAAG,CAAClB,WAAW,CAAC,CAChB8B,MAAM,CAAE9C,KAAK,IAAKA,KAAK,CAACS,GAAG,KAAKwB,SAAS,IAAIjC,KAAK,CAACS,GAAG,KAAK,EAAE,CAAC,CAC9DqC,MAAM,CAAC,CAAC9C,KAAK,EAAE+C,KAAK,KAAKA,KAAK,GAAG,EAAE,CAAC,CACpCC,IAAI,CAAC9B,WAAW,CAAC;EACtB;EACA,IAAImB,QAAQ,CAACiB,eAAe,IACrBjB,QAAQ,CAACkB,oBAAoB,IAC7BlB,QAAQ,CAACmB,iBAAiB,IAC1BnB,QAAQ,CAACoB,kBAAkB,IAC3BpB,QAAQ,CAACqB,eAAe,EAAE;IAC7BrB,QAAQ,CAACiB,eAAe,GAAGjB,QAAQ,CAACiB,eAAe,GAAGjB,QAAQ,CAACiB,eAAe,GAAG,EAAE;IACnF;IACAjB,QAAQ,CAACkB,oBAAoB,GAAGlB,QAAQ,CAACkB,oBAAoB,GAAGlB,QAAQ,CAACkB,oBAAoB,GAAGlB,QAAQ,CAACiB,eAAe,CAAC,CAAC;IAC1HjB,QAAQ,CAACmB,iBAAiB,GAAGnB,QAAQ,CAACmB,iBAAiB,GAAGnB,QAAQ,CAACmB,iBAAiB,GAAG,EAAE;IACzFnB,QAAQ,CAACoB,kBAAkB,GAAGpB,QAAQ,CAACoB,kBAAkB,GAAGpB,QAAQ,CAACoB,kBAAkB,GAAG,EAAE;IAC5FpB,QAAQ,CAACqB,eAAe,GAAGrB,QAAQ,CAACqB,eAAe,GAAGrB,QAAQ,CAACqB,eAAe,GAAG,EAAE;EACvF;EACA;EACA,MAAMC,aAAa,GAAG7B,GAAG,CAACO,QAAQ,CAACkB,oBAAoB,EAAElB,QAAQ,CAACmB,iBAAiB,EAAEnB,QAAQ,CAACoB,kBAAkB,EAAEpB,QAAQ,CAACqB,eAAe,CAAC,CACtIxB,GAAG,CAAC7B,uBAAuB,CAAC,CAC5ByC,MAAM,CAAE9C,KAAK,IAAKA,KAAK,CAACS,GAAG,KAAKwB,SAAS,IAAIjC,KAAK,CAACS,GAAG,KAAK,EAAE,CAAC,CAC9DqC,MAAM,CAAC,CAAC9C,KAAK,EAAE+C,KAAK,KAAKA,KAAK,GAAG,EAAE,CAAC,CACpCC,IAAI,CAAC9B,WAAW,CAAC;EACtB;EACA,IAAImB,QAAQ,CAACuB,qBAAqB,IAC3BvB,QAAQ,CAACwB,kBAAkB,IAC3BxB,QAAQ,CAACyB,mBAAmB,IAC5BzB,QAAQ,CAAC0B,mBAAmB,EAAE;IACjC1B,QAAQ,CAACuB,qBAAqB,GAAGvB,QAAQ,CAACuB,qBAAqB,GAAGvB,QAAQ,CAACuB,qBAAqB,GAAG,EAAE;IACrGvB,QAAQ,CAACwB,kBAAkB,GAAGxB,QAAQ,CAACwB,kBAAkB,GAAGxB,QAAQ,CAACwB,kBAAkB,GAAG,EAAE;IAC5FxB,QAAQ,CAACyB,mBAAmB,GAAGzB,QAAQ,CAACyB,mBAAmB,GAAGzB,QAAQ,CAACyB,mBAAmB,GAAG,EAAE;IAC/FzB,QAAQ,CAAC0B,mBAAmB,GAAG1B,QAAQ,CAAC0B,mBAAmB,GAAG1B,QAAQ,CAAC0B,mBAAmB,GAAG,EAAE;EACnG;EACA;EACA,MAAMC,cAAc,GAAGlC,GAAG,CAACO,QAAQ,CAACuB,qBAAqB,EAAEvB,QAAQ,CAACwB,kBAAkB,EAAExB,QAAQ,CAACyB,mBAAmB,EAAEzB,QAAQ,CAAC0B,mBAAmB,CAAC,CAAC7B,GAAG,CAACvB,wBAAwB,CAAC,CAC5KmC,MAAM,CAAE9C,KAAK,IAAKA,KAAK,CAACS,GAAG,KAAKwB,SAAS,IAAIjC,KAAK,CAACS,GAAG,KAAK,EAAE,CAAC,CAC9DqC,MAAM,CAAC,CAAC9C,KAAK,EAAE+C,KAAK,KAAKA,KAAK,GAAG,EAAE,CAAC,CACpCC,IAAI,CAAC9B,WAAW,CAAC;EACtB;EACA,IAAImB,QAAQ,CAAC4B,iBAAiB,IAAI5B,QAAQ,CAAC6B,cAAc,IAAI7B,QAAQ,CAAC8B,aAAa,IAAI9B,QAAQ,CAAC+B,YAAY,EAAE;IAC1G/B,QAAQ,CAAC+B,YAAY,GAAG/B,QAAQ,CAAC+B,YAAY,GAAG/B,QAAQ,CAAC+B,YAAY,GAAG,EAAE;IAC1E/B,QAAQ,CAAC4B,iBAAiB,GAAG5B,QAAQ,CAAC4B,iBAAiB,GAAG5B,QAAQ,CAAC4B,iBAAiB,GAAG5B,QAAQ,CAAC+B,YAAY,CAAC,CAAC;IAC9G/B,QAAQ,CAAC6B,cAAc,GAAG7B,QAAQ,CAAC6B,cAAc,GAAG7B,QAAQ,CAAC6B,cAAc,GAAG,EAAE;IAChF7B,QAAQ,CAAC8B,aAAa,GAAG9B,QAAQ,CAAC8B,aAAa,GAAG9B,QAAQ,CAAC8B,aAAa,GAAG,EAAE;EACjF;EACA;EACA,MAAME,UAAU,GAAGvC,GAAG,CAACO,QAAQ,CAAC4B,iBAAiB,EAAE5B,QAAQ,CAAC6B,cAAc,EAAE7B,QAAQ,CAAC8B,aAAa,CAAC,CAC9FjC,GAAG,CAACrB,oBAAoB,CAAC,CACzBiC,MAAM,CAAE9C,KAAK,IAAKA,KAAK,CAACS,GAAG,KAAKwB,SAAS,IAAIjC,KAAK,CAACS,GAAG,KAAK,EAAE,CAAC,CAC9DqC,MAAM,CAAC,CAAC9C,KAAK,EAAE+C,KAAK,KAAKA,KAAK,GAAG,EAAE,CAAC,CACpCC,IAAI,CAACnB,oBAAoB,CAAC;EAC/B;EACA3B,QAAQ,CAACoE,OAAO,CAACxB,MAAM,CAAExC,IAAI,IAAMA,IAAI,CAACiE,QAAQ,IAAIjE,IAAI,CAACkE,SAAS,IAAIlE,IAAI,CAACkE,SAAS,CAAClD,KAAK,CAAC,uCAAuC,CAAE,CAAC,CAChImD,OAAO,CAAEnE,IAAI,IAAK;IACnB,OAAO+B,QAAQ,CAAC/B,IAAI,CAACkE,SAAS,CAAC;EACnC,CAAC,CAAC;EACF,IAAI3B,QAAQ,CAACD,MAAM,EACfP,QAAQ,CAACqC,OAAO,GAAG7B,QAAQ;EAC/B,IAAIQ,QAAQ,CAACT,MAAM,EACfP,QAAQ,CAACsC,OAAO,GAAGtB,QAAQ;EAC/B,IAAIM,aAAa,CAACf,MAAM,EACpBP,QAAQ,CAACuC,YAAY,GAAGjB,aAAa;EACzC,IAAIK,cAAc,CAACpB,MAAM,EACrBP,QAAQ,CAACwC,aAAa,GAAGb,cAAc;EAC3C,IAAIK,UAAU,CAACzB,MAAM,EACjBP,QAAQ,CAACyC,SAAS,GAAGT,UAAU;EACnC;EACAhC,QAAQ,GAAG,CAAC,CAAC,EAAEjC,OAAO,CAAC2E,2BAA2B,EAAE1C,QAAQ,CAAC;EAC7D,OAAOA,QAAQ;AACnB;AACAtC,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/BF,OAAO,CAACuE,OAAO,GAAGrE,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}