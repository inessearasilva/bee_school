{"ast":null,"code":"import _defineProperty from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CombinedContext from \"../../../../../../contexts/CombinedContext\";\nimport PrefixInput from \"../../../../../UI/Input/PrefixInput\";\nimport IconButton from \"../../../../UI/Button/IconButton\";\nimport { FileIcon } from \"../../../../../../assets/icons/svg_icons\";\nimport { getItemsList } from \"../../../../../../assets/data/SidebarData\";\nvar FileExtensionPanel = function FileExtensionPanel(props) {\n  var context = useContext(CombinedContext);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFileExtensions = _useState2[0],\n    setFileExtensions = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    otherExtension = _useState4[0],\n    setOtherExtension = _useState4[1];\n  useEffect(function () {\n    if (context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath]) {\n      setFileExtensions(context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath]);\n      context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath].forEach(function (f) {\n        return f.description === \"Outro\" && setOtherExtension(f.extension);\n      });\n    }\n  }, [context.composition.openCompositionPlanningPath, context.datatypes.fileExtensions]);\n  var handleFileExtensionChange = function handleFileExtensionChange(e, obj) {\n    var value = selectedFileExtensions.filter(function (x) {\n      return x.id === obj.id;\n    }).length > 0 ? selectedFileExtensions.filter(function (x) {\n      return x.id !== obj.id;\n    }) // se o elemento já existe na lista é removido\n    : obj.description === \"Outro\" || obj.description === \"Todos os ficheiros\" ? [obj] // se selecciona todos/outro os elementos são todos removidos\n    : [].concat(_toConsumableArray(selectedFileExtensions.filter(function (x) {\n      return x.description !== \"Outro\" && x.description !== \"Todos os ficheiros\";\n    })), [obj]);\n    setFileExtensions(value);\n    obj.description === \"Outro\" && setOtherExtension(\"\");\n    context.datatypes.handleFileExtensions(context.composition.openCompositionPlanningPath, value);\n  };\n  var handleOtherFileExtension = function handleOtherFileExtension(e) {\n    var extensionValue = e.target.value;\n    extensionValue = extensionValue.substring(0, 1) !== '.' ? '.' + extensionValue : extensionValue;\n    var index = selectedFileExtensions.findIndex(function (x) {\n      return x.description === \"Outro\";\n    });\n    var finalValues = Object.values(_objectSpread(_objectSpread({}, selectedFileExtensions), {}, _defineProperty({}, index, _objectSpread(_objectSpread({}, selectedFileExtensions[index]), {}, {\n      extension: extensionValue\n    }))));\n    context.datatypes.handleFileExtensions(context.composition.openCompositionPlanningPath, finalValues);\n    setFileExtensions(finalValues);\n    setOtherExtension(extensionValue);\n  };\n  var itemsList = getItemsList(otherExtension);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid gap-1 grid-cols-1 sm:grid-cols-2\"\n  }, Object.keys(itemsList).map(function (option) {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      key: itemsList[option].id,\n      icon: /*#__PURE__*/React.createElement(FileIcon, {\n        fill: itemsList[option].color,\n        text: itemsList[option].text\n      }),\n      type: \"fileExtensions\",\n      color: itemsList[option].color,\n      selected: context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath] === undefined ? itemsList[option].isDefault && true : context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath].filter(function (f) {\n        return f.id === itemsList[option].id;\n      }).length === 1,\n      handleClick: function handleClick(e) {\n        return handleFileExtensionChange(e, itemsList[option]);\n      },\n      description: itemsList[option].description\n    });\n  }))), selectedFileExtensions !== [] && selectedFileExtensions.filter(function (f) {\n    return f.description === \"Outro\";\n  }).length === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PrefixInput, {\n    prefix: \"Qual?\",\n    onChange: function onChange(event) {\n      return handleOtherFileExtension(event);\n    },\n    value: otherExtension\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600 text-9 xl:text-10 xxl:text-11 xxxl:text-xs leading-tight mt-2 pb-4\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, \"Nota:\"), \" Introduza a extens\\xE3o do ficheiro (p.e: .txt)\")));\n};\nexport default FileExtensionPanel;","map":{"version":3,"names":["React","useContext","useEffect","useState","CombinedContext","PrefixInput","IconButton","FileIcon","getItemsList","FileExtensionPanel","props","context","selectedFileExtensions","setFileExtensions","otherExtension","setOtherExtension","datatypes","fileExtensions","composition","openCompositionPlanningPath","forEach","f","description","extension","handleFileExtensionChange","e","obj","value","filter","x","id","length","handleFileExtensions","handleOtherFileExtension","extensionValue","target","substring","index","findIndex","finalValues","Object","values","itemsList","createElement","Fragment","className","keys","map","option","key","icon","fill","color","text","type","selected","undefined","isDefault","handleClick","prefix","onChange","event"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/FormDesigner/Sidebar/SidePanel/ConfigurationSettingsPanel/FilePanel/FileExtensionPanel.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport CombinedContext from \"../../../../../../contexts/CombinedContext\";\r\nimport PrefixInput from \"../../../../../UI/Input/PrefixInput\";\r\nimport IconButton from \"../../../../UI/Button/IconButton\";\r\nimport { FileIcon } from \"../../../../../../assets/icons/svg_icons\";\r\nimport { getItemsList } from \"../../../../../../assets/data/SidebarData\";\r\n\r\nconst FileExtensionPanel = props => {\r\n  const context = useContext(CombinedContext);\r\n  const [selectedFileExtensions, setFileExtensions] = useState([]);\r\n  const [otherExtension, setOtherExtension] = useState(\"\");\r\n  useEffect(() => {\r\n    if (context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath]) {\r\n      setFileExtensions(context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath]);\r\n      context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath].forEach(f => f.description === \"Outro\" && setOtherExtension(f.extension));\r\n    }\r\n  }, [context.composition.openCompositionPlanningPath, context.datatypes.fileExtensions]);\r\n\r\n  const handleFileExtensionChange = (e, obj) => {\r\n    let value = selectedFileExtensions.filter(x => x.id === obj.id).length > 0 ? selectedFileExtensions.filter(x => x.id !== obj.id) // se o elemento já existe na lista é removido\r\n    : obj.description === \"Outro\" || obj.description === \"Todos os ficheiros\" ? [obj] // se selecciona todos/outro os elementos são todos removidos\r\n    : [...selectedFileExtensions.filter(x => x.description !== \"Outro\" && x.description !== \"Todos os ficheiros\"), obj];\r\n    setFileExtensions(value);\r\n    obj.description === \"Outro\" && setOtherExtension(\"\");\r\n    context.datatypes.handleFileExtensions(context.composition.openCompositionPlanningPath, value);\r\n  };\r\n\r\n  const handleOtherFileExtension = e => {\r\n    let extensionValue = e.target.value;\r\n    extensionValue = extensionValue.substring(0, 1) !== '.' ? '.' + extensionValue : extensionValue;\r\n    let index = selectedFileExtensions.findIndex(x => x.description === \"Outro\");\r\n    let finalValues = Object.values({ ...selectedFileExtensions,\r\n      [index]: { ...selectedFileExtensions[index],\r\n        extension: extensionValue\r\n      }\r\n    });\r\n    context.datatypes.handleFileExtensions(context.composition.openCompositionPlanningPath, finalValues);\r\n    setFileExtensions(finalValues);\r\n    setOtherExtension(extensionValue);\r\n  };\r\n\r\n  let itemsList = getItemsList(otherExtension);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: \"flex items-center justify-center\"\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: \"grid gap-1 grid-cols-1 sm:grid-cols-2\"\r\n  }, Object.keys(itemsList).map(option => /*#__PURE__*/React.createElement(IconButton, {\r\n    key: itemsList[option].id,\r\n    icon: /*#__PURE__*/React.createElement(FileIcon, {\r\n      fill: itemsList[option].color,\r\n      text: itemsList[option].text\r\n    }),\r\n    type: \"fileExtensions\",\r\n    color: itemsList[option].color,\r\n    selected: context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath] === undefined ? itemsList[option].isDefault && true : context.datatypes.fileExtensions[context.composition.openCompositionPlanningPath].filter(f => f.id === itemsList[option].id).length === 1,\r\n    handleClick: e => handleFileExtensionChange(e, itemsList[option]),\r\n    description: itemsList[option].description\r\n  })))), selectedFileExtensions !== [] && selectedFileExtensions.filter(f => f.description === \"Outro\").length === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PrefixInput, {\r\n    prefix: \"Qual?\",\r\n    onChange: event => handleOtherFileExtension(event),\r\n    value: otherExtension\r\n  }), /*#__PURE__*/React.createElement(\"p\", {\r\n    className: \"text-gray-600 text-9 xl:text-10 xxl:text-11 xxxl:text-xs leading-tight mt-2 pb-4\"\r\n  }, /*#__PURE__*/React.createElement(\"b\", null, \"Nota:\"), \" Introduza a extens\\xE3o do ficheiro (p.e: .txt)\")));\r\n};\r\n\r\nexport default FileExtensionPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}