{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { convertToRaw } from \"draft-js\";\nimport ob from \"object-path\";\nimport { handleRules } from \"../HandleRules/handleRules\";\nvar handleSubmit = function handleSubmit(template, values, formRM) {\n  var value;\n  var jsonValues = {};\n  var rmValues = {};\n  for (value in values) {\n    if (value.split(\"-\").indexOf(\"value\") !== -1) {\n      var index = value.split(\"-\").indexOf(\"value\");\n      var itemPath = value.split(\"-\").slice(0, index);\n      var isRM = itemPath[0] === \"rm\" ? true : false;\n      var item = void 0;\n      if (isRM) {\n        (function () {\n          var rmPath = _toConsumableArray(itemPath).splice(1).join(\".\");\n          formRM.forEach(function (el) {\n            if (el.itemPath === rmPath) {\n              item = el;\n            }\n          });\n        })();\n      } else {\n        item = ob.get(template, itemPath);\n      }\n      var visible = handleRules(item, values, \"visibility\");\n      var newValue = void 0;\n      if (visible) {\n        if (values[value] === \"\") {\n          newValue = null;\n        } else if (Array.isArray(values[value])) {\n          if (values[value].length === 0) {\n            newValue = null;\n          } else if (values[value][0].textId !== undefined) {\n            newValue = values[value].filter(function (obj) {\n              return obj.value.getCurrentContent().hasText();\n            });\n            if (newValue.length === 0) {\n              newValue = null;\n            } else {\n              var array = [];\n              array = newValue.map(function (obj) {\n                return {\n                  textId: obj.textId,\n                  value: JSON.stringify(convertToRaw(obj.value.getCurrentContent()))\n                };\n              });\n              newValue = array;\n            }\n          } else if (values[value][0].identifierId !== undefined) {\n            newValue = values[value].filter(function (obj) {\n              return obj.value !== \"\";\n            });\n            if (newValue.length === 0) {\n              newValue = null;\n            } else {\n              var _array = [];\n              _array = newValue.map(function (obj) {\n                return {\n                  identifierId: obj.identifierId,\n                  value: !isNaN(Number(obj.value)) ? Number(obj.value) : obj.value\n                };\n              });\n              newValue = _array;\n            }\n          } else {\n            newValue = values[value];\n          }\n        } else if (values[value]._immutable !== undefined) {\n          if (values[value].getCurrentContent().hasText()) {\n            newValue = JSON.stringify(convertToRaw(values[value].getCurrentContent()));\n          } else {\n            newValue = null;\n          }\n        } else if (!isNaN(Number(values[value]))) {\n          newValue = Number(values[value]);\n        } else {\n          newValue = values[value];\n        }\n      } else {\n        newValue = null;\n      }\n      var label = isRM ? value.split(\"-\").splice(1).join(\".\") : value.split(\"-\").join(\".\");\n      if (isRM) {\n        rmValues[label] = newValue;\n        jsonValues[\"rm\"] = rmValues;\n      } else {\n        jsonValues[label] = newValue;\n      }\n    }\n  }\n  var sortedKeys = Object.keys(jsonValues).sort();\n  var sortedJsonValues = {};\n  sortedKeys.forEach(function (key) {\n    sortedJsonValues[key] = jsonValues[key];\n  });\n  return sortedJsonValues;\n};\nexport { handleSubmit };","map":{"version":3,"names":["convertToRaw","ob","handleRules","handleSubmit","template","values","formRM","value","jsonValues","rmValues","split","indexOf","index","itemPath","slice","isRM","item","rmPath","splice","join","forEach","el","get","visible","newValue","Array","isArray","length","textId","undefined","filter","obj","getCurrentContent","hasText","array","map","JSON","stringify","identifierId","isNaN","Number","_immutable","label","sortedKeys","Object","keys","sort","sortedJsonValues","key"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/assets/functions/HandleSubmit/handleSubmit.js"],"sourcesContent":["import { convertToRaw } from \"draft-js\";\r\nimport ob from \"object-path\";\r\nimport { handleRules } from \"../HandleRules/handleRules\";\r\n\r\nconst handleSubmit = (template, values, formRM) => {\r\n  let value;\r\n  let jsonValues = {};\r\n  let rmValues = {};\r\n\r\n  for (value in values) {\r\n    if (value.split(\"-\").indexOf(\"value\") !== -1) {\r\n      const index = value.split(\"-\").indexOf(\"value\");\r\n      const itemPath = value.split(\"-\").slice(0, index);\r\n      const isRM = itemPath[0] === \"rm\" ? true : false;\r\n      let item;\r\n\r\n      if (isRM) {\r\n        let rmPath = [...itemPath].splice(1).join(\".\");\r\n        formRM.forEach(el => {\r\n          if (el.itemPath === rmPath) {\r\n            item = el;\r\n          }\r\n        });\r\n      } else {\r\n        item = ob.get(template, itemPath);\r\n      }\r\n\r\n      const visible = handleRules(item, values, \"visibility\");\r\n      let newValue;\r\n\r\n      if (visible) {\r\n        if (values[value] === \"\") {\r\n          newValue = null;\r\n        } else if (Array.isArray(values[value])) {\r\n          if (values[value].length === 0) {\r\n            newValue = null;\r\n          } else if (values[value][0].textId !== undefined) {\r\n            newValue = values[value].filter(obj => obj.value.getCurrentContent().hasText());\r\n\r\n            if (newValue.length === 0) {\r\n              newValue = null;\r\n            } else {\r\n              let array = [];\r\n              array = newValue.map(obj => {\r\n                return {\r\n                  textId: obj.textId,\r\n                  value: JSON.stringify(convertToRaw(obj.value.getCurrentContent()))\r\n                };\r\n              });\r\n              newValue = array;\r\n            }\r\n          } else if (values[value][0].identifierId !== undefined) {\r\n            newValue = values[value].filter(obj => obj.value !== \"\");\r\n\r\n            if (newValue.length === 0) {\r\n              newValue = null;\r\n            } else {\r\n              let array = [];\r\n              array = newValue.map(obj => {\r\n                return {\r\n                  identifierId: obj.identifierId,\r\n                  value: !isNaN(Number(obj.value)) ? Number(obj.value) : obj.value\r\n                };\r\n              });\r\n              newValue = array;\r\n            }\r\n          } else {\r\n            newValue = values[value];\r\n          }\r\n        } else if (values[value]._immutable !== undefined) {\r\n          if (values[value].getCurrentContent().hasText()) {\r\n            newValue = JSON.stringify(convertToRaw(values[value].getCurrentContent()));\r\n          } else {\r\n            newValue = null;\r\n          }\r\n        } else if (!isNaN(Number(values[value]))) {\r\n          newValue = Number(values[value]);\r\n        } else {\r\n          newValue = values[value];\r\n        }\r\n      } else {\r\n        newValue = null;\r\n      }\r\n\r\n      const label = isRM ? value.split(\"-\").splice(1).join(\".\") : value.split(\"-\").join(\".\");\r\n\r\n      if (isRM) {\r\n        rmValues[label] = newValue;\r\n        jsonValues[\"rm\"] = rmValues;\r\n      } else {\r\n        jsonValues[label] = newValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  let sortedKeys = Object.keys(jsonValues).sort();\r\n  const sortedJsonValues = {};\r\n  sortedKeys.forEach(key => {\r\n    sortedJsonValues[key] = jsonValues[key];\r\n  });\r\n  return sortedJsonValues;\r\n};\r\n\r\nexport { handleSubmit };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}