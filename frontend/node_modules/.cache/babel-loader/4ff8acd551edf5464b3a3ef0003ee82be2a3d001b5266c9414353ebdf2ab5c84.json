{"ast":null,"code":"import axios from \"axios\";\nimport { ContentState, EditorState } from \"draft-js\";\nconst buildNewProps = async (field, body, values) => {\n  let props = {};\n  Object.keys(body.props[0]).forEach(prop => {\n    try {\n      const data = field.dependencies.filter(obj => obj.field.path === body.props[0][prop])[0]; // Ver cosoante o datatype e o occurrences => ACRESCENTAR O RESTO\n\n      if (data.field.datatype === \"DV_CODED_TEXT\" && data.field.upperOccurrences === 1) {\n        const path = body.props[0][prop].split(\".\").join(\"-\");\n        props[prop] = values[`${path}-value`].code !== null && values[`${path}-value`].code !== undefined ? values[`${path}-value`].code : \"\";\n      } else if (data.field.datatype === \"DV_IDENTIFIER\" && data.field.upperOccurrences === 1) {\n        const path = body.props[0][prop].split(\".\").join(\"-\");\n        props[prop] = values[`${path}-value`] !== null && values[`${path}-value`] !== undefined ? values[`${path}-value`] : \"\";\n      }\n    } catch (e) {\n      props[prop] = \"\";\n    }\n  });\n  const newBody = {\n    ...body,\n    props: [props]\n  };\n  return newBody;\n};\nconst setValue = (field, val, setField, contextFields) => {\n  try {\n    // Ver cosoante o datatype e o occurrences => ACRESCENTAR O RESTO\n    if (field.datatype === \"DV_IDENTIFIER\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      if (val[field.resColumn] !== null) {\n        const value = val[field.resColumn];\n        setField(path, value);\n        contextFields.updateValue(path);\n      } else {\n        setField(path, \"\");\n        contextFields.updateValue(path);\n      }\n    } else if (field.datatype === \"DV_TEXT\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      if (val[field.resColumn] !== null) {\n        const value = EditorState.createWithContent(ContentState.createFromText(val[field.resColumn].toString()));\n        setField(path, value);\n        contextFields.updateValue(path);\n      } else {\n        const value = EditorState.createEmpty();\n        setField(path, value);\n        contextFields.updateValue(path);\n      }\n    } else if (field.datatype === \"DV_CODED_TEXT\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      if (val[field.codeColumn] !== null && val[field.textColumn] !== null) {\n        const value = {\n          code: val[field.codeColumn],\n          text: val[field.textColumn]\n        };\n        setField(path, value);\n        contextFields.updateValue(path);\n      } else {\n        setField(path, \"\");\n        contextFields.updateValue(path);\n      }\n    }\n  } catch (e) {\n    if (field.datatype === \"DV_IDENTIFIER\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      setField(path, \"\");\n      contextFields.updateValue(path);\n    } else if (field.datatype === \"DV_TEXT\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      const value = EditorState.createEmpty();\n      setField(path, value);\n      contextFields.updateValue(path);\n    } else if (field.datatype === \"DV_CODED_TEXT\" && field.upperOccurrences === 1) {\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\n      setField(path, \"\");\n      contextFields.updateValue(path);\n    }\n  }\n};\nconst handleInternalFunctions = async (functions, setField, token, values, contextFields) => {\n  functions.forEach(obj => {\n    if (obj.type === \"Preenchimento automático de campos\") {\n      // Vamos fazer o setField de cada campo afetado\n      Object.keys(obj.affectedFields).forEach(async path => {\n        let body = obj.affectedFields[path].body;\n        let newBody = await buildNewProps(obj.affectedFields[path], body, values);\n        await axios({\n          method: obj.affectedFields[path].method,\n          url: `${obj.affectedFields[path].url}${obj.affectedFields[path].serviceName}`,\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          data: newBody\n        }).then(async response => {\n          if (response.data.success === true && Array.isArray(response.data.concepts)) {\n            const val = response.data.concepts[0];\n            await setValue(obj.affectedFields[path], val, setField, contextFields);\n          }\n        });\n      });\n    }\n  });\n};\nexport { handleInternalFunctions };","map":{"version":3,"names":["axios","ContentState","EditorState","buildNewProps","field","body","values","props","Object","keys","forEach","prop","data","dependencies","filter","obj","path","datatype","upperOccurrences","split","join","code","undefined","e","newBody","setValue","val","setField","contextFields","resColumn","value","updateValue","createWithContent","createFromText","toString","createEmpty","codeColumn","textColumn","text","handleInternalFunctions","functions","token","type","affectedFields","method","url","serviceName","headers","Authorization","then","response","success","Array","isArray","concepts"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/dist/assets/functions/InternalFuntions/handleInternalFunctions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { ContentState, EditorState } from \"draft-js\";\r\n\r\nconst buildNewProps = async (field, body, values) => {\r\n  let props = {};\r\n  Object.keys(body.props[0]).forEach(prop => {\r\n    try {\r\n      const data = field.dependencies.filter(obj => obj.field.path === body.props[0][prop])[0]; // Ver cosoante o datatype e o occurrences => ACRESCENTAR O RESTO\r\n\r\n      if (data.field.datatype === \"DV_CODED_TEXT\" && data.field.upperOccurrences === 1) {\r\n        const path = body.props[0][prop].split(\".\").join(\"-\");\r\n        props[prop] = values[`${path}-value`].code !== null && values[`${path}-value`].code !== undefined ? values[`${path}-value`].code : \"\";\r\n      } else if (data.field.datatype === \"DV_IDENTIFIER\" && data.field.upperOccurrences === 1) {\r\n        const path = body.props[0][prop].split(\".\").join(\"-\");\r\n        props[prop] = values[`${path}-value`] !== null && values[`${path}-value`] !== undefined ? values[`${path}-value`] : \"\";\r\n      }\r\n    } catch (e) {\r\n      props[prop] = \"\";\r\n    }\r\n  });\r\n  const newBody = { ...body,\r\n    props: [props]\r\n  };\r\n  return newBody;\r\n};\r\n\r\nconst setValue = (field, val, setField, contextFields) => {\r\n  try {\r\n    // Ver cosoante o datatype e o occurrences => ACRESCENTAR O RESTO\r\n    if (field.datatype === \"DV_IDENTIFIER\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n\r\n      if (val[field.resColumn] !== null) {\r\n        const value = val[field.resColumn];\r\n        setField(path, value);\r\n        contextFields.updateValue(path);\r\n      } else {\r\n        setField(path, \"\");\r\n        contextFields.updateValue(path);\r\n      }\r\n    } else if (field.datatype === \"DV_TEXT\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n\r\n      if (val[field.resColumn] !== null) {\r\n        const value = EditorState.createWithContent(ContentState.createFromText(val[field.resColumn].toString()));\r\n        setField(path, value);\r\n        contextFields.updateValue(path);\r\n      } else {\r\n        const value = EditorState.createEmpty();\r\n        setField(path, value);\r\n        contextFields.updateValue(path);\r\n      }\r\n    } else if (field.datatype === \"DV_CODED_TEXT\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n\r\n      if (val[field.codeColumn] !== null && val[field.textColumn] !== null) {\r\n        const value = {\r\n          code: val[field.codeColumn],\r\n          text: val[field.textColumn]\r\n        };\r\n        setField(path, value);\r\n        contextFields.updateValue(path);\r\n      } else {\r\n        setField(path, \"\");\r\n        contextFields.updateValue(path);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    if (field.datatype === \"DV_IDENTIFIER\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n      setField(path, \"\");\r\n      contextFields.updateValue(path);\r\n    } else if (field.datatype === \"DV_TEXT\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n      const value = EditorState.createEmpty();\r\n      setField(path, value);\r\n      contextFields.updateValue(path);\r\n    } else if (field.datatype === \"DV_CODED_TEXT\" && field.upperOccurrences === 1) {\r\n      const path = `${field.path.split(\".\").join(\"-\")}-value`;\r\n      setField(path, \"\");\r\n      contextFields.updateValue(path);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleInternalFunctions = async (functions, setField, token, values, contextFields) => {\r\n  functions.forEach(obj => {\r\n    if (obj.type === \"Preenchimento automático de campos\") {\r\n      // Vamos fazer o setField de cada campo afetado\r\n      Object.keys(obj.affectedFields).forEach(async path => {\r\n        let body = obj.affectedFields[path].body;\r\n        let newBody = await buildNewProps(obj.affectedFields[path], body, values);\r\n        await axios({\r\n          method: obj.affectedFields[path].method,\r\n          url: `${obj.affectedFields[path].url}${obj.affectedFields[path].serviceName}`,\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          },\r\n          data: newBody\r\n        }).then(async response => {\r\n          if (response.data.success === true && Array.isArray(response.data.concepts)) {\r\n            const val = response.data.concepts[0];\r\n            await setValue(obj.affectedFields[path], val, setField, contextFields);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport { handleInternalFunctions };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}