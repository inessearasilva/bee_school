{"ast":null,"code":"import objPath from \"object-path\";\nconst replaceValuesJDT = (jdt, composition) => {\n  if (!composition) {\n    // handle the case where composition is undefined or null\n    return jdt;\n  }\n\n  // make a copy of the jdt\n  let newJDT = {\n    ...jdt\n  };\n\n  // regular expression to remove everything in the composition except the itemPath\n  const regex = /((?!value|start|end|date|time|unit).)*/g;\n\n  // get all itemPaths from the composition using the regular expression\n  const compositionKeys = Object.keys(composition).map(key => key.match(regex)[0].slice(0, -1));\n\n  // array to hold the values of selected options\n  const selectedOptionValuesSet1 = [];\n  const selectedOptionValuesSet2 = [];\n\n  // iterate through each itemPath in the composition\n  for (let index in compositionKeys) {\n    let itemPath = compositionKeys[index];\n\n    // get the corresponding item in the JDT\n    let obj = objPath.get(newJDT, itemPath);\n\n    // if the item is found, replace its value with the value from the composition\n    if (obj !== undefined) {\n      switch (obj.dataType) {\n        case \"DV_DATE_TIME\":\n          obj.value.date = composition[itemPath.concat(\".value.date\")];\n          obj.value.time = composition[itemPath.concat(\".value.time\")];\n          break;\n        case \"DV_DURATION\":\n        case \"DV_QUANTITY\":\n          obj.value.value = composition[itemPath.concat(\".value.value\")];\n          obj.value.unit = composition[itemPath.concat(\".value.unit\")];\n          break;\n        case \"DV_INTERVAL<DV_DATE>\":\n        case \"DV_INTERVAL<DV_COUNT>\":\n        case \"DV_INTERVAL<DV_TIME>\":\n          obj.value.start = composition[itemPath.concat(\".value.start\")];\n          obj.value.end = composition[itemPath.concat(\".value.end\")];\n          break;\n        case \"DV_INTERVAL<DV_DATE_TIME>\":\n          obj.value.date.start = composition[itemPath.concat(\".value.date.start\")];\n          obj.value.date.end = composition[itemPath.concat(\".value.date.end\")];\n          obj.value.time.start = composition[itemPath.concat(\".value.time.start\")];\n          obj.value.time.end = composition[itemPath.concat(\".value.time.end\")];\n          break;\n        case \"DV_INTERVAL<DV_QUANTITY>\":\n          obj.value.value.start = composition[itemPath.concat(\".value.value.start\")];\n          obj.value.value.end = composition[itemPath.concat(\".value.value.end\")];\n          obj.value.unit = composition[itemPath.concat(\".value.unit\")];\n          break;\n        default:\n          // for all other data types, replace the value property\n          if (composition[itemPath.concat(\".value\")]) {\n            obj.value = composition[itemPath.concat(\".value\")];\n\n            // if the value property is a number, add it to the selectedOptionValues array\n            if (obj.value && typeof obj.value.value === \"number\") {\n              if (obj.itemPath.startsWith(\"items.0.6\")) {\n                selectedOptionValuesSet1.push(obj.value.value);\n              } else if (obj.itemPath.startsWith(\"items.0.7\")) {\n                selectedOptionValuesSet2.push(obj.value.value);\n              }\n            }\n          }\n      }\n    }\n  }\n\n  // calculate the total score by summing the values of selected options \n  const totalScoreSet1 = selectedOptionValuesSet1.reduce((acc, curr) => acc + curr, 0);\n  if (totalScoreSet1 > 1) {\n    objPath.set(newJDT, \"items.0.6.items.6.value\", 'Possível caso de anorexia nervosa ou bulimia nervosa.');\n  } else if (selectedOptionValuesSet1.length === 4 && totalScoreSet1 === 0 || selectedOptionValuesSet1.length === 5 && totalScoreSet1 < 2) {\n    objPath.set(newJDT, \"items.0.6.items.6.value\", 'Risco relativamente baixo de ter um transtorno alimentar.');\n  } else {\n    objPath.set(newJDT, \"items.0.6.items.6.value\", null);\n  }\n\n  // calculate the total score by summing the values of selected options\n  const totalScoreSet2 = selectedOptionValuesSet2.reduce((acc, curr) => acc + curr, 0);\n  if (totalScoreSet2 > 9 && totalScoreSet2 < 51) {\n    if (totalScoreSet2 > 0 && totalScoreSet2 < 20) {\n      objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de estar bem mentalmente.');\n    } else if (totalScoreSet2 > 19 && totalScoreSet2 < 25) {\n      objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental leve.');\n    } else if (totalScoreSet2 > 24 && totalScoreSet2 < 30) {\n      objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental moderado.');\n    } else if (totalScoreSet2 > 29) {\n      objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental grave.');\n    } else {\n      objPath.set(newJDT, \"items.0.7.items.11.value\", null);\n    }\n  } else {\n    objPath.set(newJDT, \"items.0.7.items.11.value\", null);\n  }\n\n  // update the Total Score item in the JDT with the calculated value\n  objPath.set(newJDT, \"items.0.6.items.5.value\", totalScoreSet1);\n\n  // update the Total Score item in the JDT with the calculated value\n  objPath.set(newJDT, \"items.0.7.items.10.value\", totalScoreSet2);\n  return newJDT;\n};\nexport { replaceValuesJDT };","map":{"version":3,"names":["objPath","replaceValuesJDT","jdt","composition","newJDT","regex","compositionKeys","Object","keys","map","key","match","slice","selectedOptionValuesSet1","selectedOptionValuesSet2","index","itemPath","obj","get","undefined","dataType","value","date","concat","time","unit","start","end","startsWith","push","totalScoreSet1","reduce","acc","curr","set","length","totalScoreSet2"],"sources":["C:/Users/ines_/fisiosys/frontend/src/views/dashboard/SavedValues geral.js"],"sourcesContent":["import objPath from \"object-path\";\r\n\r\nconst replaceValuesJDT = (jdt, composition) => {\r\n    if (!composition) {\r\n      // handle the case where composition is undefined or null\r\n      return jdt;\r\n    }\r\n  \r\n    // make a copy of the jdt\r\n    let newJDT = { ...jdt };\r\n  \r\n    // regular expression to remove everything in the composition except the itemPath\r\n    const regex = /((?!value|start|end|date|time|unit).)*/g;\r\n  \r\n    // get all itemPaths from the composition using the regular expression\r\n    const compositionKeys = Object.keys(composition).map((key) =>\r\n      key.match(regex)[0].slice(0, -1)\r\n    );\r\n  \r\n    // array to hold the values of selected options\r\n    const selectedOptionValuesSet1 = [];\r\n    const selectedOptionValuesSet2 = [];\r\n  \r\n    // iterate through each itemPath in the composition\r\n    for (let index in compositionKeys) {\r\n      let itemPath = compositionKeys[index];\r\n  \r\n      // get the corresponding item in the JDT\r\n      let obj = objPath.get(newJDT, itemPath);\r\n  \r\n      // if the item is found, replace its value with the value from the composition\r\n      if (obj !== undefined) {\r\n        switch (obj.dataType) {\r\n          case \"DV_DATE_TIME\":\r\n            obj.value.date = composition[itemPath.concat(\".value.date\")];\r\n            obj.value.time = composition[itemPath.concat(\".value.time\")];\r\n            break;\r\n          case \"DV_DURATION\":\r\n          case \"DV_QUANTITY\":\r\n            obj.value.value = composition[itemPath.concat(\".value.value\")];\r\n            obj.value.unit = composition[itemPath.concat(\".value.unit\")];\r\n            break;\r\n          case \"DV_INTERVAL<DV_DATE>\":\r\n          case \"DV_INTERVAL<DV_COUNT>\":\r\n          case \"DV_INTERVAL<DV_TIME>\":\r\n            obj.value.start = composition[itemPath.concat(\".value.start\")];\r\n            obj.value.end = composition[itemPath.concat(\".value.end\")];\r\n            break;\r\n          case \"DV_INTERVAL<DV_DATE_TIME>\":\r\n            obj.value.date.start = composition[itemPath.concat(\".value.date.start\")];\r\n            obj.value.date.end = composition[itemPath.concat(\".value.date.end\")];\r\n            obj.value.time.start = composition[itemPath.concat(\".value.time.start\")];\r\n            obj.value.time.end = composition[itemPath.concat(\".value.time.end\")];\r\n            break;\r\n          case \"DV_INTERVAL<DV_QUANTITY>\":\r\n            obj.value.value.start = composition[itemPath.concat(\".value.value.start\")];\r\n            obj.value.value.end = composition[itemPath.concat(\".value.value.end\")];\r\n            obj.value.unit = composition[itemPath.concat(\".value.unit\")];\r\n            break;\r\n          default:\r\n            // for all other data types, replace the value property\r\n            if (composition[itemPath.concat(\".value\")]) {\r\n                obj.value = composition[itemPath.concat(\".value\")];\r\n      \r\n                // if the value property is a number, add it to the selectedOptionValues array\r\n                if (obj.value && typeof obj.value.value === \"number\") {\r\n                  if (obj.itemPath.startsWith(\"items.0.6\")) {\r\n                    selectedOptionValuesSet1.push(obj.value.value);\r\n                  } else if (obj.itemPath.startsWith(\"items.0.7\")) {\r\n                    selectedOptionValuesSet2.push(obj.value.value);\r\n                  }\r\n                }\r\n            }\r\n        }\r\n      }\r\n    }\r\n  \r\n    // calculate the total score by summing the values of selected options \r\n    const totalScoreSet1 = selectedOptionValuesSet1.reduce((acc, curr) => acc + curr, 0);\r\n\r\n    if (totalScoreSet1 >1) {\r\n      objPath.set(newJDT, \"items.0.6.items.6.value\", 'Possível caso de anorexia nervosa ou bulimia nervosa.');\r\n    } else if ( (selectedOptionValuesSet1.length === 4 && totalScoreSet1 === 0 ) || (selectedOptionValuesSet1.length === 5 && totalScoreSet1 < 2 ) ){\r\n      objPath.set(newJDT, \"items.0.6.items.6.value\", 'Risco relativamente baixo de ter um transtorno alimentar.');\r\n    } else {\r\n      objPath.set(newJDT, \"items.0.6.items.6.value\", null);\r\n    }\r\n  \r\n    // calculate the total score by summing the values of selected options\r\n    const totalScoreSet2 = selectedOptionValuesSet2.reduce((acc, curr) => acc + curr, 0);\r\n\r\n    if (totalScoreSet2 > 9 && totalScoreSet2 < 51) {\r\n      if (totalScoreSet2 > 0 && totalScoreSet2 < 20 ) {\r\n        objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de estar bem mentalmente.');\r\n      } else if ( totalScoreSet2 > 19 && totalScoreSet2 < 25 ){\r\n        objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental leve.');\r\n      } else if ( totalScoreSet2 > 24 && totalScoreSet2 < 30 ){\r\n        objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental moderado.');\r\n      } else if ( totalScoreSet2 > 29 ){\r\n        objPath.set(newJDT, \"items.0.7.items.11.value\", 'Probabilidade de ter um transtorno mental grave.');\r\n      } else {\r\n        objPath.set(newJDT, \"items.0.7.items.11.value\", null);\r\n      } \r\n    } else {\r\n    objPath.set(newJDT, \"items.0.7.items.11.value\", null);\r\n    }\r\n\r\n    // update the Total Score item in the JDT with the calculated value\r\n    objPath.set(newJDT, \"items.0.6.items.5.value\", totalScoreSet1);\r\n  \r\n    // update the Total Score item in the JDT with the calculated value\r\n    objPath.set(newJDT, \"items.0.7.items.10.value\", totalScoreSet2);\r\n\r\n    return newJDT;\r\n  };\r\n\r\n  export { replaceValuesJDT };\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}