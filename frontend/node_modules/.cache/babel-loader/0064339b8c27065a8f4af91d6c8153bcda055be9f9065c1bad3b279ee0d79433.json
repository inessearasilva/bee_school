{"ast":null,"code":"import React, { useContext } from \"react\";\nimport DateTime from \"../../../../../components/Datatypes/DateTime/DateTime\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\nvar BuildDateTimeEditMode = function BuildDateTimeEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order) {\n  var context = useContext(CombinedContext);\n  var isVisible;\n  if (!item.TaskVisible) {\n    isVisible = false;\n  } else {\n    isVisible = handleIsVisible(item, professionalTasks);\n  }\n  var isEditable;\n  if (!item.TaskEditable) {\n    isEditable = false;\n  } else {\n    isEditable = handleIsEditable(item, professionalTasks);\n  }\n  var isRM = pathArray[0] === \"rm\";\n  var parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  var parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\n  if (isVisible || item.value.date !== null && item.value.time !== null) {\n    var label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n    var arrayDate = [];\n    var arrayTime = [];\n    arrayDate.push(\"value\", \"date\");\n    arrayTime.push(\"value\", \"time\");\n    var pathLabelDate = pathArray.concat(arrayDate).join(\"-\");\n    var pathLabelTime = pathArray.concat(arrayTime).join(\"-\");\n    buildInitialValueEditMode(item, pathLabelDate, initialValues);\n    buildInitialValueEditMode(item, pathLabelTime, initialValues);\n    var ruleVisibility;\n    if (!item.ruleVisibility) {\n      ruleVisibility = true;\n    } else {\n      ruleVisibility = handleRules(item, values, \"visibility\");\n    }\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabelDate, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n      buildValidationEditMode(item, pathLabelTime, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\n    }\n    if (isVisible && ruleVisibility) {\n      if (isEditable) {\n        var ruleMandatory = handleRules(item, values, \"mandatory\");\n        return /*#__PURE__*/React.createElement(DateTime, {\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: true,\n          internalFunctions: item.InternalFunctions,\n          functions: item.Functions,\n          valueDate: values[pathLabelDate],\n          valueTime: values[pathLabelTime],\n          onDateTimeChange: setFieldValue,\n          label: label,\n          path: pathArray.join(\".\"),\n          pathLabelDate: pathLabelDate,\n          pathLabelTime: pathLabelTime,\n          errorDate: touched[pathLabelDate] && errors[pathLabelDate] || touched[pathLabelTime] && errors[pathLabelDate],\n          errorTime: touched[pathLabelTime] && errors[pathLabelTime] || touched[pathLabelDate] && errors[pathLabelTime],\n          onTouch: setFieldTouched,\n          sectionOccurrence: itemSection[itemSection.length - 1],\n          optional: item.occurrences.lowerOccurrences === 0,\n          optionalMandatory: !ruleMandatory,\n          description: item.node === null ? \"\" : item.node.description,\n          order: order ? order[pathArray.join(\".\")] : null,\n          excludePastDates: item.excludePastDates ? item.excludePastDates : false\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(DateTime, {\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          valueDate: values[pathLabelDate] === \"\" ? \"\" : values[pathLabelDate],\n          valueTime: values[pathLabelTime] === \"\" ? \"\" : values[pathLabelTime],\n          label: item.node === null ? item.text : item.node.text,\n          description: item.node === null ? \"\" : item.node.description,\n          order: order ? order[pathArray.join(\".\")] : null\n        });\n      }\n    }\n  }\n};\nexport default BuildDateTimeEditMode;","map":{"version":3,"names":["React","useContext","DateTime","buildValidationEditMode","buildInitialValueEditMode","handleIsVisible","handleIsEditable","handleRules","firstAnyItem","CombinedContext","getParent","BuildDateTimeEditMode","item","itemIndex","pathArray","setFieldValue","values","errors","touched","setFieldTouched","isAny","cardinalityObject","sectionValidation","initialValues","validationSchema","itemSection","multipleSections","professionalTasks","order","context","isVisible","TaskVisible","isEditable","TaskEditable","isRM","parentSection","parentPath","split","composition","template","parentSectionVisibility","indexOf","value","date","time","label","itemName","node","text","arrayDate","arrayTime","push","pathLabelDate","concat","join","pathLabelTime","ruleVisibility","ruleMandatory","createElement","key","showLabel","editMode","internalFunctions","InternalFunctions","functions","Functions","valueDate","valueTime","onDateTimeChange","path","errorDate","errorTime","onTouch","sectionOccurrence","length","optional","occurrences","lowerOccurrences","optionalMandatory","description","excludePastDates"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemEditMode/BuildDateTime/BuildDateTime.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport DateTime from \"../../../../../components/Datatypes/DateTime/DateTime\";\r\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\r\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\r\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\r\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\r\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\r\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\r\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\r\n\r\nconst BuildDateTimeEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order) => {\r\n  const context = useContext(CombinedContext);\r\n  let isVisible;\r\n\r\n  if (!item.TaskVisible) {\r\n    isVisible = false;\r\n  } else {\r\n    isVisible = handleIsVisible(item, professionalTasks);\r\n  }\r\n\r\n  let isEditable;\r\n\r\n  if (!item.TaskEditable) {\r\n    isEditable = false;\r\n  } else {\r\n    isEditable = handleIsEditable(item, professionalTasks);\r\n  }\r\n\r\n  const isRM = pathArray[0] === \"rm\";\r\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\r\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\r\n\r\n  if (isVisible || item.value.date !== null && item.value.time !== null) {\r\n    const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\r\n    let arrayDate = [];\r\n    let arrayTime = [];\r\n    arrayDate.push(\"value\", \"date\");\r\n    arrayTime.push(\"value\", \"time\");\r\n    const pathLabelDate = pathArray.concat(arrayDate).join(\"-\");\r\n    const pathLabelTime = pathArray.concat(arrayTime).join(\"-\");\r\n    buildInitialValueEditMode(item, pathLabelDate, initialValues);\r\n    buildInitialValueEditMode(item, pathLabelTime, initialValues);\r\n    let ruleVisibility;\r\n\r\n    if (!item.ruleVisibility) {\r\n      ruleVisibility = true;\r\n    } else {\r\n      ruleVisibility = handleRules(item, values, \"visibility\");\r\n    }\r\n\r\n    if (isEditable && parentSectionVisibility) {\r\n      buildValidationEditMode(item, pathLabelDate, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\r\n      buildValidationEditMode(item, pathLabelTime, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections);\r\n    }\r\n\r\n    if (isVisible && ruleVisibility) {\r\n      if (isEditable) {\r\n        const ruleMandatory = handleRules(item, values, \"mandatory\");\r\n        return /*#__PURE__*/React.createElement(DateTime, {\r\n          key: itemIndex,\r\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n          editMode: true,\r\n          internalFunctions: item.InternalFunctions,\r\n          functions: item.Functions,\r\n          valueDate: values[pathLabelDate],\r\n          valueTime: values[pathLabelTime],\r\n          onDateTimeChange: setFieldValue,\r\n          label: label,\r\n          path: pathArray.join(\".\"),\r\n          pathLabelDate: pathLabelDate,\r\n          pathLabelTime: pathLabelTime,\r\n          errorDate: touched[pathLabelDate] && errors[pathLabelDate] || touched[pathLabelTime] && errors[pathLabelDate],\r\n          errorTime: touched[pathLabelTime] && errors[pathLabelTime] || touched[pathLabelDate] && errors[pathLabelTime],\r\n          onTouch: setFieldTouched,\r\n          sectionOccurrence: itemSection[itemSection.length - 1],\r\n          optional: item.occurrences.lowerOccurrences === 0,\r\n          optionalMandatory: !ruleMandatory,\r\n          description: item.node === null ? \"\" : item.node.description,\r\n          order: order ? order[pathArray.join(\".\")] : null,\r\n          excludePastDates: item.excludePastDates ? item.excludePastDates : false\r\n        });\r\n      } else {\r\n        return /*#__PURE__*/React.createElement(DateTime, {\r\n          key: itemIndex,\r\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n          editMode: false,\r\n          path: pathArray.join(\".\"),\r\n          valueDate: values[pathLabelDate] === \"\" ? \"\" : values[pathLabelDate],\r\n          valueTime: values[pathLabelTime] === \"\" ? \"\" : values[pathLabelTime],\r\n          label: item.node === null ? item.text : item.node.text,\r\n          description: item.node === null ? \"\" : item.node.description,\r\n          order: order ? order[pathArray.join(\".\")] : null\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default BuildDateTimeEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}