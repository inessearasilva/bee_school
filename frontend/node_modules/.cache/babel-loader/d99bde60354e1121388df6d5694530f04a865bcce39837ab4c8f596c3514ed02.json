{"ast":null,"code":"const buildQuantityInitialValue = (item, pathLabel, initialValues) => {\n  let pathLabelArray = pathLabel.split(\"-\");\n  if (pathLabelArray[pathLabelArray.length - 1] === \"unit\") {\n    let defaultUnit = null;\n    if (item.default) {\n      if (item.default.unit) {\n        defaultUnit = item.default.unit;\n      }\n    }\n    let unitsList = [];\n    if (Array.isArray(item.units)) {\n      item.units.forEach(obj => {\n        unitsList.push(obj.unit);\n      });\n    } else {\n      unitsList.push(item.units.unit);\n    }\n    let unit; // Se houver mais do que uma unidade, vou meter o default value se houver\n\n    if (unitsList.length > 1) {\n      // Só é colocado o default quando não há valor definido no item.value.unit e se o defaultValue for diferente de null\n      unit = item.value.unit === null ? defaultUnit !== null ? defaultUnit : \"\" : item.value.unit;\n    } else {\n      // Se só houver uma unidade não ponho nada na unidade \n      unit = item.value.unit === null ? \"\" : item.value.unit;\n    }\n    initialValues[pathLabel] = unit;\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"value\") {\n    let quantity = item.value.value === null ? \"\" : item.value.value;\n    initialValues[pathLabel] = quantity;\n  }\n};\nexport { buildQuantityInitialValue };","map":{"version":3,"names":["buildQuantityInitialValue","item","pathLabel","initialValues","pathLabelArray","split","length","defaultUnit","default","unit","unitsList","Array","isArray","units","forEach","obj","push","value","quantity"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/FormInitialValues/BuildQuantityInitialValue/BuildQuantityInitialValue.js"],"sourcesContent":["const buildQuantityInitialValue = (item, pathLabel, initialValues) => {\r\n  let pathLabelArray = pathLabel.split(\"-\");\r\n\r\n  if (pathLabelArray[pathLabelArray.length - 1] === \"unit\") {\r\n    let defaultUnit = null;\r\n\r\n    if (item.default) {\r\n      if (item.default.unit) {\r\n        defaultUnit = item.default.unit;\r\n      }\r\n    }\r\n\r\n    let unitsList = [];\r\n\r\n    if (Array.isArray(item.units)) {\r\n      item.units.forEach(obj => {\r\n        unitsList.push(obj.unit);\r\n      });\r\n    } else {\r\n      unitsList.push(item.units.unit);\r\n    }\r\n\r\n    let unit; // Se houver mais do que uma unidade, vou meter o default value se houver\r\n\r\n    if (unitsList.length > 1) {\r\n      // Só é colocado o default quando não há valor definido no item.value.unit e se o defaultValue for diferente de null\r\n      unit = item.value.unit === null ? defaultUnit !== null ? defaultUnit : \"\" : item.value.unit;\r\n    } else {\r\n      // Se só houver uma unidade não ponho nada na unidade \r\n      unit = item.value.unit === null ? \"\" : item.value.unit;\r\n    }\r\n\r\n    initialValues[pathLabel] = unit;\r\n  } else if (pathLabelArray[pathLabelArray.length - 1] === \"value\") {\r\n    let quantity = item.value.value === null ? \"\" : item.value.value;\r\n    initialValues[pathLabel] = quantity;\r\n  }\r\n};\r\n\r\nexport { buildQuantityInitialValue };"],"mappings":"AAAA,MAAMA,yBAAyB,GAAG,CAACC,IAAI,EAAEC,SAAS,EAAEC,aAAa,KAAK;EACpE,IAAIC,cAAc,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC;EAEzC,IAAID,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;IACxD,IAAIC,WAAW,GAAG,IAAI;IAEtB,IAAIN,IAAI,CAACO,OAAO,EAAE;MAChB,IAAIP,IAAI,CAACO,OAAO,CAACC,IAAI,EAAE;QACrBF,WAAW,GAAGN,IAAI,CAACO,OAAO,CAACC,IAAI;MACjC;IACF;IAEA,IAAIC,SAAS,GAAG,EAAE;IAElB,IAAIC,KAAK,CAACC,OAAO,CAACX,IAAI,CAACY,KAAK,CAAC,EAAE;MAC7BZ,IAAI,CAACY,KAAK,CAACC,OAAO,CAACC,GAAG,IAAI;QACxBL,SAAS,CAACM,IAAI,CAACD,GAAG,CAACN,IAAI,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,SAAS,CAACM,IAAI,CAACf,IAAI,CAACY,KAAK,CAACJ,IAAI,CAAC;IACjC;IAEA,IAAIA,IAAI,CAAC,CAAC;;IAEV,IAAIC,SAAS,CAACJ,MAAM,GAAG,CAAC,EAAE;MACxB;MACAG,IAAI,GAAGR,IAAI,CAACgB,KAAK,CAACR,IAAI,KAAK,IAAI,GAAGF,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAG,EAAE,GAAGN,IAAI,CAACgB,KAAK,CAACR,IAAI;IAC7F,CAAC,MAAM;MACL;MACAA,IAAI,GAAGR,IAAI,CAACgB,KAAK,CAACR,IAAI,KAAK,IAAI,GAAG,EAAE,GAAGR,IAAI,CAACgB,KAAK,CAACR,IAAI;IACxD;IAEAN,aAAa,CAACD,SAAS,CAAC,GAAGO,IAAI;EACjC,CAAC,MAAM,IAAIL,cAAc,CAACA,cAAc,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,EAAE;IAChE,IAAIY,QAAQ,GAAGjB,IAAI,CAACgB,KAAK,CAACA,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGhB,IAAI,CAACgB,KAAK,CAACA,KAAK;IAChEd,aAAa,CAACD,SAAS,CAAC,GAAGgB,QAAQ;EACrC;AACF,CAAC;AAED,SAASlB,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}