{"ast":null,"code":"import React, { useContext, useEffect, useState } from \"react\";\nimport WysiwygTextEditor from \"../../../../../components/Datatypes/WysiwygTextEditor/WysiwygTextEditor\";\nimport TextInput from \"../../../../../components/Datatypes/TextInput/TextInput\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\nconst BuildTextEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, datatype, templateRules, idJDT) => {\n  const context = useContext(CombinedContext);\n  const isRM = pathArray[0] === \"rm\";\n  const isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks);\n  const isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\n  const initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\n  const initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\n  const [ruleVisibility, setRuleVisibility] = useState(initialRuleVisibility);\n  const [ruleMandatory, setRuleMandatory] = useState(initialRuleMandatory);\n  const [isFieldEditable, setFieldEditable] = useState(true);\n  const [conditionValues, setConditionValues] = useState({});\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  let array = [];\n  array.push(\"value\");\n  const pathLabel = pathArray.concat(array).join(\"-\");\n  const path = pathArray.join(\".\");\n  const dlmConditions = getDLMConditions(item, templateRules);\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\n  useEffect(() => {\n    const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\n      if (values[key]._immutable) {\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\n      } else {\n        obj[key] = values[key];\n      }\n      return obj;\n    }, {});\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\n      setConditionValues(newConditionValues);\n    }\n  }, [values, dlmConditions, conditionValues]);\n  useEffect(() => {\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\n    setFieldEditable(isEditable);\n    setFieldValue(pathLabel, initialValues[pathLabel]);\n    setRuleVisibility(initialRuleVisibility);\n    setRuleMandatory(initialRuleMandatory);\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\n        for (const rule of rules[0]) {\n          if (rule.itemPath === path) {\n            const value = rule.value;\n            const action = rule.action;\n            switch (action) {\n              case \"isEqualTo\":\n                setFieldValue(pathLabel, value);\n                break;\n              case \"isNotEditable\":\n                setFieldEditable(false);\n                break;\n              case \"isMandatory\":\n                setRuleMandatory(true);\n                break;\n              case \"isVisible\":\n                setRuleVisibility(true);\n                break;\n              case \"isNotVisible\":\n                setRuleVisibility(false);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n        context.dlm.updateIsDlmFinished(true);\n      } else {\n        context.dlm.updateIsDlmFinished(true);\n      }\n    });\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\n  if (isVisible || item.value !== null) {\n    buildInitialValueEditMode(item, pathLabel, initialValues);\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\n    }\n    if (isVisible && ruleVisibility) {\n      if (isEditable) {\n        if (datatype) {\n          if (datatype === \"editor\") {\n            return /*#__PURE__*/React.createElement(WysiwygTextEditor, {\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              path: pathArray.join(\".\"),\n              value: values[pathLabel],\n              onTextChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n              order: order ? order[pathArray.join(\".\")] : null\n            });\n          } else if (datatype === \"textarea\" || datatype === \"input\") {\n            return /*#__PURE__*/React.createElement(TextInput, {\n              inputType: datatype,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              path: pathArray.join(\".\"),\n              value: values[pathLabel],\n              onTextInputChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n              order: order ? order[pathArray.join(\".\")] : null\n            });\n          }\n        } else {\n          // Por default é o textInput do tipo input\n          return /*#__PURE__*/React.createElement(TextInput, {\n            inputType: \"input\",\n            key: itemIndex,\n            showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n            editMode: true,\n            isFieldEditable: isFieldEditable,\n            path: pathArray.join(\".\"),\n            value: values[pathLabel],\n            onTextInputChange: setFieldValue,\n            label: label,\n            pathLabel: pathLabel,\n            error: touched[pathLabel] && errors[pathLabel],\n            onTouch: setFieldTouched,\n            sectionOccurrence: itemSection[itemSection.length - 1],\n            optional: item.occurrences.lowerOccurrences === 0,\n            optionalMandatory: !ruleMandatory,\n            description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n            order: order ? order[pathArray.join(\".\")] : null\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(WysiwygTextEditor, {\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          value: item.value === null ? \"\" : item.value,\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n          order: order ? order[pathArray.join(\".\")] : null\n        });\n      }\n    }\n  }\n};\nexport default BuildTextEditMode;","map":{"version":3,"names":["React","useContext","useEffect","useState","WysiwygTextEditor","TextInput","buildValidationEditMode","buildInitialValueEditMode","handleIsVisible","handleIsEditable","handleRules","firstAnyItem","getDLMConditions","checkDLMRules","CombinedContext","getParent","BuildTextEditMode","item","itemIndex","pathArray","setFieldValue","values","errors","touched","setFieldTouched","isAny","cardinalityObject","sectionValidation","initialValues","validationSchema","itemSection","multipleSections","professionalTasks","order","datatype","templateRules","idJDT","context","isRM","isEditable","TaskEditable","isVisible","TaskVisible","initialRuleVisibility","ruleVisibility","initialRuleMandatory","ruleMandatory","setRuleVisibility","setRuleMandatory","isFieldEditable","setFieldEditable","conditionValues","setConditionValues","label","itemName","node","text","array","push","pathLabel","concat","join","path","dlmConditions","parentSection","parentPath","split","composition","template","parentSectionVisibility","indexOf","newConditionValues","Object","keys","filter","key","includes","reduce","obj","_immutable","getCurrentContent","getPlainText","JSON","stringify","token","dlm","updateIsDlmFinished","dlmRules","then","rules","Array","isArray","length","rule","itemPath","value","action","createElement","showLabel","editMode","onTextChange","error","onTouch","sectionOccurrence","optional","occurrences","lowerOccurrences","optionalMandatory","description","inputType","onTextInputChange"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemEditMode/BuildText/BuildText.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport WysiwygTextEditor from \"../../../../../components/Datatypes/WysiwygTextEditor/WysiwygTextEditor\";\nimport TextInput from \"../../../../../components/Datatypes/TextInput/TextInput\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\n\nconst BuildTextEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, datatype, templateRules, idJDT) => {\n  const context = useContext(CombinedContext);\n  const isRM = pathArray[0] === \"rm\";\n  const isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks);\n  const isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\n  const initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\n  const initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\n  const [ruleVisibility, setRuleVisibility] = useState(initialRuleVisibility);\n  const [ruleMandatory, setRuleMandatory] = useState(initialRuleMandatory);\n  const [isFieldEditable, setFieldEditable] = useState(true);\n  const [conditionValues, setConditionValues] = useState({});\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  let array = [];\n  array.push(\"value\");\n  const pathLabel = pathArray.concat(array).join(\"-\");\n  const path = pathArray.join(\".\");\n  const dlmConditions = getDLMConditions(item, templateRules);\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false;\n  useEffect(() => {\n    const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\n      if (values[key]._immutable) {\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\n      } else {\n        obj[key] = values[key];\n      }\n\n      return obj;\n    }, {});\n\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\n      setConditionValues(newConditionValues);\n    }\n  }, [values, dlmConditions, conditionValues]);\n  useEffect(() => {\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\n    setFieldEditable(isEditable);\n    setFieldValue(pathLabel, initialValues[pathLabel]);\n    setRuleVisibility(initialRuleVisibility);\n    setRuleMandatory(initialRuleMandatory);\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\n        for (const rule of rules[0]) {\n          if (rule.itemPath === path) {\n            const value = rule.value;\n            const action = rule.action;\n\n            switch (action) {\n              case \"isEqualTo\":\n                setFieldValue(pathLabel, value);\n                break;\n\n              case \"isNotEditable\":\n                setFieldEditable(false);\n                break;\n\n              case \"isMandatory\":\n                setRuleMandatory(true);\n                break;\n\n              case \"isVisible\":\n                setRuleVisibility(true);\n                break;\n\n              case \"isNotVisible\":\n                setRuleVisibility(false);\n                break;\n\n              default:\n                break;\n            }\n          }\n        }\n\n        context.dlm.updateIsDlmFinished(true);\n      } else {\n        context.dlm.updateIsDlmFinished(true);\n      }\n    });\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\n\n  if (isVisible || item.value !== null) {\n    buildInitialValueEditMode(item, pathLabel, initialValues);\n\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\n    }\n\n    if (isVisible && ruleVisibility) {\n      if (isEditable) {\n        if (datatype) {\n          if (datatype === \"editor\") {\n            return /*#__PURE__*/React.createElement(WysiwygTextEditor, {\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              path: pathArray.join(\".\"),\n              value: values[pathLabel],\n              onTextChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n              order: order ? order[pathArray.join(\".\")] : null\n            });\n          } else if (datatype === \"textarea\" || datatype === \"input\") {\n            return /*#__PURE__*/React.createElement(TextInput, {\n              inputType: datatype,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              path: pathArray.join(\".\"),\n              value: values[pathLabel],\n              onTextInputChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n              order: order ? order[pathArray.join(\".\")] : null\n            });\n          }\n        } else {\n          // Por default é o textInput do tipo input\n          return /*#__PURE__*/React.createElement(TextInput, {\n            inputType: \"input\",\n            key: itemIndex,\n            showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n            editMode: true,\n            isFieldEditable: isFieldEditable,\n            path: pathArray.join(\".\"),\n            value: values[pathLabel],\n            onTextInputChange: setFieldValue,\n            label: label,\n            pathLabel: pathLabel,\n            error: touched[pathLabel] && errors[pathLabel],\n            onTouch: setFieldTouched,\n            sectionOccurrence: itemSection[itemSection.length - 1],\n            optional: item.occurrences.lowerOccurrences === 0,\n            optionalMandatory: !ruleMandatory,\n            description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n            order: order ? order[pathArray.join(\".\")] : null\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(WysiwygTextEditor, {\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          value: item.value === null ? \"\" : item.value,\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n          order: order ? order[pathArray.join(\".\")] : null\n        });\n      }\n    }\n  }\n};\n\nexport default BuildTextEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}