{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Dropdown from \"../../../../../components/Datatypes/Dropdown/Dropdown\";\nimport MultiSelect from \"../../../../../components/Datatypes/MultiSelect/MultiSelect\";\nimport RadioBox from \"../../../../../components/Datatypes/RadioBox/RadioBox\";\nimport RadioBoxMultiple from \"../../../../../components/Datatypes/RadioBoxMultiple/RadioBoxMultiple\";\nimport SelectSearch from \"../../../../../components/Datatypes/SelectSearch/SelectSearch\";\nimport MultipleSelectSearch from \"../../../../../components/Datatypes/MultipleSelectSearch/MultipleSelectSearch\";\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\nvar BuildCodedTextEditMode = function BuildCodedTextEditMode(item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, datatype, templateRules, idJDT) {\n  var context = useContext(CombinedContext);\n  var isRM = pathArray[0] === \"rm\";\n  var isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks); // VER PORQUE É QUE HÁ DOIS TIPOS DE VISIBILIDADE A CUMPRIR\n\n  var isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\n  var initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\n  var initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\n  var _useState = useState(initialRuleVisibility),\n    _useState2 = _slicedToArray(_useState, 2),\n    ruleVisibility = _useState2[0],\n    setRuleVisibility = _useState2[1];\n  var _useState3 = useState(initialRuleMandatory),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ruleMandatory = _useState4[0],\n    setRuleMandatory = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFieldEditable = _useState6[0],\n    setFieldEditable = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    conditionValues = _useState8[0],\n    setConditionValues = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    conceptsData = _useState10[0],\n    setConceptsData = _useState10[1];\n  var label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\n  var array = [];\n  array.push(\"value\");\n  var pathLabel = pathArray.concat(array).join(\"-\");\n  var path = pathArray.join(\".\");\n  var dlmConditions = getDLMConditions(item, templateRules);\n  var parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\n  var parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false; // primeiro ciclo que corre sempre que os valores dos campos do formulário são alterados\n  // serve para verificar se houve alterações nos valores das condições associadas a um item\n\n  useEffect(function () {\n    var newConditionValues = Object.keys(values).filter(function (key) {\n      return dlmConditions.includes(key);\n    }).reduce(function (obj, key) {\n      if (values[key]._immutable) {\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\n      } else {\n        obj[key] = values[key];\n      }\n      return obj;\n    }, {});\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\n      setConditionValues(newConditionValues);\n    }\n  }, [values, dlmConditions, conditionValues]); // segundo ciclo -> apenas corre quando os valores das condições são alterados\n  // serve para verificar se há alguma regra a executar, se o checkDLMRules for vazio não faz nada\n\n  useEffect(function () {\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\n    setFieldEditable(isEditable);\n    setFieldValue(pathLabel, initialValues[pathLabel]);\n    setConceptsData([]);\n    setRuleVisibility(initialRuleVisibility);\n    setRuleMandatory(initialRuleMandatory);\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(function (rules) {\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\n        var _iterator = _createForOfIteratorHelper(rules[0]),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var rule = _step.value;\n            if (rule.itemPath === path) {\n              var value = rule.value;\n              var action = rule.action;\n              switch (action) {\n                case \"isEqualTo\":\n                  setFieldValue(pathLabel, value);\n                  break;\n                case \"isEqualToBinding\":\n                  setConceptsData(value);\n                  break;\n                case \"isNotEditable\":\n                  setFieldEditable(false);\n                  break;\n                case \"isMandatory\":\n                  setRuleMandatory(true);\n                  break;\n                case \"isVisible\":\n                  setRuleVisibility(true);\n                  break;\n                case \"isNotVisible\":\n                  setRuleVisibility(false);\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        context.dlm.updateIsDlmFinished(true);\n      } else {\n        context.dlm.updateIsDlmFinished(true);\n      }\n    });\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\n  if (isVisible || item.value !== null) {\n    buildInitialValueEditMode(item, pathLabel, initialValues);\n    if (isEditable && parentSectionVisibility) {\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\n    }\n    if (isVisible && ruleVisibility) {\n      if (isEditable) {\n        var items = item.itemsList === undefined ? [] : _toConsumableArray(item.itemsList); // do tipo \"local_terms\", \"local\", \"SNOMED-CT\", \"Ereq\"\n\n        if (item.terminology_id !== \"external\" && items.length > 0 && item.occurrences.upperOccurrences === 1) {\n          if (datatype === \"radio\") {\n            return /*#__PURE__*/React.createElement(RadioBox, {\n              order: order ? order[pathArray.join(\".\")] : null,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              value: values[pathLabel],\n              values: values,\n              onRadioChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              items: items,\n              internalFunctions: item.InternalFunctions,\n              refset: item.Refset,\n              path: pathArray.join(\".\"),\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: item.node === null ? \"\" : item.node.description\n            });\n          } else {\n            // default\n            return /*#__PURE__*/React.createElement(Dropdown, {\n              order: order ? order[pathArray.join(\".\")] : null,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              value: values[pathLabel],\n              values: values,\n              onDropdownChange: setFieldValue,\n              label: label,\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              internalFunctions: item.InternalFunctions,\n              items: items,\n              refset: item.Refset,\n              path: pathArray.join(\".\"),\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: item.node === null ? \"\" : item.node.description\n            });\n          }\n        } // do tipo \"local_terms\", \"local\", \"SNOMED-CT\", \"Ereq\"\n        else if (item.terminology_id !== \"external\" && items.length > 0 && item.occurrences.upperOccurrences !== 1) {\n          if (datatype === \"radio\") {\n            return /*#__PURE__*/React.createElement(RadioBoxMultiple, {\n              order: order ? order[pathArray.join(\".\")] : null,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              value: values[pathLabel],\n              values: values,\n              onRadioMultipleChange: setFieldValue,\n              label: label,\n              path: pathArray.join(\".\"),\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              items: items,\n              internalFunctions: item.InternalFunctions,\n              refset: item.Refset,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n            });\n          } else {\n            // default\n            return /*#__PURE__*/React.createElement(MultiSelect, {\n              order: order ? order[pathArray.join(\".\")] : null,\n              key: itemIndex,\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n              editMode: true,\n              isFieldEditable: isFieldEditable,\n              value: values[pathLabel],\n              values: values,\n              onMultiselectChange: setFieldValue,\n              label: label,\n              path: pathArray.join(\".\"),\n              pathLabel: pathLabel,\n              error: touched[pathLabel] && errors[pathLabel],\n              onTouch: setFieldTouched,\n              items: items,\n              internalFunctions: item.InternalFunctions,\n              refset: item.Refset,\n              sectionOccurrence: itemSection[itemSection.length - 1],\n              optional: item.occurrences.lowerOccurrences === 0,\n              optionalMandatory: !ruleMandatory,\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n            });\n          }\n        } else if ((item.terminology_id === \"external\" || items.length === 0) && item.occurrences.upperOccurrences === 1) {\n          return /*#__PURE__*/React.createElement(SelectSearch, {\n            order: order ? order[pathArray.join(\".\")] : null,\n            key: itemIndex,\n            showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n            editMode: true,\n            isFieldEditable: isFieldEditable,\n            value: values[pathLabel],\n            values: values,\n            onSelectSearchChange: setFieldValue,\n            label: label,\n            path: pathArray.join(\".\"),\n            pathLabel: pathLabel,\n            error: touched[pathLabel] && errors[pathLabel],\n            onTouch: setFieldTouched,\n            internalFunctions: item.InternalFunctions,\n            refset: item.Refset,\n            sectionOccurrence: itemSection[itemSection.length - 1],\n            optional: item.occurrences.lowerOccurrences === 0,\n            optionalMandatory: !ruleMandatory,\n            description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n            concepts: conceptsData\n          });\n        } else if ((item.terminology_id === \"external\" || items.length === 0) && item.occurrences.upperOccurrences !== 1) {\n          return /*#__PURE__*/React.createElement(MultipleSelectSearch, {\n            order: order ? order[pathArray.join(\".\")] : null,\n            key: itemIndex,\n            showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n            editMode: true,\n            isFieldEditable: isFieldEditable,\n            value: values[pathLabel],\n            values: values,\n            onMultiSelectSearchChange: setFieldValue,\n            label: label,\n            path: pathArray.join(\".\"),\n            pathLabel: pathLabel,\n            error: touched[pathLabel] && errors[pathLabel],\n            onTouch: setFieldTouched,\n            internalFunctions: item.InternalFunctions,\n            refset: item.Refset,\n            sectionOccurrence: itemSection[itemSection.length - 1],\n            optional: item.occurrences.lowerOccurrences === 0,\n            optionalMandatory: !ruleMandatory,\n            description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\n            concepts: conceptsData\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Dropdown, {\n          order: order ? order[pathArray.join(\".\")] : null,\n          key: itemIndex,\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\n          editMode: false,\n          path: pathArray.join(\".\"),\n          value: values[pathLabel] === \"\" ? \"\" : Array.isArray(values[pathLabel]) ? values[pathLabel].map(function (obj) {\n            return obj.text;\n          }).join(\", \") : values[pathLabel].text,\n          label: label,\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\n        });\n      }\n    }\n  }\n};\nexport default BuildCodedTextEditMode;","map":{"version":3,"names":["React","useContext","useEffect","useState","Dropdown","MultiSelect","RadioBox","RadioBoxMultiple","SelectSearch","MultipleSelectSearch","buildValidationEditMode","buildInitialValueEditMode","handleIsVisible","handleIsEditable","handleRules","firstAnyItem","checkDLMRules","getDLMConditions","CombinedContext","getParent","BuildCodedTextEditMode","item","itemIndex","pathArray","setFieldValue","values","errors","touched","setFieldTouched","isAny","cardinalityObject","sectionValidation","initialValues","validationSchema","itemSection","multipleSections","professionalTasks","order","datatype","templateRules","idJDT","context","isRM","isEditable","TaskEditable","isVisible","TaskVisible","initialRuleVisibility","ruleVisibility","initialRuleMandatory","ruleMandatory","setRuleVisibility","setRuleMandatory","isFieldEditable","setFieldEditable","conditionValues","setConditionValues","conceptsData","setConceptsData","label","itemName","node","text","array","push","pathLabel","concat","join","path","dlmConditions","parentSection","parentPath","split","composition","template","parentSectionVisibility","indexOf","newConditionValues","Object","keys","filter","key","includes","reduce","obj","_immutable","getCurrentContent","getPlainText","JSON","stringify","token","dlm","updateIsDlmFinished","dlmRules","then","rules","Array","isArray","length","rule","itemPath","value","action","items","itemsList","undefined","terminology_id","occurrences","upperOccurrences","createElement","showLabel","editMode","onRadioChange","error","onTouch","internalFunctions","InternalFunctions","refset","Refset","sectionOccurrence","optional","lowerOccurrences","optionalMandatory","description","onDropdownChange","onRadioMultipleChange","onMultiselectChange","onSelectSearchChange","concepts","onMultiSelectSearchChange","map"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/BuildItems/BuildItemEditMode/BuildCodedText/BuildCodedText.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Dropdown from \"../../../../../components/Datatypes/Dropdown/Dropdown\";\r\nimport MultiSelect from \"../../../../../components/Datatypes/MultiSelect/MultiSelect\";\r\nimport RadioBox from \"../../../../../components/Datatypes/RadioBox/RadioBox\";\r\nimport RadioBoxMultiple from \"../../../../../components/Datatypes/RadioBoxMultiple/RadioBoxMultiple\";\r\nimport SelectSearch from \"../../../../../components/Datatypes/SelectSearch/SelectSearch\";\r\nimport MultipleSelectSearch from \"../../../../../components/Datatypes/MultipleSelectSearch/MultipleSelectSearch\";\r\nimport { buildValidationEditMode } from \"../../../FormValidation/BuildValidation/BuildValidation\";\r\nimport { buildInitialValueEditMode } from \"../../../FormInitialValues/BuildInitialValue/BuildInitialValue\";\r\nimport { handleIsVisible } from \"../../../../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport { handleIsEditable } from \"../../../../../assets/functions/HandleTasks/handleIsEditable\";\r\nimport { handleRules } from \"../../../../../assets/functions/HandleRules/handleRules\";\r\nimport { firstAnyItem } from \"../../../../../assets/functions/FirstAnyItem/FirstAnyItem\";\r\nimport { checkDLMRules } from \"../../../../../assets/functions/HandleDLM/checkDLMRules\";\r\nimport { getDLMConditions } from \"../../../../../assets/functions/HandleDLM/getDLMConditions\";\r\nimport CombinedContext from \"../../../../../contexts/CombinedContext\";\r\nimport { getParent } from \"../../../../../assets/functions/GetParentItem/getParent\";\r\n\r\nconst BuildCodedTextEditMode = (item, itemIndex, pathArray, setFieldValue, values, errors, touched, setFieldTouched, isAny, cardinalityObject, sectionValidation, initialValues, validationSchema, itemSection, multipleSections, professionalTasks, order, datatype, templateRules, idJDT) => {\r\n  const context = useContext(CombinedContext);\r\n  const isRM = pathArray[0] === \"rm\";\r\n  const isEditable = !item.TaskEditable ? false : handleIsEditable(item, professionalTasks); // VER PORQUE É QUE HÁ DOIS TIPOS DE VISIBILIDADE A CUMPRIR\r\n\r\n  const isVisible = !item.TaskVisible ? false : handleIsVisible(item, professionalTasks);\r\n  const initialRuleVisibility = !item.ruleVisibility ? true : handleRules(item, values, \"visibility\");\r\n  const initialRuleMandatory = !item.ruleMandatory ? true : handleRules(item, values, \"mandatory\");\r\n  const [ruleVisibility, setRuleVisibility] = useState(initialRuleVisibility);\r\n  const [ruleMandatory, setRuleMandatory] = useState(initialRuleMandatory);\r\n  const [isFieldEditable, setFieldEditable] = useState(true);\r\n  const [conditionValues, setConditionValues] = useState({});\r\n  const [conceptsData, setConceptsData] = useState([]);\r\n  const label = isRM ? item.itemName : item.node === null ? item.text : item.node.text;\r\n  let array = [];\r\n  array.push(\"value\");\r\n  const pathLabel = pathArray.concat(array).join(\"-\");\r\n  const path = pathArray.join(\".\");\r\n  const dlmConditions = getDLMConditions(item, templateRules);\r\n  const parentSection = isRM ? getParent(item.parentPath.split(\".\"), context.composition.template) : getParent(pathArray, context.composition.template);\r\n  const parentSectionVisibility = parentSection === \"parentless\" ? true : parentSection.TaskVisible.indexOf(\"All\") > -1 ? true : false; // primeiro ciclo que corre sempre que os valores dos campos do formulário são alterados\r\n  // serve para verificar se houve alterações nos valores das condições associadas a um item\r\n\r\n  useEffect(() => {\r\n    const newConditionValues = Object.keys(values).filter(key => dlmConditions.includes(key)).reduce((obj, key) => {\r\n      if (values[key]._immutable) {\r\n        obj[key] = values[key].getCurrentContent().getPlainText(\"\\n\").split(\"\\n\")[0];\r\n      } else {\r\n        obj[key] = values[key];\r\n      }\r\n\r\n      return obj;\r\n    }, {});\r\n\r\n    if (JSON.stringify(conditionValues) !== JSON.stringify(newConditionValues)) {\r\n      setConditionValues(newConditionValues);\r\n    }\r\n  }, [values, dlmConditions, conditionValues]); // segundo ciclo -> apenas corre quando os valores das condições são alterados\r\n  // serve para verificar se há alguma regra a executar, se o checkDLMRules for vazio não faz nada\r\n\r\n  useEffect(() => {\r\n    // para o caso de haver um update nos valores do form e a regra já não se verificar\r\n    setFieldEditable(isEditable);\r\n    setFieldValue(pathLabel, initialValues[pathLabel]);\r\n    setConceptsData([]);\r\n    setRuleVisibility(initialRuleVisibility);\r\n    setRuleMandatory(initialRuleMandatory);\r\n    checkDLMRules(context.token, context.dlm.updateIsDlmFinished, idJDT, item.dlmRules, templateRules, path, pathLabel, conditionValues).then(rules => {\r\n      if (Array.isArray(rules[0]) && rules[0].length > 0) {\r\n        for (const rule of rules[0]) {\r\n          if (rule.itemPath === path) {\r\n            const value = rule.value;\r\n            const action = rule.action;\r\n\r\n            switch (action) {\r\n              case \"isEqualTo\":\r\n                setFieldValue(pathLabel, value);\r\n                break;\r\n\r\n              case \"isEqualToBinding\":\r\n                setConceptsData(value);\r\n                break;\r\n\r\n              case \"isNotEditable\":\r\n                setFieldEditable(false);\r\n                break;\r\n\r\n              case \"isMandatory\":\r\n                setRuleMandatory(true);\r\n                break;\r\n\r\n              case \"isVisible\":\r\n                setRuleVisibility(true);\r\n                break;\r\n\r\n              case \"isNotVisible\":\r\n                setRuleVisibility(false);\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n\r\n        context.dlm.updateIsDlmFinished(true);\r\n      } else {\r\n        context.dlm.updateIsDlmFinished(true);\r\n      }\r\n    });\r\n  }, [conditionValues, context.token, idJDT, initialRuleMandatory, initialRuleVisibility, isEditable, item.dlmRules, path, pathLabel, setFieldValue, templateRules]);\r\n\r\n  if (isVisible || item.value !== null) {\r\n    buildInitialValueEditMode(item, pathLabel, initialValues);\r\n\r\n    if (isEditable && parentSectionVisibility) {\r\n      buildValidationEditMode(item, pathLabel, cardinalityObject, validationSchema, itemSection, sectionValidation, multipleSections, ruleMandatory);\r\n    }\r\n\r\n    if (isVisible && ruleVisibility) {\r\n      if (isEditable) {\r\n        let items = item.itemsList === undefined ? [] : [...item.itemsList]; // do tipo \"local_terms\", \"local\", \"SNOMED-CT\", \"Ereq\"\r\n\r\n        if (item.terminology_id !== \"external\" && items.length > 0 && item.occurrences.upperOccurrences === 1) {\r\n          if (datatype === \"radio\") {\r\n            return /*#__PURE__*/React.createElement(RadioBox, {\r\n              order: order ? order[pathArray.join(\".\")] : null,\r\n              key: itemIndex,\r\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n              editMode: true,\r\n              isFieldEditable: isFieldEditable,\r\n              value: values[pathLabel],\r\n              values: values,\r\n              onRadioChange: setFieldValue,\r\n              label: label,\r\n              pathLabel: pathLabel,\r\n              error: touched[pathLabel] && errors[pathLabel],\r\n              onTouch: setFieldTouched,\r\n              items: items,\r\n              internalFunctions: item.InternalFunctions,\r\n              refset: item.Refset,\r\n              path: pathArray.join(\".\"),\r\n              sectionOccurrence: itemSection[itemSection.length - 1],\r\n              optional: item.occurrences.lowerOccurrences === 0,\r\n              optionalMandatory: !ruleMandatory,\r\n              description: item.node === null ? \"\" : item.node.description\r\n            });\r\n          } else {\r\n            // default\r\n            return /*#__PURE__*/React.createElement(Dropdown, {\r\n              order: order ? order[pathArray.join(\".\")] : null,\r\n              key: itemIndex,\r\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n              editMode: true,\r\n              isFieldEditable: isFieldEditable,\r\n              value: values[pathLabel],\r\n              values: values,\r\n              onDropdownChange: setFieldValue,\r\n              label: label,\r\n              pathLabel: pathLabel,\r\n              error: touched[pathLabel] && errors[pathLabel],\r\n              onTouch: setFieldTouched,\r\n              internalFunctions: item.InternalFunctions,\r\n              items: items,\r\n              refset: item.Refset,\r\n              path: pathArray.join(\".\"),\r\n              sectionOccurrence: itemSection[itemSection.length - 1],\r\n              optional: item.occurrences.lowerOccurrences === 0,\r\n              optionalMandatory: !ruleMandatory,\r\n              description: item.node === null ? \"\" : item.node.description\r\n            });\r\n          }\r\n        } // do tipo \"local_terms\", \"local\", \"SNOMED-CT\", \"Ereq\"\r\n        else if (item.terminology_id !== \"external\" && items.length > 0 && item.occurrences.upperOccurrences !== 1) {\r\n            if (datatype === \"radio\") {\r\n              return /*#__PURE__*/React.createElement(RadioBoxMultiple, {\r\n                order: order ? order[pathArray.join(\".\")] : null,\r\n                key: itemIndex,\r\n                showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n                editMode: true,\r\n                isFieldEditable: isFieldEditable,\r\n                value: values[pathLabel],\r\n                values: values,\r\n                onRadioMultipleChange: setFieldValue,\r\n                label: label,\r\n                path: pathArray.join(\".\"),\r\n                pathLabel: pathLabel,\r\n                error: touched[pathLabel] && errors[pathLabel],\r\n                onTouch: setFieldTouched,\r\n                items: items,\r\n                internalFunctions: item.InternalFunctions,\r\n                refset: item.Refset,\r\n                sectionOccurrence: itemSection[itemSection.length - 1],\r\n                optional: item.occurrences.lowerOccurrences === 0,\r\n                optionalMandatory: !ruleMandatory,\r\n                description: isRM ? item.description : item.node === null ? \"\" : item.node.description\r\n              });\r\n            } else {\r\n              // default\r\n              return /*#__PURE__*/React.createElement(MultiSelect, {\r\n                order: order ? order[pathArray.join(\".\")] : null,\r\n                key: itemIndex,\r\n                showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n                editMode: true,\r\n                isFieldEditable: isFieldEditable,\r\n                value: values[pathLabel],\r\n                values: values,\r\n                onMultiselectChange: setFieldValue,\r\n                label: label,\r\n                path: pathArray.join(\".\"),\r\n                pathLabel: pathLabel,\r\n                error: touched[pathLabel] && errors[pathLabel],\r\n                onTouch: setFieldTouched,\r\n                items: items,\r\n                internalFunctions: item.InternalFunctions,\r\n                refset: item.Refset,\r\n                sectionOccurrence: itemSection[itemSection.length - 1],\r\n                optional: item.occurrences.lowerOccurrences === 0,\r\n                optionalMandatory: !ruleMandatory,\r\n                description: isRM ? item.description : item.node === null ? \"\" : item.node.description\r\n              });\r\n            }\r\n          } else if ((item.terminology_id === \"external\" || items.length === 0) && item.occurrences.upperOccurrences === 1) {\r\n            return /*#__PURE__*/React.createElement(SelectSearch, {\r\n              order: order ? order[pathArray.join(\".\")] : null,\r\n              key: itemIndex,\r\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n              editMode: true,\r\n              isFieldEditable: isFieldEditable,\r\n              value: values[pathLabel],\r\n              values: values,\r\n              onSelectSearchChange: setFieldValue,\r\n              label: label,\r\n              path: pathArray.join(\".\"),\r\n              pathLabel: pathLabel,\r\n              error: touched[pathLabel] && errors[pathLabel],\r\n              onTouch: setFieldTouched,\r\n              internalFunctions: item.InternalFunctions,\r\n              refset: item.Refset,\r\n              sectionOccurrence: itemSection[itemSection.length - 1],\r\n              optional: item.occurrences.lowerOccurrences === 0,\r\n              optionalMandatory: !ruleMandatory,\r\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\r\n              concepts: conceptsData\r\n            });\r\n          } else if ((item.terminology_id === \"external\" || items.length === 0) && item.occurrences.upperOccurrences !== 1) {\r\n            return /*#__PURE__*/React.createElement(MultipleSelectSearch, {\r\n              order: order ? order[pathArray.join(\".\")] : null,\r\n              key: itemIndex,\r\n              showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n              editMode: true,\r\n              isFieldEditable: isFieldEditable,\r\n              value: values[pathLabel],\r\n              values: values,\r\n              onMultiSelectSearchChange: setFieldValue,\r\n              label: label,\r\n              path: pathArray.join(\".\"),\r\n              pathLabel: pathLabel,\r\n              error: touched[pathLabel] && errors[pathLabel],\r\n              onTouch: setFieldTouched,\r\n              internalFunctions: item.InternalFunctions,\r\n              refset: item.Refset,\r\n              sectionOccurrence: itemSection[itemSection.length - 1],\r\n              optional: item.occurrences.lowerOccurrences === 0,\r\n              optionalMandatory: !ruleMandatory,\r\n              description: isRM ? item.description : item.node === null ? \"\" : item.node.description,\r\n              concepts: conceptsData\r\n            });\r\n          }\r\n      } else {\r\n        return /*#__PURE__*/React.createElement(Dropdown, {\r\n          order: order ? order[pathArray.join(\".\")] : null,\r\n          key: itemIndex,\r\n          showLabel: !isAny || (order ? firstAnyItem(order, pathArray, isAny) : itemIndex === 0),\r\n          editMode: false,\r\n          path: pathArray.join(\".\"),\r\n          value: values[pathLabel] === \"\" ? \"\" : Array.isArray(values[pathLabel]) ? values[pathLabel].map(obj => {\r\n            return obj.text;\r\n          }).join(\", \") : values[pathLabel].text,\r\n          label: label,\r\n          description: isRM ? item.description : item.node === null ? \"\" : item.node.description\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default BuildCodedTextEditMode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}