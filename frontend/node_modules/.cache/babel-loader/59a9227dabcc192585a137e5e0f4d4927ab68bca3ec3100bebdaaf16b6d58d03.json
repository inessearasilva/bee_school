{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\nvar isSoftNewlineEvent = require(\"./isSoftNewlineEvent\");\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar KeyBindingUtil = {\n  /**\r\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\r\n   * the altKey modifier. If they are combined, the result is an `altGraph`\r\n   * key modifier, which should not be handled by this set of key bindings.\r\n   */\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n    return !!e.ctrlKey && !e.altKey;\n  },\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\n    return isOSX && e.altKey;\n  },\n  usesMacOSHeuristics: function usesMacOSHeuristics() {\n    return isOSX;\n  },\n  hasCommandModifier: function hasCommandModifier(e) {\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n  },\n  isSoftNewlineEvent: isSoftNewlineEvent\n};\nmodule.exports = KeyBindingUtil;","map":{"version":3,"names":["UserAgent","require","isSoftNewlineEvent","isOSX","isPlatform","KeyBindingUtil","isCtrlKeyCommand","e","ctrlKey","altKey","isOptionKeyCommand","usesMacOSHeuristics","hasCommandModifier","metaKey","module","exports"],"sources":["C:/Users/ines_/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/node_modules/draft-js/lib/KeyBindingUtil.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\r\n\r\nvar isSoftNewlineEvent = require(\"./isSoftNewlineEvent\");\r\n\r\nvar isOSX = UserAgent.isPlatform('Mac OS X');\r\nvar KeyBindingUtil = {\r\n  /**\r\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\r\n   * the altKey modifier. If they are combined, the result is an `altGraph`\r\n   * key modifier, which should not be handled by this set of key bindings.\r\n   */\r\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\r\n    return !!e.ctrlKey && !e.altKey;\r\n  },\r\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\r\n    return isOSX && e.altKey;\r\n  },\r\n  usesMacOSHeuristics: function usesMacOSHeuristics() {\r\n    return isOSX;\r\n  },\r\n  hasCommandModifier: function hasCommandModifier(e) {\r\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\r\n  },\r\n  isSoftNewlineEvent: isSoftNewlineEvent\r\n};\r\nmodule.exports = KeyBindingUtil;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAExD,IAAIE,KAAK,GAAGH,SAAS,CAACI,UAAU,CAAC,UAAU,CAAC;AAC5C,IAAIC,cAAc,GAAG;EACnB;AACF;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,SAASA,gBAAgB,CAACC,CAAC,EAAE;IAC7C,OAAO,CAAC,CAACA,CAAC,CAACC,OAAO,IAAI,CAACD,CAAC,CAACE,MAAM;EACjC,CAAC;EACDC,kBAAkB,EAAE,SAASA,kBAAkB,CAACH,CAAC,EAAE;IACjD,OAAOJ,KAAK,IAAII,CAAC,CAACE,MAAM;EAC1B,CAAC;EACDE,mBAAmB,EAAE,SAASA,mBAAmB,GAAG;IAClD,OAAOR,KAAK;EACd,CAAC;EACDS,kBAAkB,EAAE,SAASA,kBAAkB,CAACL,CAAC,EAAE;IACjD,OAAOJ,KAAK,GAAG,CAAC,CAACI,CAAC,CAACM,OAAO,IAAI,CAACN,CAAC,CAACE,MAAM,GAAGJ,cAAc,CAACC,gBAAgB,CAACC,CAAC,CAAC;EAC9E,CAAC;EACDL,kBAAkB,EAAEA;AACtB,CAAC;AACDY,MAAM,CAACC,OAAO,GAAGV,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}