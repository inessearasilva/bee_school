{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ines_\\\\bee_v2\\\\bee_school\\\\frontend\\\\src\\\\views\\\\dashboard\\\\Desmistificacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    // Function to check URL accessibility with a delay\n    const checkUrlWithDelay = async url => {\n      try {\n        const response = await axios.get(url);\n        return response.status === 200; // Check if the status code is 200 OK\n      } catch (error) {\n        return false; // URL is not accessible or encountered an error\n      }\n    };\n\n    const fetchData = async () => {\n      // Assuming records is an array of objects with a 'url' property\n      const newRecords = [];\n      for (const record of records) {\n        // Add a delay of 1 second (1000 milliseconds) between requests\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const isUrlAccessible = await checkUrlWithDelay(record.url);\n        if (isUrlAccessible) {\n          newRecords.push(record);\n        }\n      }\n      setRecords(newRecords);\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Accessible URL: \", record.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, record._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","MyComponent","records","setRecords","checkUrlWithDelay","url","response","get","status","error","fetchData","newRecords","record","Promise","resolve","setTimeout","isUrlAccessible","push","map","_id"],"sources":["C:/Users/ines_/bee_v2/bee_school/frontend/src/views/dashboard/Desmistificacao.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MyComponent = () => {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Function to check URL accessibility with a delay\r\n    const checkUrlWithDelay = async (url) => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response.status === 200; // Check if the status code is 200 OK\r\n      } catch (error) {\r\n        return false; // URL is not accessible or encountered an error\r\n      }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      // Assuming records is an array of objects with a 'url' property\r\n      const newRecords = [];\r\n\r\n      for (const record of records) {\r\n        // Add a delay of 1 second (1000 milliseconds) between requests\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        const isUrlAccessible = await checkUrlWithDelay(record.url);\r\n        if (isUrlAccessible) {\r\n          newRecords.push(record);\r\n        }\r\n      }\r\n\r\n      setRecords(newRecords);\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      {records.map(record => (\r\n        <div key={record._id}>\r\n          <p>Accessible URL: {record.url}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,iBAAiB,GAAG,MAAOC,GAAG,IAAK;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACF,GAAG,CAAC;QACrC,OAAOC,QAAQ,CAACE,MAAM,KAAK,GAAG,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,OAAO,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;;IAED,MAAMC,SAAS,GAAG,YAAY;MAC5B;MACA,MAAMC,UAAU,GAAG,EAAE;MAErB,KAAK,MAAMC,MAAM,IAAIV,OAAO,EAAE;QAC5B;QACA,MAAM,IAAIW,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QAEvD,MAAME,eAAe,GAAG,MAAMZ,iBAAiB,CAACQ,MAAM,CAACP,GAAG,CAAC;QAC3D,IAAIW,eAAe,EAAE;UACnBL,UAAU,CAACM,IAAI,CAACL,MAAM,CAAC;QACzB;MACF;MAEAT,UAAU,CAACQ,UAAU,CAAC;IACxB,CAAC;IAEDD,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE;IAAA,UACGR,OAAO,CAACgB,GAAG,CAACN,MAAM,iBACjB;MAAA,uBACE;QAAA,+BAAoBA,MAAM,CAACP,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAAK,GAD3BO,MAAM,CAACO,GAAG;MAAA;MAAA;MAAA;IAAA,QAGrB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA3CIlB,WAAW;AAAA,KAAXA,WAAW;AA6CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}