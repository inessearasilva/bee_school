{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar Immutable = require(\"immutable\");\nvar Map = Immutable.Map;\nfunction modifyBlockForContentState(contentState, selectionState, operation) {\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var blockMap = contentState.getBlockMap();\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(operation);\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\nmodule.exports = modifyBlockForContentState;","map":{"version":3,"names":["Immutable","require","Map","modifyBlockForContentState","contentState","selectionState","operation","startKey","getStartKey","endKey","getEndKey","blockMap","getBlockMap","newBlocks","toSeq","skipUntil","_","k","takeUntil","concat","get","map","merge","selectionBefore","selectionAfter","module","exports"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/node_modules/draft-js/lib/modifyBlockForContentState.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar Immutable = require(\"immutable\");\r\n\r\nvar Map = Immutable.Map;\r\n\r\nfunction modifyBlockForContentState(contentState, selectionState, operation) {\r\n  var startKey = selectionState.getStartKey();\r\n  var endKey = selectionState.getEndKey();\r\n  var blockMap = contentState.getBlockMap();\r\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\r\n    return k === startKey;\r\n  }).takeUntil(function (_, k) {\r\n    return k === endKey;\r\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(operation);\r\n  return contentState.merge({\r\n    blockMap: blockMap.merge(newBlocks),\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState\r\n  });\r\n}\r\n\r\nmodule.exports = modifyBlockForContentState;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAIC,GAAG,GAAGF,SAAS,CAACE,GAAG;AAEvB,SAASC,0BAA0B,CAACC,YAAY,EAAEC,cAAc,EAAEC,SAAS,EAAE;EAC3E,IAAIC,QAAQ,GAAGF,cAAc,CAACG,WAAW,EAAE;EAC3C,IAAIC,MAAM,GAAGJ,cAAc,CAACK,SAAS,EAAE;EACvC,IAAIC,QAAQ,GAAGP,YAAY,CAACQ,WAAW,EAAE;EACzC,IAAIC,SAAS,GAAGF,QAAQ,CAACG,KAAK,EAAE,CAACC,SAAS,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACzD,OAAOA,CAAC,KAAKV,QAAQ;EACvB,CAAC,CAAC,CAACW,SAAS,CAAC,UAAUF,CAAC,EAAEC,CAAC,EAAE;IAC3B,OAAOA,CAAC,KAAKR,MAAM;EACrB,CAAC,CAAC,CAACU,MAAM,CAACjB,GAAG,CAAC,CAAC,CAACO,MAAM,EAAEE,QAAQ,CAACS,GAAG,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACY,GAAG,CAACf,SAAS,CAAC;EAC/D,OAAOF,YAAY,CAACkB,KAAK,CAAC;IACxBX,QAAQ,EAAEA,QAAQ,CAACW,KAAK,CAACT,SAAS,CAAC;IACnCU,eAAe,EAAElB,cAAc;IAC/BmB,cAAc,EAAEnB;EAClB,CAAC,CAAC;AACJ;AAEAoB,MAAM,CAACC,OAAO,GAAGvB,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}