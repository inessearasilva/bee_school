{"ast":null,"code":"import { EditorState, convertFromRaw } from \"draft-js\";\nconst buildText = (item, widths, isAny, showLabel) => {\n  let label;\n  if (!isAny || isAny && showLabel === 1) {\n    label = [{\n      text: \" \",\n      border: [false, false, false, false]\n    }, {\n      text: item.node === null ? item.text : item.node.text,\n      border: [false, false, false, false],\n      style: \"label\"\n    }];\n  } else {\n    label = [{\n      text: \" \",\n      border: [false, false, false, false]\n    }, {\n      text: \" \",\n      border: [false, false, false, false],\n      style: \"label\"\n    }];\n  }\n  let field;\n  if (Array.isArray(item.value)) {\n    let texts = item.value.map(obj => {\n      return [{\n        text: \" \",\n        border: [false, false, false, false]\n      }, {\n        text: item.value === null ? \" \" : obj.value.indexOf(\"entityMap\") > -1 ? EditorState.createWithContent(convertFromRaw(JSON.parse(obj.value))).getCurrentContent().getPlainText(\"\\u0001\") : obj.value,\n        border: [true, true, true, true],\n        style: \"field\"\n      }];\n    });\n    field = {\n      table: {\n        dontBreakRows: true,\n        widths: widths,\n        body: [label, ...texts]\n      },\n      layout: {\n        hLineWidth: function (i, node) {\n          return 0.5;\n        },\n        vLineWidth: function (i, node) {\n          return 0.5;\n        },\n        hLineColor: function (i, node) {\n          return \"black\";\n        },\n        vLineColor: function (i, node) {\n          return \"black\";\n        }\n      }\n    };\n  } else {\n    field = {\n      table: {\n        dontBreakRows: true,\n        widths: widths,\n        body: [label, [{\n          text: \" \",\n          border: [false, false, false, false]\n        }, {\n          text: item.value === null ? \" \" : item.value.indexOf(\"entityMap\") > -1 ? EditorState.createWithContent(convertFromRaw(JSON.parse(item.value))).getCurrentContent().getPlainText(\"\\u0001\") : item.value,\n          border: [true, true, true, true],\n          style: \"field\"\n        }]]\n      },\n      layout: {\n        hLineWidth: function (i, node) {\n          return 0.5;\n        },\n        vLineWidth: function (i, node) {\n          return 0.5;\n        },\n        hLineColor: function (i, node) {\n          return \"black\";\n        },\n        vLineColor: function (i, node) {\n          return \"black\";\n        }\n      }\n    };\n  }\n  return field;\n};\nexport { buildText };","map":{"version":3,"names":["EditorState","convertFromRaw","buildText","item","widths","isAny","showLabel","label","text","border","node","style","field","Array","isArray","value","texts","map","obj","indexOf","createWithContent","JSON","parse","getCurrentContent","getPlainText","table","dontBreakRows","body","layout","hLineWidth","i","vLineWidth","hLineColor","vLineColor"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/PrintForm/BuildItemPDF/BuildText.js"],"sourcesContent":["import { EditorState, convertFromRaw } from \"draft-js\";\r\n\r\nconst buildText = (item, widths, isAny, showLabel) => {\r\n  let label;\r\n\r\n  if (!isAny || isAny && showLabel === 1) {\r\n    label = [{\r\n      text: \" \",\r\n      border: [false, false, false, false]\r\n    }, {\r\n      text: item.node === null ? item.text : item.node.text,\r\n      border: [false, false, false, false],\r\n      style: \"label\"\r\n    }];\r\n  } else {\r\n    label = [{\r\n      text: \" \",\r\n      border: [false, false, false, false]\r\n    }, {\r\n      text: \" \",\r\n      border: [false, false, false, false],\r\n      style: \"label\"\r\n    }];\r\n  }\r\n\r\n  let field;\r\n\r\n  if (Array.isArray(item.value)) {\r\n    let texts = item.value.map(obj => {\r\n      return [{\r\n        text: \" \",\r\n        border: [false, false, false, false]\r\n      }, {\r\n        text: item.value === null ? \" \" : obj.value.indexOf(\"entityMap\") > -1 ? EditorState.createWithContent(convertFromRaw(JSON.parse(obj.value))).getCurrentContent().getPlainText(\"\\u0001\") : obj.value,\r\n        border: [true, true, true, true],\r\n        style: \"field\"\r\n      }];\r\n    });\r\n    field = {\r\n      table: {\r\n        dontBreakRows: true,\r\n        widths: widths,\r\n        body: [label, ...texts]\r\n      },\r\n      layout: {\r\n        hLineWidth: function (i, node) {\r\n          return 0.5;\r\n        },\r\n        vLineWidth: function (i, node) {\r\n          return 0.5;\r\n        },\r\n        hLineColor: function (i, node) {\r\n          return \"black\";\r\n        },\r\n        vLineColor: function (i, node) {\r\n          return \"black\";\r\n        }\r\n      }\r\n    };\r\n  } else {\r\n    field = {\r\n      table: {\r\n        dontBreakRows: true,\r\n        widths: widths,\r\n        body: [label, [{\r\n          text: \" \",\r\n          border: [false, false, false, false]\r\n        }, {\r\n          text: item.value === null ? \" \" : item.value.indexOf(\"entityMap\") > -1 ? EditorState.createWithContent(convertFromRaw(JSON.parse(item.value))).getCurrentContent().getPlainText(\"\\u0001\") : item.value,\r\n          border: [true, true, true, true],\r\n          style: \"field\"\r\n        }]]\r\n      },\r\n      layout: {\r\n        hLineWidth: function (i, node) {\r\n          return 0.5;\r\n        },\r\n        vLineWidth: function (i, node) {\r\n          return 0.5;\r\n        },\r\n        hLineColor: function (i, node) {\r\n          return \"black\";\r\n        },\r\n        vLineColor: function (i, node) {\r\n          return \"black\";\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return field;\r\n};\r\n\r\nexport { buildText };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}