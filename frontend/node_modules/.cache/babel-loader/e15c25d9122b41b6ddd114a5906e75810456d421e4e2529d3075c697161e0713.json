{"ast":null,"code":"import _defineProperty2 from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ines_/fisiosys/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React, { Component } from \"react\";\nimport { checkIfValidObject } from \"../../assets/functions/CheckIfValidObject/CheckIfValidObject\";\nimport { handleSubmit } from \"../../assets/functions/HandleSubmit/handleSubmit\";\nimport { handleIsVisible } from \"../../assets/functions/HandleTasks/handleIsVisible\";\nimport PageContainer from \"../../components/UI/PageContainer/PageContainer\";\nimport BackgroundContext from \"../../contexts/BackgroundContext\";\nimport ChangedFieldsContext from \"../../contexts/ChangedFieldsContext\";\nimport CodigosDependenciaContext from \"../../contexts/CodigosDependenciaContext\";\nimport CompositionPlanningContext from \"../../contexts/CompositionPlanningContext\";\nimport DatatypesContext from \"../../contexts/DatatypesContext\";\nimport FontContext from \"../../contexts/FontContext\";\nimport FormDataContext from \"../../contexts/FormDataContext\";\nimport FormOrderContext from \"../../contexts/FormOrderContext\";\nimport HSizesContext from \"../../contexts/HSizesContext\";\nimport ThemeContext from \"../../contexts/ThemeContext\";\nimport TokenContext from \"../../contexts/TokenContext\";\nimport DlmContextProvider from \"../../contexts/DlmContext\";\nimport SectionArchetypeContext from \"../../contexts/SectionArchetypeContext\";\nimport FormConsultMode from \"./FormModes/FormConsultMode\";\nimport { buildJDTRules } from \"../../assets/functions/BuildJDTRules/BuildJDTRules\";\nimport { handleOrder } from \"../../assets/functions/HandleOrder/HandleOrder\";\nimport { handleOrderAnyItens } from \"../../assets/functions/HandleOrder/HandleOrderAnyItens\";\nimport FormDesignerMode from \"./FormModes/FormDesignerMode\";\nimport FormEditMode from \"./FormModes/FormEditMode\";\nimport themeColors from \"../../assets/colors/ThemeColors\";\nimport objPath from \"object-path\";\nimport FormModeContext from \"../../contexts/FormModeContext\";\nimport ReferenceModelContext from \"../../contexts/ReferenceModelContext\";\nimport { orderObjectByValue } from \"../../assets/functions/Order/orderObjectByValue\";\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n  var _super = _createSuper(Form);\n  function Form() {\n    var _this;\n    _classCallCheck(this, Form);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      editMode: false,\n      confirmEditMode: false,\n      themeColor: {},\n      backgroundColor: \"default\",\n      showPalette: false,\n      showPrint: false,\n      professionalTasks: [],\n      canSubmit: true,\n      canSave: true,\n      canCancel: true,\n      canSaveFD: true,\n      canCreateFD: true,\n      reportData: {},\n      patientData: {},\n      buttonClicked: \"\",\n      changedFields: [],\n      token: null,\n      codigosDependencia: null,\n      idJDT: null,\n      idComposition: null,\n      template: null,\n      dlm: null,\n      templateGroupId: null,\n      formDesignerMode: false,\n      formOrder: null,\n      formTitle: null,\n      datatypes: {},\n      textHeight: {},\n      showSectionTitle: {},\n      limitCharacters: {},\n      hsizes: {},\n      fileExtensions: {},\n      fileMaxSize: {},\n      referenceModel: [],\n      fontSize: {},\n      fontStyle: {},\n      fontAlignment: {},\n      fontLetters: {},\n      openCompositionPlanning: false,\n      openCompositionPlanningPath: \"\",\n      openCompositionPlanningDatatype: \"\",\n      compositionPlanning: {},\n      compositionPlanningRefsets: [],\n      compositionPlanningFunctions: [],\n      compositionPlanningInternalFunctions: [],\n      compositionPlanningTasks: [],\n      formFields: [],\n      openSectionArchetype: false,\n      openSectionArchetypeData: null,\n      sectionArchetype: {},\n      multimediaFields: [],\n      referenceModelJDT: {},\n      referenceModelForm: [],\n      formRM: []\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleChangedFields\", function (path) {\n      if (_this.state.changedFields.indexOf(path) === -1) {\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            changedFields: [].concat(_toConsumableArray(prevState.changedFields), [path])\n          });\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(values, multipleSections) {\n        var jsonValues, changedFields;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                jsonValues = handleSubmit(_this.state.template, values, _this.props.formRM);\n                multipleSections.forEach(function (section) {\n                  var path = section.path.split(\"-\").join(\".\") + \".value\";\n                  jsonValues[path] = section.values;\n                });\n                changedFields = _this.state.changedFields.map(function (path) {\n                  var newPath = path.split(\"-\").join(\".\");\n                  return newPath;\n                }).join(\";\");\n                if (typeof _this.props.onSubmit === \"function\" && _this.state.buttonClicked === \"submit\") {\n                  _this.props.onSubmit(JSON.stringify(jsonValues), changedFields);\n                  _this.setState({\n                    buttonClicked: \"\"\n                  });\n                } else if (typeof _this.props.onSave === \"function\" && _this.state.buttonClicked === \"save\") {\n                  _this.props.onSave(JSON.stringify(jsonValues), changedFields);\n                  _this.setState({\n                    buttonClicked: \"\"\n                  });\n                }\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _defineProperty(_assertThisInitialized(_this), \"handleCancelForm\", function () {\n      if (typeof _this.props.onCancel === \"function\") {\n        _this.props.onCancel(true);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFormOrder\", function (actionType, isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover) {\n      var objOrder;\n      if (actionType === \"general\") {\n        objOrder = handleOrder(isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover, _this.state.formOrder);\n      } else if (actionType === \"anyItens\") {\n        objOrder = handleOrderAnyItens(dragPath, dragOrder, hoverOrder, _this.state.formOrder);\n      }\n      _this.setState({\n        formOrder: objOrder\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRM\", function (path, key, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          referenceModelForm: prevState.referenceModelForm.map(function (item) {\n            return item.itemPath === path ? _objectSpread(_objectSpread({}, item), {}, _defineProperty2({}, key, value)) : item;\n          })\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleAddRM\", function (rmItem, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelHover, isAnyHover, dropSectionPath, dragGroupID) {\n      if (_this.state.referenceModelForm.indexOf(rmItem) === -1) {\n        //rearranjar a ordem dos componentes\n        var objOrder = handleOrder(false, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, false, showLabelHover, false, isAnyHover, _this.state.formOrder); //ir buscar o path da secção para a qual o item foi arrastado\n\n        rmItem[\"parentPath\"] = dropSectionPath;\n        rmItem[\"groupID\"] = dragGroupID; //actualizar o referenceModelForm com o componente colocado e a ordem\n\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            referenceModelForm: [].concat(_toConsumableArray(prevState.referenceModelForm), [rmItem]),\n            formOrder: objOrder\n          });\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveRM\", function (itemPathRM) {\n      var path = itemPathRM.split(\".\").splice(1); // quando se clica no botão de remoção de um componente RM é preciso:\n      // 1. apagar esse elemento do referenceModelForm\n\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          referenceModelForm: prevState.referenceModelForm.filter(function (item) {\n            return item.itemPath !== path.join(\".\");\n          })\n        });\n      }); //2. remover esse elemento do formOrder e reajustar a ordem dos restantes elementos\n      // obter a ordem do elemento que estamos a remover\n\n      var orderToRemove = _this.state.formOrder[itemPathRM]; // remover o elemento\n\n      var objOrder = _objectSpread({}, _this.state.formOrder);\n      Object.keys(objOrder).forEach(function (path) {\n        if (objOrder[path] === orderToRemove) {\n          delete objOrder[path];\n        } else if (objOrder[path] > orderToRemove) {\n          objOrder[path] = objOrder[path] - 1; //move item down\n        }\n      });\n\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          formOrder: objOrder\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleThemeColor\", function (color) {\n      _this.setState({\n        themeColor: color\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleThemePalette\", function (color, values) {\n      if (color === \"personalizada\") {\n        _this.setState({\n          themePalette: values\n        });\n      } else if (themeColors[color]) {\n        _this.setState({\n          themePalette: themeColors[color]\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCancelThemeChange\", function (previousColor, previousValues) {\n      _this.setState({\n        themeColor: previousColor,\n        themePalette: previousValues\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFontSize\", function (type, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fontSize: _objectSpread(_objectSpread({}, prevState.fontSize), {}, _defineProperty2({}, type, value))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFontStyle\", function (type, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fontStyle: _objectSpread(_objectSpread({}, prevState.fontStyle), {}, _defineProperty2({}, type, value))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFontAlignment\", function (type, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fontAlignment: _objectSpread(_objectSpread({}, prevState.fontAlignment), {}, _defineProperty2({}, type, value))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFontLetters\", function (type, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fontLetters: _objectSpread(_objectSpread({}, prevState.fontLetters), {}, _defineProperty2({}, type, value))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCancelFontChange\", function (prevSizeValues, prevStyleValues, prevLetterValues, prevAlignValues) {\n      _this.setState({\n        fontSize: prevSizeValues,\n        fontStyle: prevStyleValues,\n        fontLetters: prevLetterValues,\n        fontAlignment: prevAlignValues\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDatatypes\", function (path, datatype) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          datatypes: _objectSpread(_objectSpread({}, prevState.datatypes), {}, _defineProperty2({}, path, datatype))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleMultimediaFields\", function (path, file, format) {\n      _this.setState(function (prevState) {\n        var _ref2;\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          multimediaFields: [].concat(_toConsumableArray(prevState.multimediaFields), [(_ref2 = {}, _defineProperty2(_ref2, path, file), _defineProperty2(_ref2, \"format\", format), _ref2)])\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleTextHeight\", function (path, height) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          textHeight: _objectSpread(_objectSpread({}, prevState.textHeight), {}, _defineProperty2({}, path, height))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleSectionTitleVisibility\", function (path, isVisible) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          showSectionTitle: _objectSpread(_objectSpread({}, prevState.showSectionTitle), {}, _defineProperty2({}, path, isVisible))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleLimitCharacaters\", function (path, max) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          limitCharacters: _objectSpread(_objectSpread({}, prevState.limitCharacters), {}, _defineProperty2({}, path, max))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveField\", function (path, type) {\n      if (type === \"textHeight\") {\n        _this.setState(function (prevState) {\n          var obj = {};\n          Object.keys(prevState.textHeight).forEach(function (p) {\n            if (p !== path) {\n              obj[p] = prevState.textHeight[p];\n            }\n          });\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            textHeight: obj\n          });\n        });\n      } else if (type === \"limitCharacters\") {\n        _this.setState(function (prevState) {\n          var obj = {};\n          Object.keys(prevState.limitCharacters).forEach(function (p) {\n            if (p !== path) {\n              obj[p] = prevState.limitCharacters[p];\n            }\n          });\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            limitCharacters: obj\n          });\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleHSizes\", function (path, size) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          hsizes: _objectSpread(_objectSpread({}, prevState.hsizes), {}, _defineProperty2({}, path, size))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFileExtensions\", function (path, extensions) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fileExtensions: _objectSpread(_objectSpread({}, prevState.fileExtensions), {}, _defineProperty2({}, path, extensions))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFileMaxSize\", function (path, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fileMaxSize: _objectSpread(_objectSpread({}, prevState.fileMaxSize), {}, _defineProperty2({}, path, value))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenSectionArchetype\", function () {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (path === null) {\n        _this.setState({\n          openSectionArchetype: false,\n          openSectionArchetypeData: null\n        });\n      } else {\n        var archetype = objPath.get(_this.state.templateGroupId, path);\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            openSectionArchetype: true,\n            openSectionArchetypeData: {\n              parentPath: path,\n              parentName: archetype.node ? archetype.node.text : \"\",\n              parentOrder: prevState.formOrder[path]\n            }\n          });\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleEditSectionArchetype\", function (status, path) {\n      var newName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      if (status === \"open\") {\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            openSectionArchetype: true,\n            openSectionArchetypeData: {\n              path: path,\n              parentName: prevState.sectionArchetype[path].parentName\n            }\n          });\n        });\n      } else if (\"edit\") {\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            openSectionArchetype: false,\n            openSectionArchetypeData: null,\n            sectionArchetype: _objectSpread(_objectSpread({}, prevState.sectionArchetype), {}, _defineProperty2({}, path, _objectSpread(_objectSpread({}, prevState.sectionArchetype[path]), {}, {\n              sectionName: newName\n            })))\n          });\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveSectionArchetype\", function (path) {\n      _this.setState(function (prevState) {\n        var newSectionArchetype = {};\n        var obj = {};\n        Object.keys(prevState.sectionArchetype).forEach(function (x) {\n          if (x !== path) {\n            newSectionArchetype[x] = prevState.sectionArchetype[x];\n          }\n        });\n        Object.keys(prevState.formOrder).forEach(function (x) {\n          if (x !== path) {\n            if (prevState.formOrder[x] > prevState.formOrder[path]) {\n              obj[x] = prevState.formOrder[x] - 1;\n            } else {\n              obj[x] = prevState.formOrder[x];\n            }\n          }\n        });\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          formOrder: obj,\n          openSectionArchetype: false,\n          openSectionArchetypeData: null,\n          sectionArchetype: _objectSpread({}, newSectionArchetype)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleAddSectionArchetype\", function (sectionName, parentName, parentPath, parentOrder) {\n      _this.setState(function (prevState) {\n        // Descalar a ordem dos restantes elementos porque a secção passa a ter ordem = parentOrder + 1\n        var max = -1;\n        Object.keys(prevState.sectionArchetype).forEach(function (x) {\n          var indexID = x.indexOf(\"id\");\n          var indexStop = x.indexOf(\".\");\n          if (Number(x.slice(indexID + 2, indexStop)) > max) {\n            max = x.slice(indexID + 2, indexStop);\n          }\n        }); // O path deve ser assim para ser único e para funcionar na ordenação\n\n        var id = \"id\".concat(Number(max) + 1, \".\").concat(parentPath, \".\").concat(sectionName.replace(/\\s/g, \"\"));\n        var obj = {};\n        obj[id] = parentOrder + 1;\n        Object.keys(prevState.formOrder).forEach(function (x) {\n          if (prevState.formOrder[x] > parentOrder) {\n            obj[x] = prevState.formOrder[x] + 1;\n          } else {\n            obj[x] = prevState.formOrder[x];\n          }\n        }); // Ir buscar o groupID do item a seguir à secção => poder ser um item/secção normal ou um any item\n\n        var nextGroupID = objPath.get(_this.state.templateGroupId, \"\".concat(parentPath, \".items.0\")).groupID !== undefined ? objPath.get(_this.state.templateGroupId, \"\".concat(parentPath, \".items.0\")).groupID : objPath.get(_this.state.templateGroupId, \"\".concat(parentPath, \".items.0.0\")).groupID;\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          formOrder: obj,\n          openSectionArchetype: false,\n          openSectionArchetypeData: null,\n          sectionArchetype: _objectSpread(_objectSpread({}, prevState.sectionArchetype), {}, _defineProperty2({}, id, {\n            sectionName: sectionName,\n            groupID: nextGroupID,\n            parentName: parentName,\n            parentPath: parentPath\n          }))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenCompositionPlanning\", function (path, datatype) {\n      if (path === _this.state.openCompositionPlanningPath) {\n        _this.setState({\n          openCompositionPlanning: false,\n          openCompositionPlanningPath: \"\",\n          openCompositionPlanningDatatype: \"\"\n        });\n      } else {\n        _this.setState({\n          openCompositionPlanning: true,\n          openCompositionPlanningPath: path,\n          openCompositionPlanningDatatype: datatype\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCompositionPlanning\", function (path, key, value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          compositionPlanning: _objectSpread(_objectSpread({}, prevState.compositionPlanning), {}, _defineProperty2({}, path, _objectSpread(_objectSpread({}, prevState.compositionPlanning[path]), {}, _defineProperty2({}, key, value))))\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateFormTitle\", function (newName) {\n      _this.setState({\n        formTitle: newName\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateCompositionPlanningRefsets\", function (value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          compositionPlanningRefsets: _toConsumableArray(value)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateCompositionPlanningTasks\", function (value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          compositionPlanningTasks: _toConsumableArray(value)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateCompositionPlanningFunctions\", function (value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          compositionPlanningFunctions: _toConsumableArray(value)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateCompositionPlanningInternalFunctions\", function (value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          compositionPlanningInternalFunctions: _toConsumableArray(value)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateFormFields\", function (value) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          formFields: _toConsumableArray(value)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleSaveFormDesigner\", function (type) {\n      var textHeight = {};\n      Object.keys(_this.state.textHeight).forEach(function (p) {\n        if (_this.state.textHeight[p] !== \"px\") {\n          textHeight[p] = _this.state.textHeight[p];\n        }\n      });\n      var formDesign = {\n        formOrder: orderObjectByValue(_this.state.formOrder),\n        formTitle: _this.state.formTitle,\n        datatypes: _this.state.datatypes,\n        hsizes: _this.state.hsizes,\n        fileExtensions: _this.state.fileExtensions,\n        fileMaxSize: _this.state.fileMaxSize,\n        fontSize: _this.state.fontSize,\n        fontStyle: _this.state.fontStyle,\n        fontAlignment: _this.state.fontAlignment,\n        fontLetters: _this.state.fontLetters,\n        themeColor: _this.state.themeColor,\n        themePalette: _this.state.themePalette,\n        limitCharacters: _this.state.limitCharacters,\n        sectionArchetype: _this.state.sectionArchetype,\n        textHeight: _this.state.textHeight,\n        showSectionTitle: _this.state.showSectionTitle\n      };\n      var composition = [];\n      Object.keys(_this.state.compositionPlanning).forEach(function (x) {\n        composition.push(_this.state.compositionPlanning[x]);\n      });\n      var formRM = _this.state.referenceModelForm;\n      if (type === \"save\" && typeof _this.props.onSaveFormDesigner === \"function\") {\n        _this.props.onSaveFormDesigner(JSON.stringify({\n          formDesign: formDesign,\n          compositionPlanning: composition\n        }), JSON.stringify({\n          formRM: formRM\n        }));\n      } else if (type === \"create\" && typeof _this.props.onCreateFormDesigner === \"function\") {\n        _this.props.onCreateFormDesigner(JSON.stringify({\n          formDesign: formDesign,\n          compositionPlanning: composition\n        }), JSON.stringify({\n          formRM: formRM\n        }));\n      }\n    });\n    return _this;\n  }\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this2 = this;\n        var data, formOrder, formTitle, datatypes, hsizes, fileExtensions, fileMaxSize, fontSize, fontStyle, fontAlignment, fontLetters, themeColor, themePalette, textHeight, limitCharacters, sectionArchetype, showSectionTitle, defaultFontSize, defaultFontStyle, defaultFontAlignment, defaultFontLetters, defaultThemeColor, defaultThemePalette, design;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Valores defaults\n                defaultFontSize = {\n                  formTitle: \"16px\",\n                  sectionTitle: \"12px\",\n                  fieldTitle: \"11px\",\n                  field: \"11px\",\n                  button: \"12px\",\n                  header: \"10px\"\n                };\n                defaultFontStyle = {\n                  formTitle: [],\n                  sectionTitle: [],\n                  fieldTitle: [\"font-bold\"],\n                  button: [],\n                  header: []\n                };\n                defaultFontAlignment = {\n                  formTitle: \"justify-center\",\n                  sectionTitle: \"justify-left\",\n                  fieldTitle: \"justify-left\"\n                };\n                defaultFontLetters = {\n                  formTitle: \"normal-case\",\n                  sectionTitle: \"normal-case\",\n                  fieldTitle: \"normal-case\",\n                  button: \"normal-case\"\n                };\n                defaultThemeColor = \"azul\";\n                defaultThemePalette = themeColors[\"azul\"];\n                if (!(this.props.template && this.props.dlm)) {\n                  _context2.next = 12;\n                  break;\n                }\n                _context2.next = 9;\n                return buildJDTRules(this.props.template, this.props.dlm);\n              case 9:\n                data = _context2.sent;\n                // return [newTemplate, order, compositionPlanning]\n\n                formOrder = data[1];\n                formTitle = this.props.template.templateName;\n              case 12:\n                // Se for passado um formDesign, então o formOrder vai ser alterado\n\n                if (this.props.formDesign) {\n                  try {\n                    design = JSON.parse(this.props.formDesign);\n                    formOrder = design.formOrder ? design.formOrder : formOrder;\n                    formTitle = design.formTitle ? design.formTitle : formTitle;\n                    sectionArchetype = design.formOrder && design.sectionArchetype ? design.sectionArchetype : {};\n                    fontSize = design.fontSize && checkIfValidObject(design.fontSize, defaultFontSize) ? design.fontSize : defaultFontSize;\n                    fontStyle = design.fontStyle && checkIfValidObject(design.fontStyle, defaultFontStyle) ? design.fontStyle : defaultFontStyle;\n                    fontAlignment = design.fontAlignment && checkIfValidObject(design.fontAlignment, defaultFontAlignment) ? design.fontAlignment : defaultFontAlignment;\n                    fontLetters = design.fontLetters && checkIfValidObject(design.fontLetters, defaultFontLetters) ? design.fontLetters : defaultFontLetters;\n                    datatypes = design.datatypes;\n                    textHeight = design.textHeight;\n                    showSectionTitle = design.showSectionTitle;\n                    limitCharacters = design.limitCharacters;\n                    hsizes = design.hsizes;\n                    fileExtensions = design.fileExtensions;\n                    fileMaxSize = design.fileMaxSize;\n                    themeColor = design.themeColor === \"personalizada\" || themeColors[design.themeColor] !== undefined ? design.themeColor : defaultThemeColor;\n                    themePalette = design.themePalette && checkIfValidObject(design.themePalette, defaultThemePalette) ? design.themePalette : themeColors[design.themeColor] !== undefined ? themeColors[design.themeColor] : defaultThemePalette;\n                  } catch (e) {\n                    fontSize = defaultFontSize;\n                    fontStyle = defaultFontStyle;\n                    fontAlignment = defaultFontAlignment;\n                    fontLetters = defaultFontLetters;\n                    themeColor = defaultThemeColor;\n                    themePalette = defaultThemePalette;\n                  }\n                } else {\n                  fontSize = defaultFontSize;\n                  fontStyle = defaultFontStyle;\n                  fontAlignment = defaultFontAlignment;\n                  fontLetters = defaultFontLetters;\n                  themeColor = defaultThemeColor;\n                  themePalette = defaultThemePalette;\n                }\n                if (this.props.formRM !== undefined && this.props.formRM !== null && this.props.formRM.length > 0) {\n                  this.props.formRM.forEach(function (rm) {\n                    _this2.setState(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        referenceModelForm: [].concat(_toConsumableArray(prevState.referenceModelForm), [rm])\n                      });\n                    });\n                  });\n                }\n                this.setState({\n                  formDesignerMode: this.props.formDesignerMode === true,\n                  templateGroupId: this.props.formDesignerMode === true ? data ? data[0] : null : null,\n                  compositionPlanning: this.props.formDesignerMode === true ? data ? data[2] : {} : {},\n                  formOrder: formOrder ? formOrder : null,\n                  formTitle: formTitle ? formTitle : null,\n                  sectionArchetype: sectionArchetype ? sectionArchetype : {},\n                  idJDT: this.props.idJDT,\n                  idComposition: this.props.idComposition ? this.props.idComposition : null,\n                  template: this.props.template,\n                  dlm: this.props.dlm,\n                  datatypes: datatypes ? datatypes : {},\n                  textHeight: textHeight ? textHeight : {},\n                  showSectionTitle: showSectionTitle ? showSectionTitle : {},\n                  limitCharacters: limitCharacters ? limitCharacters : {},\n                  hsizes: hsizes ? hsizes : {},\n                  fileExtensions: fileExtensions ? fileExtensions : {},\n                  fileMaxSize: fileMaxSize ? fileMaxSize : {},\n                  fontSize: fontSize ? fontSize : defaultFontSize,\n                  fontStyle: fontStyle ? fontStyle : defaultFontStyle,\n                  fontAlignment: fontAlignment ? fontAlignment : defaultFontAlignment,\n                  fontLetters: fontLetters ? fontLetters : defaultFontLetters,\n                  referenceModel: this.props.referenceModel && Array.isArray(this.props.referenceModel) ? this.props.referenceModel : [],\n                  themeColor: this.props.formColors && Array.isArray(this.props.formColors) ? this.props.formDesignerMode !== true && this.props.formColors.length === 4 ? this.props.formColors : themeColor : themeColor,\n                  themePalette: themePalette ? themePalette : defaultThemePalette,\n                  backgroundColor: this.props.pageBackgroundColor ? this.props.pageBackgroundColor : \"default\",\n                  showPalette: this.props.formDesignerMode === true,\n                  showPrint: this.props.formDesignerMode === true ? false : this.props.showPrint === true,\n                  editMode: this.props.editMode === true,\n                  professionalTasks: this.props.professionalTasks && Array.isArray(this.props.professionalTasks) ? this.props.professionalTasks : [],\n                  canSave: this.props.formDesignerMode === true ? false : this.props.canSave !== false,\n                  canSubmit: this.props.formDesignerMode === true ? false : this.props.canSubmit !== false,\n                  canSaveFD: this.props.formDesignerMode === true ? this.props.canSaveFD !== false : false,\n                  canCreateFD: this.props.formDesignerMode === true ? this.props.canCreateFD !== false : false,\n                  canCancel: this.props.canCancel !== false,\n                  patientData: this.props.patientData ? this.props.patientData : {},\n                  reportData: this.props.reportData ? this.props.reportData : {},\n                  token: this.props.token ? this.props.token : null,\n                  referenceModelJDT: this.props.rmJDT ? this.props.rmJDT : null,\n                  formRM: this.props.formRM === undefined ? [] : this.props.formRM,\n                  codigosDependencia: this.props.codigosDependencia && Array.isArray(this.props.codigosDependencia) ? this.props.codigosDependencia : null\n                });\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }() // Implementado para fazer o this.setState após a construção do formulário editável\n    // Sem isso os erros não dão, precisa de haver mudança no estado...\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.editMode && !this.state.confirmEditMode) {\n        this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            confirmEditMode: !prevState.confirmEditMode\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var form = null;\n      var formDesigner = null;\n      if (!this.state.formDesignerMode && this.state.template) {\n        if (this.state.editMode) {\n          var isVisible = !this.state.template.TaskVisible ? false : handleIsVisible(this.state.template, this.state.professionalTasks);\n          if (isVisible) {\n            form = /*#__PURE__*/React.createElement(FormEditMode, {\n              handleButtonClicked: function handleButtonClicked(type) {\n                return _this3.setState({\n                  buttonClicked: type\n                });\n              },\n              buttonClickType: this.state.buttonClicked,\n              handleSubmit: function handleSubmit(values, multipleSections) {\n                return _this3.handleSubmit(values, multipleSections);\n              },\n              handleCancelForm: function handleCancelForm() {\n                return _this3.handleCancelForm();\n              },\n              professionalTasks: this.state.professionalTasks,\n              submitButtonDisabled: this.props.submitButtonDisabled,\n              saveButtonDisabled: this.props.saveButtonDisabled,\n              showInformacaoComplementar: this.props.showInformacaoComplementar,\n              showHeader: this.props.showHeader,\n              canSave: this.state.canSave,\n              canSubmit: this.state.canSubmit,\n              canCancel: this.state.canCancel,\n              showPrint: this.state.showPrint,\n              idJDT: this.state.idJDT,\n              idComposition: this.state.idComposition,\n              template: this.state.template,\n              formRM: this.state.formRM,\n              formTitle: this.state.formTitle,\n              multimediaFields: this.state.multimediaFields,\n              patientData: this.props.patientData,\n              userInfo: this.props.userInfo\n            });\n          }\n        } else if (!this.state.editMode) {\n          var _isVisible;\n          if (!this.state.template.TaskVisible) {\n            _isVisible = false;\n          } else {\n            _isVisible = handleIsVisible(this.state.template, this.state.professionalTasks);\n          }\n          if (_isVisible) {\n            form = /*#__PURE__*/React.createElement(FormConsultMode, {\n              professionalTasks: this.state.professionalTasks,\n              showPrint: this.state.showPrint,\n              template: this.state.template,\n              formRM: this.state.formRM,\n              formTitle: this.state.formTitle,\n              idComposition: this.state.idComposition\n            });\n          }\n        }\n      } else if (this.state.formDesignerMode) {\n        if (this.state.templateGroupId && this.state.formOrder) {\n          formDesigner = /*#__PURE__*/React.createElement(FormDesignerMode, {\n            handleFormOrder: this.handleFormOrder,\n            handleCancelForm: function handleCancelForm() {\n              return _this3.handleCancelForm();\n            },\n            handleSaveFormDesigner: function handleSaveFormDesigner(type) {\n              return _this3.handleSaveFormDesigner(type);\n            },\n            canCancel: this.state.canCancel,\n            canCreateFD: this.state.canCreateFD,\n            canSaveFD: this.state.canSaveFD,\n            saveFDButtonDisabled: this.props.saveFDButtonDisabled,\n            createFDButtonDisabled: this.props.createFDButtonDisabled,\n            templateGroupId: this.state.templateGroupId,\n            formTitle: this.state.formTitle,\n            updateFormTitle: this.updateFormTitle\n          });\n        }\n      }\n      return /*#__PURE__*/React.createElement(FormModeContext.Provider, {\n        value: this.state.formDesignerMode ? \"design\" : this.state.editMode ? \"edit\" : \"consult\"\n      }, /*#__PURE__*/React.createElement(ReferenceModelContext.Provider, {\n        value: {\n          rmJDT: this.state.referenceModelJDT,\n          rmForm: this.state.referenceModelForm,\n          handleRM: this.handleRM,\n          handleAddRM: this.handleAddRM,\n          handleRemoveRM: this.handleRemoveRM\n        }\n      }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n        value: {\n          themeColor: this.state.themeColor,\n          themePalette: this.state.themePalette,\n          handleThemePalette: this.handleThemePalette,\n          handleThemeColor: this.handleThemeColor,\n          handleCancelThemeChange: this.handleCancelThemeChange\n        }\n      }, /*#__PURE__*/React.createElement(BackgroundContext.Provider, {\n        value: this.state.backgroundColor === \"default\" ? \"#ffffff\" : this.state.backgroundColor\n      }, /*#__PURE__*/React.createElement(ChangedFieldsContext.Provider, {\n        value: {\n          value: this.state.changedFields,\n          updateValue: this.handleChangedFields\n        }\n      }, /*#__PURE__*/React.createElement(DlmContextProvider, null, /*#__PURE__*/React.createElement(TokenContext.Provider, {\n        value: this.state.token\n      }, /*#__PURE__*/React.createElement(CodigosDependenciaContext.Provider, {\n        value: this.state.codigosDependencia\n      }, /*#__PURE__*/React.createElement(FormOrderContext.Provider, {\n        value: this.state.formOrder\n      }, /*#__PURE__*/React.createElement(DatatypesContext.Provider, {\n        value: {\n          datatypes: this.state.datatypes,\n          updateDatatypes: this.handleDatatypes,\n          textHeight: this.state.textHeight,\n          updateTextHeight: this.handleTextHeight,\n          limitCharacters: this.state.limitCharacters,\n          updateLimitCharacters: this.handleLimitCharacaters,\n          fileExtensions: this.state.fileExtensions,\n          fileMaxSize: this.state.fileMaxSize,\n          handleMultimediaFields: this.handleMultimediaFields,\n          handleFileMaxSize: this.handleFileMaxSize,\n          handleFileExtensions: this.handleFileExtensions,\n          removeField: this.handleRemoveField,\n          showSectionTitle: this.state.showSectionTitle,\n          updateSectionTitle: this.handleSectionTitleVisibility\n        }\n      }, /*#__PURE__*/React.createElement(HSizesContext.Provider, {\n        value: {\n          sizes: this.state.hsizes,\n          updateSizes: this.handleHSizes\n        }\n      }, /*#__PURE__*/React.createElement(FormDataContext.Provider, {\n        value: {\n          patientData: this.state.patientData,\n          reportData: this.state.reportData,\n          referenceModel: this.state.referenceModel\n        }\n      }, /*#__PURE__*/React.createElement(FontContext.Provider, {\n        value: {\n          fontSize: this.state.fontSize,\n          handleFontSize: this.handleFontSize,\n          fontStyle: this.state.fontStyle,\n          handleFontStyle: this.handleFontStyle,\n          fontLetters: this.state.fontLetters,\n          handleFontLetters: this.handleFontLetters,\n          fontAlignment: this.state.fontAlignment,\n          handleFontAlignment: this.handleFontAlignment,\n          handleCancelFontChange: this.handleCancelFontChange\n        }\n      }, /*#__PURE__*/React.createElement(CompositionPlanningContext.Provider, {\n        value: {\n          template: this.state.template,\n          compositionPlanning: this.state.compositionPlanning,\n          compositionPlanningRefsets: this.state.compositionPlanningRefsets,\n          compositionPlanningTasks: this.state.compositionPlanningTasks,\n          compositionPlanningFunctions: this.state.compositionPlanningFunctions,\n          compositionPlanningInternalFunctions: this.state.compositionPlanningInternalFunctions,\n          formFields: this.state.formFields,\n          updateCompositionPlanningRefsets: this.updateCompositionPlanningRefsets,\n          updateCompositionPlanningTasks: this.updateCompositionPlanningTasks,\n          updateCompositionPlanningFunctions: this.updateCompositionPlanningFunctions,\n          updateCompositionPlanningInternalFunctions: this.updateCompositionPlanningInternalFunctions,\n          updateFormFields: this.updateFormFields,\n          handleOpenCompositionPlanning: this.handleOpenCompositionPlanning,\n          openCompositionPlanningPath: this.state.openCompositionPlanningPath,\n          openCompositionPlanningDatatype: this.state.openCompositionPlanningDatatype,\n          openCompositionPlanning: this.state.openCompositionPlanning,\n          handleCompositionPlanning: this.handleCompositionPlanning\n        }\n      }, /*#__PURE__*/React.createElement(SectionArchetypeContext.Provider, {\n        value: {\n          sectionArchetype: this.state.sectionArchetype,\n          handleOpenSectionArchetype: this.handleOpenSectionArchetype,\n          openSectionArchetype: this.state.openSectionArchetype,\n          openSectionArchetypeData: this.state.openSectionArchetypeData,\n          handleSectionArchetype: this.handleAddSectionArchetype,\n          handleEditSectionArchetype: this.handleEditSectionArchetype,\n          handleRemoveSectionArchetype: this.handleRemoveSectionArchetype\n        }\n      }, /*#__PURE__*/React.createElement(PageContainer, null, this.state.formDesignerMode === false && this.state.professionalTasks.length > 0 && form, this.state.formDesignerMode === true && formDesigner))))))))))))))));\n    }\n  }]);\n  return Form;\n}(Component);\nexport default Form;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","checkIfValidObject","handleSubmit","handleIsVisible","PageContainer","BackgroundContext","ChangedFieldsContext","CodigosDependenciaContext","CompositionPlanningContext","DatatypesContext","FontContext","FormDataContext","FormOrderContext","HSizesContext","ThemeContext","TokenContext","DlmContextProvider","SectionArchetypeContext","FormConsultMode","buildJDTRules","handleOrder","handleOrderAnyItens","FormDesignerMode","FormEditMode","themeColors","objPath","FormModeContext","ReferenceModelContext","orderObjectByValue","Form","args","editMode","confirmEditMode","themeColor","backgroundColor","showPalette","showPrint","professionalTasks","canSubmit","canSave","canCancel","canSaveFD","canCreateFD","reportData","patientData","buttonClicked","changedFields","token","codigosDependencia","idJDT","idComposition","template","dlm","templateGroupId","formDesignerMode","formOrder","formTitle","datatypes","textHeight","showSectionTitle","limitCharacters","hsizes","fileExtensions","fileMaxSize","referenceModel","fontSize","fontStyle","fontAlignment","fontLetters","openCompositionPlanning","openCompositionPlanningPath","openCompositionPlanningDatatype","compositionPlanning","compositionPlanningRefsets","compositionPlanningFunctions","compositionPlanningInternalFunctions","compositionPlanningTasks","formFields","openSectionArchetype","openSectionArchetypeData","sectionArchetype","multimediaFields","referenceModelJDT","referenceModelForm","formRM","path","state","indexOf","setState","prevState","values","multipleSections","jsonValues","props","forEach","section","split","join","map","newPath","onSubmit","JSON","stringify","onSave","onCancel","actionType","isSection","isSectionHover","dragPath","hoverPath","dragOrder","hoverOrder","showLabelDrag","showLabelHover","isAnyDrag","isAnyHover","objOrder","item","itemPath","rmItem","dropSectionPath","dragGroupID","itemPathRM","splice","filter","orderToRemove","keys","color","themePalette","previousColor","previousValues","type","prevSizeValues","prevStyleValues","prevLetterValues","prevAlignValues","datatype","file","format","height","isVisible","max","p","size","extensions","archetype","get","parentPath","parentName","node","text","parentOrder","status","newName","sectionName","newSectionArchetype","x","indexID","indexStop","Number","slice","id","replace","nextGroupID","groupID","undefined","formDesign","composition","push","onSaveFormDesigner","onCreateFormDesigner","defaultFontSize","sectionTitle","fieldTitle","field","button","header","defaultFontStyle","defaultFontAlignment","defaultFontLetters","defaultThemeColor","defaultThemePalette","data","templateName","design","parse","e","length","rm","Array","isArray","formColors","pageBackgroundColor","rmJDT","form","formDesigner","TaskVisible","createElement","handleButtonClicked","buttonClickType","handleCancelForm","submitButtonDisabled","saveButtonDisabled","showInformacaoComplementar","showHeader","userInfo","handleFormOrder","handleSaveFormDesigner","saveFDButtonDisabled","createFDButtonDisabled","updateFormTitle","Provider","rmForm","handleRM","handleAddRM","handleRemoveRM","handleThemePalette","handleThemeColor","handleCancelThemeChange","updateValue","handleChangedFields","updateDatatypes","handleDatatypes","updateTextHeight","handleTextHeight","updateLimitCharacters","handleLimitCharacaters","handleMultimediaFields","handleFileMaxSize","handleFileExtensions","removeField","handleRemoveField","updateSectionTitle","handleSectionTitleVisibility","sizes","updateSizes","handleHSizes","handleFontSize","handleFontStyle","handleFontLetters","handleFontAlignment","handleCancelFontChange","updateCompositionPlanningRefsets","updateCompositionPlanningTasks","updateCompositionPlanningFunctions","updateCompositionPlanningInternalFunctions","updateFormFields","handleOpenCompositionPlanning","handleCompositionPlanning","handleOpenSectionArchetype","handleSectionArchetype","handleAddSectionArchetype","handleEditSectionArchetype","handleRemoveSectionArchetype"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/protected-aidaforms/dist/containers/Form/Form.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport React, { Component } from \"react\";\r\nimport { checkIfValidObject } from \"../../assets/functions/CheckIfValidObject/CheckIfValidObject\";\r\nimport { handleSubmit } from \"../../assets/functions/HandleSubmit/handleSubmit\";\r\nimport { handleIsVisible } from \"../../assets/functions/HandleTasks/handleIsVisible\";\r\nimport PageContainer from \"../../components/UI/PageContainer/PageContainer\";\r\nimport BackgroundContext from \"../../contexts/BackgroundContext\";\r\nimport ChangedFieldsContext from \"../../contexts/ChangedFieldsContext\";\r\nimport CodigosDependenciaContext from \"../../contexts/CodigosDependenciaContext\";\r\nimport CompositionPlanningContext from \"../../contexts/CompositionPlanningContext\";\r\nimport DatatypesContext from \"../../contexts/DatatypesContext\";\r\nimport FontContext from \"../../contexts/FontContext\";\r\nimport FormDataContext from \"../../contexts/FormDataContext\";\r\nimport FormOrderContext from \"../../contexts/FormOrderContext\";\r\nimport HSizesContext from \"../../contexts/HSizesContext\";\r\nimport ThemeContext from \"../../contexts/ThemeContext\";\r\nimport TokenContext from \"../../contexts/TokenContext\";\r\nimport DlmContextProvider from \"../../contexts/DlmContext\";\r\nimport SectionArchetypeContext from \"../../contexts/SectionArchetypeContext\";\r\nimport FormConsultMode from \"./FormModes/FormConsultMode\";\r\nimport { buildJDTRules } from \"../../assets/functions/BuildJDTRules/BuildJDTRules\";\r\nimport { handleOrder } from \"../../assets/functions/HandleOrder/HandleOrder\";\r\nimport { handleOrderAnyItens } from \"../../assets/functions/HandleOrder/HandleOrderAnyItens\";\r\nimport FormDesignerMode from \"./FormModes/FormDesignerMode\";\r\nimport FormEditMode from \"./FormModes/FormEditMode\";\r\nimport themeColors from \"../../assets/colors/ThemeColors\";\r\nimport objPath from \"object-path\";\r\nimport FormModeContext from \"../../contexts/FormModeContext\";\r\nimport ReferenceModelContext from \"../../contexts/ReferenceModelContext\";\r\nimport { orderObjectByValue } from \"../../assets/functions/Order/orderObjectByValue\";\r\n\r\nclass Form extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"state\", {\r\n      editMode: false,\r\n      confirmEditMode: false,\r\n      themeColor: {},\r\n      backgroundColor: \"default\",\r\n      showPalette: false,\r\n      showPrint: false,\r\n      professionalTasks: [],\r\n      canSubmit: true,\r\n      canSave: true,\r\n      canCancel: true,\r\n      canSaveFD: true,\r\n      canCreateFD: true,\r\n      reportData: {},\r\n      patientData: {},\r\n      buttonClicked: \"\",\r\n      changedFields: [],\r\n      token: null,\r\n      codigosDependencia: null,\r\n      idJDT: null,\r\n      idComposition: null,\r\n      template: null,\r\n      dlm: null,\r\n      templateGroupId: null,\r\n      formDesignerMode: false,\r\n      formOrder: null,\r\n      formTitle: null,\r\n      datatypes: {},\r\n      textHeight: {},\r\n      showSectionTitle: {},\r\n      limitCharacters: {},\r\n      hsizes: {},\r\n      fileExtensions: {},\r\n      fileMaxSize: {},\r\n      referenceModel: [],\r\n      fontSize: {},\r\n      fontStyle: {},\r\n      fontAlignment: {},\r\n      fontLetters: {},\r\n      openCompositionPlanning: false,\r\n      openCompositionPlanningPath: \"\",\r\n      openCompositionPlanningDatatype: \"\",\r\n      compositionPlanning: {},\r\n      compositionPlanningRefsets: [],\r\n      compositionPlanningFunctions: [],\r\n      compositionPlanningInternalFunctions: [],\r\n      compositionPlanningTasks: [],\r\n      formFields: [],\r\n      openSectionArchetype: false,\r\n      openSectionArchetypeData: null,\r\n      sectionArchetype: {},\r\n      multimediaFields: [],\r\n      referenceModelJDT: {},\r\n      referenceModelForm: [],\r\n      formRM: []\r\n    });\r\n\r\n    _defineProperty(this, \"handleChangedFields\", path => {\r\n      if (this.state.changedFields.indexOf(path) === -1) {\r\n        this.setState(prevState => ({ ...prevState,\r\n          changedFields: [...prevState.changedFields, path]\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleSubmit\", async (values, multipleSections) => {\r\n      let jsonValues = handleSubmit(this.state.template, values, this.props.formRM);\r\n      multipleSections.forEach(function (section) {\r\n        const path = section.path.split(\"-\").join(\".\") + \".value\";\r\n        jsonValues[path] = section.values;\r\n      });\r\n      let changedFields;\r\n      changedFields = this.state.changedFields.map(path => {\r\n        const newPath = path.split(\"-\").join(\".\");\r\n        return newPath;\r\n      }).join(\";\");\r\n\r\n      if (typeof this.props.onSubmit === \"function\" && this.state.buttonClicked === \"submit\") {\r\n        this.props.onSubmit(JSON.stringify(jsonValues), changedFields);\r\n        this.setState({\r\n          buttonClicked: \"\"\r\n        });\r\n      } else if (typeof this.props.onSave === \"function\" && this.state.buttonClicked === \"save\") {\r\n        this.props.onSave(JSON.stringify(jsonValues), changedFields);\r\n        this.setState({\r\n          buttonClicked: \"\"\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelForm\", () => {\r\n      if (typeof this.props.onCancel === \"function\") {\r\n        this.props.onCancel(true);\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleFormOrder\", (actionType, isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover) => {\r\n      let objOrder;\r\n\r\n      if (actionType === \"general\") {\r\n        objOrder = handleOrder(isSection, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelDrag, showLabelHover, isAnyDrag, isAnyHover, this.state.formOrder);\r\n      } else if (actionType === \"anyItens\") {\r\n        objOrder = handleOrderAnyItens(dragPath, dragOrder, hoverOrder, this.state.formOrder);\r\n      }\r\n\r\n      this.setState({\r\n        formOrder: objOrder\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleRM\", (path, key, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        referenceModelForm: prevState.referenceModelForm.map(item => item.itemPath === path ? { ...item,\r\n          [key]: value\r\n        } : item)\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleAddRM\", (rmItem, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, showLabelHover, isAnyHover, dropSectionPath, dragGroupID) => {\r\n      if (this.state.referenceModelForm.indexOf(rmItem) === -1) {\r\n        //rearranjar a ordem dos componentes\r\n        let objOrder = handleOrder(false, isSectionHover, dragPath, hoverPath, dragOrder, hoverOrder, false, showLabelHover, false, isAnyHover, this.state.formOrder); //ir buscar o path da secção para a qual o item foi arrastado\r\n\r\n        rmItem[\"parentPath\"] = dropSectionPath;\r\n        rmItem[\"groupID\"] = dragGroupID; //actualizar o referenceModelForm com o componente colocado e a ordem\r\n\r\n        this.setState(prevState => ({ ...prevState,\r\n          referenceModelForm: [...prevState.referenceModelForm, rmItem],\r\n          formOrder: objOrder\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveRM\", itemPathRM => {\r\n      let path = itemPathRM.split(\".\").splice(1); // quando se clica no botão de remoção de um componente RM é preciso:\r\n      // 1. apagar esse elemento do referenceModelForm\r\n\r\n      this.setState(prevState => ({ ...prevState,\r\n        referenceModelForm: prevState.referenceModelForm.filter(item => item.itemPath !== path.join(\".\"))\r\n      })); //2. remover esse elemento do formOrder e reajustar a ordem dos restantes elementos\r\n      // obter a ordem do elemento que estamos a remover\r\n\r\n      let orderToRemove = this.state.formOrder[itemPathRM]; // remover o elemento\r\n\r\n      let objOrder = { ...this.state.formOrder\r\n      };\r\n      Object.keys(objOrder).forEach(path => {\r\n        if (objOrder[path] === orderToRemove) {\r\n          delete objOrder[path];\r\n        } else if (objOrder[path] > orderToRemove) {\r\n          objOrder[path] = objOrder[path] - 1; //move item down\r\n        }\r\n      });\r\n      this.setState(prevState => ({ ...prevState,\r\n        formOrder: objOrder\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleThemeColor\", color => {\r\n      this.setState({\r\n        themeColor: color\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleThemePalette\", (color, values) => {\r\n      if (color === \"personalizada\") {\r\n        this.setState({\r\n          themePalette: values\r\n        });\r\n      } else if (themeColors[color]) {\r\n        this.setState({\r\n          themePalette: themeColors[color]\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelThemeChange\", (previousColor, previousValues) => {\r\n      this.setState({\r\n        themeColor: previousColor,\r\n        themePalette: previousValues\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontSize\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontSize: { ...prevState.fontSize,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontStyle\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontStyle: { ...prevState.fontStyle,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontAlignment\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontAlignment: { ...prevState.fontAlignment,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFontLetters\", (type, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fontLetters: { ...prevState.fontLetters,\r\n          [type]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleCancelFontChange\", (prevSizeValues, prevStyleValues, prevLetterValues, prevAlignValues) => {\r\n      this.setState({\r\n        fontSize: prevSizeValues,\r\n        fontStyle: prevStyleValues,\r\n        fontLetters: prevLetterValues,\r\n        fontAlignment: prevAlignValues\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleDatatypes\", (path, datatype) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        datatypes: { ...prevState.datatypes,\r\n          [path]: datatype\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleMultimediaFields\", (path, file, format) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        multimediaFields: [...prevState.multimediaFields, {\r\n          [path]: file,\r\n          format: format\r\n        }]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleTextHeight\", (path, height) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        textHeight: { ...prevState.textHeight,\r\n          [path]: height\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleSectionTitleVisibility\", (path, isVisible) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        showSectionTitle: { ...prevState.showSectionTitle,\r\n          [path]: isVisible\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleLimitCharacaters\", (path, max) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        limitCharacters: { ...prevState.limitCharacters,\r\n          [path]: max\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveField\", (path, type) => {\r\n      if (type === \"textHeight\") {\r\n        this.setState(prevState => {\r\n          let obj = {};\r\n          Object.keys(prevState.textHeight).forEach(p => {\r\n            if (p !== path) {\r\n              obj[p] = prevState.textHeight[p];\r\n            }\r\n          });\r\n          return { ...prevState,\r\n            textHeight: obj\r\n          };\r\n        });\r\n      } else if (type === \"limitCharacters\") {\r\n        this.setState(prevState => {\r\n          let obj = {};\r\n          Object.keys(prevState.limitCharacters).forEach(p => {\r\n            if (p !== path) {\r\n              obj[p] = prevState.limitCharacters[p];\r\n            }\r\n          });\r\n          return { ...prevState,\r\n            limitCharacters: obj\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleHSizes\", (path, size) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        hsizes: { ...prevState.hsizes,\r\n          [path]: size\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFileExtensions\", (path, extensions) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fileExtensions: { ...prevState.fileExtensions,\r\n          [path]: extensions\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleFileMaxSize\", (path, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        fileMaxSize: { ...prevState.fileMaxSize,\r\n          [path]: value\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleOpenSectionArchetype\", (path = null) => {\r\n      if (path === null) {\r\n        this.setState({\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null\r\n        });\r\n      } else {\r\n        const archetype = objPath.get(this.state.templateGroupId, path);\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: true,\r\n          openSectionArchetypeData: {\r\n            parentPath: path,\r\n            parentName: archetype.node ? archetype.node.text : \"\",\r\n            parentOrder: prevState.formOrder[path]\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleEditSectionArchetype\", (status, path, newName = \"\") => {\r\n      if (status === \"open\") {\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: true,\r\n          openSectionArchetypeData: {\r\n            path: path,\r\n            parentName: prevState.sectionArchetype[path].parentName\r\n          }\r\n        }));\r\n      } else if (\"edit\") {\r\n        this.setState(prevState => ({ ...prevState,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...prevState.sectionArchetype,\r\n            [path]: { ...prevState.sectionArchetype[path],\r\n              sectionName: newName\r\n            }\r\n          }\r\n        }));\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleRemoveSectionArchetype\", path => {\r\n      this.setState(prevState => {\r\n        let newSectionArchetype = {};\r\n        let obj = {};\r\n        Object.keys(prevState.sectionArchetype).forEach(x => {\r\n          if (x !== path) {\r\n            newSectionArchetype[x] = prevState.sectionArchetype[x];\r\n          }\r\n        });\r\n        Object.keys(prevState.formOrder).forEach(x => {\r\n          if (x !== path) {\r\n            if (prevState.formOrder[x] > prevState.formOrder[path]) {\r\n              obj[x] = prevState.formOrder[x] - 1;\r\n            } else {\r\n              obj[x] = prevState.formOrder[x];\r\n            }\r\n          }\r\n        });\r\n        return { ...prevState,\r\n          formOrder: obj,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...newSectionArchetype\r\n          }\r\n        };\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleAddSectionArchetype\", (sectionName, parentName, parentPath, parentOrder) => {\r\n      this.setState(prevState => {\r\n        // Descalar a ordem dos restantes elementos porque a secção passa a ter ordem = parentOrder + 1\r\n        let max = -1;\r\n        Object.keys(prevState.sectionArchetype).forEach(x => {\r\n          const indexID = x.indexOf(\"id\");\r\n          const indexStop = x.indexOf(\".\");\r\n\r\n          if (Number(x.slice(indexID + 2, indexStop)) > max) {\r\n            max = x.slice(indexID + 2, indexStop);\r\n          }\r\n        }); // O path deve ser assim para ser único e para funcionar na ordenação\r\n\r\n        const id = `id${Number(max) + 1}.${parentPath}.${sectionName.replace(/\\s/g, \"\")}`;\r\n        let obj = {};\r\n        obj[id] = parentOrder + 1;\r\n        Object.keys(prevState.formOrder).forEach(x => {\r\n          if (prevState.formOrder[x] > parentOrder) {\r\n            obj[x] = prevState.formOrder[x] + 1;\r\n          } else {\r\n            obj[x] = prevState.formOrder[x];\r\n          }\r\n        }); // Ir buscar o groupID do item a seguir à secção => poder ser um item/secção normal ou um any item\r\n\r\n        const nextGroupID = objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID !== undefined ? objPath.get(this.state.templateGroupId, `${parentPath}.items.0`).groupID : objPath.get(this.state.templateGroupId, `${parentPath}.items.0.0`).groupID;\r\n        return { ...prevState,\r\n          formOrder: obj,\r\n          openSectionArchetype: false,\r\n          openSectionArchetypeData: null,\r\n          sectionArchetype: { ...prevState.sectionArchetype,\r\n            [id]: {\r\n              sectionName: sectionName,\r\n              groupID: nextGroupID,\r\n              parentName: parentName,\r\n              parentPath: parentPath\r\n            }\r\n          }\r\n        };\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"handleOpenCompositionPlanning\", (path, datatype) => {\r\n      if (path === this.state.openCompositionPlanningPath) {\r\n        this.setState({\r\n          openCompositionPlanning: false,\r\n          openCompositionPlanningPath: \"\",\r\n          openCompositionPlanningDatatype: \"\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          openCompositionPlanning: true,\r\n          openCompositionPlanningPath: path,\r\n          openCompositionPlanningDatatype: datatype\r\n        });\r\n      }\r\n    });\r\n\r\n    _defineProperty(this, \"handleCompositionPlanning\", (path, key, value) => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanning: { ...prevState.compositionPlanning,\r\n          [path]: { ...prevState.compositionPlanning[path],\r\n            [key]: value\r\n          }\r\n        }\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateFormTitle\", newName => {\r\n      this.setState({\r\n        formTitle: newName\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningRefsets\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningRefsets: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningTasks\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningTasks: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningFunctions\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningFunctions: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateCompositionPlanningInternalFunctions\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        compositionPlanningInternalFunctions: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"updateFormFields\", value => {\r\n      this.setState(prevState => ({ ...prevState,\r\n        formFields: [...value]\r\n      }));\r\n    });\r\n\r\n    _defineProperty(this, \"handleSaveFormDesigner\", type => {\r\n      const textHeight = {};\r\n      Object.keys(this.state.textHeight).forEach(p => {\r\n        if (this.state.textHeight[p] !== \"px\") {\r\n          textHeight[p] = this.state.textHeight[p];\r\n        }\r\n      });\r\n      const formDesign = {\r\n        formOrder: orderObjectByValue(this.state.formOrder),\r\n        formTitle: this.state.formTitle,\r\n        datatypes: this.state.datatypes,\r\n        hsizes: this.state.hsizes,\r\n        fileExtensions: this.state.fileExtensions,\r\n        fileMaxSize: this.state.fileMaxSize,\r\n        fontSize: this.state.fontSize,\r\n        fontStyle: this.state.fontStyle,\r\n        fontAlignment: this.state.fontAlignment,\r\n        fontLetters: this.state.fontLetters,\r\n        themeColor: this.state.themeColor,\r\n        themePalette: this.state.themePalette,\r\n        limitCharacters: this.state.limitCharacters,\r\n        sectionArchetype: this.state.sectionArchetype,\r\n        textHeight: this.state.textHeight,\r\n        showSectionTitle: this.state.showSectionTitle\r\n      };\r\n      const composition = [];\r\n      Object.keys(this.state.compositionPlanning).forEach(x => {\r\n        composition.push(this.state.compositionPlanning[x]);\r\n      });\r\n      const formRM = this.state.referenceModelForm;\r\n\r\n      if (type === \"save\" && typeof this.props.onSaveFormDesigner === \"function\") {\r\n        this.props.onSaveFormDesigner(JSON.stringify({\r\n          formDesign,\r\n          compositionPlanning: composition\r\n        }), JSON.stringify({\r\n          formRM\r\n        }));\r\n      } else if (type === \"create\" && typeof this.props.onCreateFormDesigner === \"function\") {\r\n        this.props.onCreateFormDesigner(JSON.stringify({\r\n          formDesign,\r\n          compositionPlanning: composition\r\n        }), JSON.stringify({\r\n          formRM\r\n        }));\r\n      }\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data;\r\n    let formOrder;\r\n    let formTitle;\r\n    let datatypes;\r\n    let hsizes;\r\n    let fileExtensions;\r\n    let fileMaxSize;\r\n    let fontSize;\r\n    let fontStyle;\r\n    let fontAlignment;\r\n    let fontLetters;\r\n    let themeColor;\r\n    let themePalette;\r\n    let textHeight;\r\n    let limitCharacters;\r\n    let sectionArchetype;\r\n    let showSectionTitle; // Valores defaults\r\n\r\n    const defaultFontSize = {\r\n      formTitle: \"16px\",\r\n      sectionTitle: \"12px\",\r\n      fieldTitle: \"11px\",\r\n      field: \"11px\",\r\n      button: \"12px\",\r\n      header: \"10px\"\r\n    };\r\n    const defaultFontStyle = {\r\n      formTitle: [],\r\n      sectionTitle: [],\r\n      fieldTitle: [\"font-bold\"],\r\n      button: [],\r\n      header: []\r\n    };\r\n    const defaultFontAlignment = {\r\n      formTitle: \"justify-center\",\r\n      sectionTitle: \"justify-left\",\r\n      fieldTitle: \"justify-left\"\r\n    };\r\n    const defaultFontLetters = {\r\n      formTitle: \"normal-case\",\r\n      sectionTitle: \"normal-case\",\r\n      fieldTitle: \"normal-case\",\r\n      button: \"normal-case\"\r\n    };\r\n    const defaultThemeColor = \"azul\";\r\n    const defaultThemePalette = themeColors[\"azul\"];\r\n\r\n    if (this.props.template && this.props.dlm) {\r\n      data = await buildJDTRules(this.props.template, this.props.dlm); // return [newTemplate, order, compositionPlanning]\r\n\r\n      formOrder = data[1];\r\n      formTitle = this.props.template.templateName;\r\n    } // Se for passado um formDesign, então o formOrder vai ser alterado\r\n\r\n\r\n    if (this.props.formDesign) {\r\n      try {\r\n        const design = JSON.parse(this.props.formDesign);\r\n        formOrder = design.formOrder ? design.formOrder : formOrder;\r\n        formTitle = design.formTitle ? design.formTitle : formTitle;\r\n        sectionArchetype = design.formOrder && design.sectionArchetype ? design.sectionArchetype : {};\r\n        fontSize = design.fontSize && checkIfValidObject(design.fontSize, defaultFontSize) ? design.fontSize : defaultFontSize;\r\n        fontStyle = design.fontStyle && checkIfValidObject(design.fontStyle, defaultFontStyle) ? design.fontStyle : defaultFontStyle;\r\n        fontAlignment = design.fontAlignment && checkIfValidObject(design.fontAlignment, defaultFontAlignment) ? design.fontAlignment : defaultFontAlignment;\r\n        fontLetters = design.fontLetters && checkIfValidObject(design.fontLetters, defaultFontLetters) ? design.fontLetters : defaultFontLetters;\r\n        datatypes = design.datatypes;\r\n        textHeight = design.textHeight;\r\n        showSectionTitle = design.showSectionTitle;\r\n        limitCharacters = design.limitCharacters;\r\n        hsizes = design.hsizes;\r\n        fileExtensions = design.fileExtensions;\r\n        fileMaxSize = design.fileMaxSize;\r\n        themeColor = design.themeColor === \"personalizada\" || themeColors[design.themeColor] !== undefined ? design.themeColor : defaultThemeColor;\r\n        themePalette = design.themePalette && checkIfValidObject(design.themePalette, defaultThemePalette) ? design.themePalette : themeColors[design.themeColor] !== undefined ? themeColors[design.themeColor] : defaultThemePalette;\r\n      } catch (e) {\r\n        fontSize = defaultFontSize;\r\n        fontStyle = defaultFontStyle;\r\n        fontAlignment = defaultFontAlignment;\r\n        fontLetters = defaultFontLetters;\r\n        themeColor = defaultThemeColor;\r\n        themePalette = defaultThemePalette;\r\n      }\r\n    } else {\r\n      fontSize = defaultFontSize;\r\n      fontStyle = defaultFontStyle;\r\n      fontAlignment = defaultFontAlignment;\r\n      fontLetters = defaultFontLetters;\r\n      themeColor = defaultThemeColor;\r\n      themePalette = defaultThemePalette;\r\n    }\r\n\r\n    if (this.props.formRM !== undefined && this.props.formRM !== null && this.props.formRM.length > 0) {\r\n      this.props.formRM.forEach(rm => {\r\n        this.setState(prevState => ({ ...prevState,\r\n          referenceModelForm: [...prevState.referenceModelForm, rm]\r\n        }));\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      formDesignerMode: this.props.formDesignerMode === true,\r\n      templateGroupId: this.props.formDesignerMode === true ? data ? data[0] : null : null,\r\n      compositionPlanning: this.props.formDesignerMode === true ? data ? data[2] : {} : {},\r\n      formOrder: formOrder ? formOrder : null,\r\n      formTitle: formTitle ? formTitle : null,\r\n      sectionArchetype: sectionArchetype ? sectionArchetype : {},\r\n      idJDT: this.props.idJDT,\r\n      idComposition: this.props.idComposition ? this.props.idComposition : null,\r\n      template: this.props.template,\r\n      dlm: this.props.dlm,\r\n      datatypes: datatypes ? datatypes : {},\r\n      textHeight: textHeight ? textHeight : {},\r\n      showSectionTitle: showSectionTitle ? showSectionTitle : {},\r\n      limitCharacters: limitCharacters ? limitCharacters : {},\r\n      hsizes: hsizes ? hsizes : {},\r\n      fileExtensions: fileExtensions ? fileExtensions : {},\r\n      fileMaxSize: fileMaxSize ? fileMaxSize : {},\r\n      fontSize: fontSize ? fontSize : defaultFontSize,\r\n      fontStyle: fontStyle ? fontStyle : defaultFontStyle,\r\n      fontAlignment: fontAlignment ? fontAlignment : defaultFontAlignment,\r\n      fontLetters: fontLetters ? fontLetters : defaultFontLetters,\r\n      referenceModel: this.props.referenceModel && Array.isArray(this.props.referenceModel) ? this.props.referenceModel : [],\r\n      themeColor: this.props.formColors && Array.isArray(this.props.formColors) ? this.props.formDesignerMode !== true && this.props.formColors.length === 4 ? this.props.formColors : themeColor : themeColor,\r\n      themePalette: themePalette ? themePalette : defaultThemePalette,\r\n      backgroundColor: this.props.pageBackgroundColor ? this.props.pageBackgroundColor : \"default\",\r\n      showPalette: this.props.formDesignerMode === true,\r\n      showPrint: this.props.formDesignerMode === true ? false : this.props.showPrint === true,\r\n      editMode: this.props.editMode === true,\r\n      professionalTasks: this.props.professionalTasks && Array.isArray(this.props.professionalTasks) ? this.props.professionalTasks : [],\r\n      canSave: this.props.formDesignerMode === true ? false : this.props.canSave !== false,\r\n      canSubmit: this.props.formDesignerMode === true ? false : this.props.canSubmit !== false,\r\n      canSaveFD: this.props.formDesignerMode === true ? this.props.canSaveFD !== false : false,\r\n      canCreateFD: this.props.formDesignerMode === true ? this.props.canCreateFD !== false : false,\r\n      canCancel: this.props.canCancel !== false,\r\n      patientData: this.props.patientData ? this.props.patientData : {},\r\n      reportData: this.props.reportData ? this.props.reportData : {},\r\n      token: this.props.token ? this.props.token : null,\r\n      referenceModelJDT: this.props.rmJDT ? this.props.rmJDT : null,\r\n      formRM: this.props.formRM === undefined ? [] : this.props.formRM,\r\n      codigosDependencia: this.props.codigosDependencia && Array.isArray(this.props.codigosDependencia) ? this.props.codigosDependencia : null\r\n    });\r\n  } // Implementado para fazer o this.setState após a construção do formulário editável\r\n  // Sem isso os erros não dão, precisa de haver mudança no estado...\r\n\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.editMode && !this.state.confirmEditMode) {\r\n      this.setState(prevState => ({ ...prevState,\r\n        confirmEditMode: !prevState.confirmEditMode\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let form = null;\r\n    let formDesigner = null;\r\n\r\n    if (!this.state.formDesignerMode && this.state.template) {\r\n      if (this.state.editMode) {\r\n        let isVisible = !this.state.template.TaskVisible ? false : handleIsVisible(this.state.template, this.state.professionalTasks);\r\n\r\n        if (isVisible) {\r\n          form = /*#__PURE__*/React.createElement(FormEditMode, {\r\n            handleButtonClicked: type => this.setState({\r\n              buttonClicked: type\r\n            }),\r\n            buttonClickType: this.state.buttonClicked,\r\n            handleSubmit: (values, multipleSections) => this.handleSubmit(values, multipleSections),\r\n            handleCancelForm: () => this.handleCancelForm(),\r\n            professionalTasks: this.state.professionalTasks,\r\n            submitButtonDisabled: this.props.submitButtonDisabled,\r\n            saveButtonDisabled: this.props.saveButtonDisabled,\r\n            showInformacaoComplementar: this.props.showInformacaoComplementar,\r\n            showHeader: this.props.showHeader,\r\n            canSave: this.state.canSave,\r\n            canSubmit: this.state.canSubmit,\r\n            canCancel: this.state.canCancel,\r\n            showPrint: this.state.showPrint,\r\n            idJDT: this.state.idJDT,\r\n            idComposition: this.state.idComposition,\r\n            template: this.state.template,\r\n            formRM: this.state.formRM,\r\n            formTitle: this.state.formTitle,\r\n            multimediaFields: this.state.multimediaFields,\r\n            patientData: this.props.patientData,\r\n            userInfo: this.props.userInfo\r\n          });\r\n        }\r\n      } else if (!this.state.editMode) {\r\n        let isVisible;\r\n\r\n        if (!this.state.template.TaskVisible) {\r\n          isVisible = false;\r\n        } else {\r\n          isVisible = handleIsVisible(this.state.template, this.state.professionalTasks);\r\n        }\r\n\r\n        if (isVisible) {\r\n          form = /*#__PURE__*/React.createElement(FormConsultMode, {\r\n            professionalTasks: this.state.professionalTasks,\r\n            showPrint: this.state.showPrint,\r\n            template: this.state.template,\r\n            formRM: this.state.formRM,\r\n            formTitle: this.state.formTitle,\r\n            idComposition: this.state.idComposition\r\n          });\r\n        }\r\n      }\r\n    } else if (this.state.formDesignerMode) {\r\n      if (this.state.templateGroupId && this.state.formOrder) {\r\n        formDesigner = /*#__PURE__*/React.createElement(FormDesignerMode, {\r\n          handleFormOrder: this.handleFormOrder,\r\n          handleCancelForm: () => this.handleCancelForm(),\r\n          handleSaveFormDesigner: type => this.handleSaveFormDesigner(type),\r\n          canCancel: this.state.canCancel,\r\n          canCreateFD: this.state.canCreateFD,\r\n          canSaveFD: this.state.canSaveFD,\r\n          saveFDButtonDisabled: this.props.saveFDButtonDisabled,\r\n          createFDButtonDisabled: this.props.createFDButtonDisabled,\r\n          templateGroupId: this.state.templateGroupId,\r\n          formTitle: this.state.formTitle,\r\n          updateFormTitle: this.updateFormTitle\r\n        });\r\n      }\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(FormModeContext.Provider, {\r\n      value: this.state.formDesignerMode ? \"design\" : this.state.editMode ? \"edit\" : \"consult\"\r\n    }, /*#__PURE__*/React.createElement(ReferenceModelContext.Provider, {\r\n      value: {\r\n        rmJDT: this.state.referenceModelJDT,\r\n        rmForm: this.state.referenceModelForm,\r\n        handleRM: this.handleRM,\r\n        handleAddRM: this.handleAddRM,\r\n        handleRemoveRM: this.handleRemoveRM\r\n      }\r\n    }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\r\n      value: {\r\n        themeColor: this.state.themeColor,\r\n        themePalette: this.state.themePalette,\r\n        handleThemePalette: this.handleThemePalette,\r\n        handleThemeColor: this.handleThemeColor,\r\n        handleCancelThemeChange: this.handleCancelThemeChange\r\n      }\r\n    }, /*#__PURE__*/React.createElement(BackgroundContext.Provider, {\r\n      value: this.state.backgroundColor === \"default\" ? \"#ffffff\" : this.state.backgroundColor\r\n    }, /*#__PURE__*/React.createElement(ChangedFieldsContext.Provider, {\r\n      value: {\r\n        value: this.state.changedFields,\r\n        updateValue: this.handleChangedFields\r\n      }\r\n    }, /*#__PURE__*/React.createElement(DlmContextProvider, null, /*#__PURE__*/React.createElement(TokenContext.Provider, {\r\n      value: this.state.token\r\n    }, /*#__PURE__*/React.createElement(CodigosDependenciaContext.Provider, {\r\n      value: this.state.codigosDependencia\r\n    }, /*#__PURE__*/React.createElement(FormOrderContext.Provider, {\r\n      value: this.state.formOrder\r\n    }, /*#__PURE__*/React.createElement(DatatypesContext.Provider, {\r\n      value: {\r\n        datatypes: this.state.datatypes,\r\n        updateDatatypes: this.handleDatatypes,\r\n        textHeight: this.state.textHeight,\r\n        updateTextHeight: this.handleTextHeight,\r\n        limitCharacters: this.state.limitCharacters,\r\n        updateLimitCharacters: this.handleLimitCharacaters,\r\n        fileExtensions: this.state.fileExtensions,\r\n        fileMaxSize: this.state.fileMaxSize,\r\n        handleMultimediaFields: this.handleMultimediaFields,\r\n        handleFileMaxSize: this.handleFileMaxSize,\r\n        handleFileExtensions: this.handleFileExtensions,\r\n        removeField: this.handleRemoveField,\r\n        showSectionTitle: this.state.showSectionTitle,\r\n        updateSectionTitle: this.handleSectionTitleVisibility\r\n      }\r\n    }, /*#__PURE__*/React.createElement(HSizesContext.Provider, {\r\n      value: {\r\n        sizes: this.state.hsizes,\r\n        updateSizes: this.handleHSizes\r\n      }\r\n    }, /*#__PURE__*/React.createElement(FormDataContext.Provider, {\r\n      value: {\r\n        patientData: this.state.patientData,\r\n        reportData: this.state.reportData,\r\n        referenceModel: this.state.referenceModel\r\n      }\r\n    }, /*#__PURE__*/React.createElement(FontContext.Provider, {\r\n      value: {\r\n        fontSize: this.state.fontSize,\r\n        handleFontSize: this.handleFontSize,\r\n        fontStyle: this.state.fontStyle,\r\n        handleFontStyle: this.handleFontStyle,\r\n        fontLetters: this.state.fontLetters,\r\n        handleFontLetters: this.handleFontLetters,\r\n        fontAlignment: this.state.fontAlignment,\r\n        handleFontAlignment: this.handleFontAlignment,\r\n        handleCancelFontChange: this.handleCancelFontChange\r\n      }\r\n    }, /*#__PURE__*/React.createElement(CompositionPlanningContext.Provider, {\r\n      value: {\r\n        template: this.state.template,\r\n        compositionPlanning: this.state.compositionPlanning,\r\n        compositionPlanningRefsets: this.state.compositionPlanningRefsets,\r\n        compositionPlanningTasks: this.state.compositionPlanningTasks,\r\n        compositionPlanningFunctions: this.state.compositionPlanningFunctions,\r\n        compositionPlanningInternalFunctions: this.state.compositionPlanningInternalFunctions,\r\n        formFields: this.state.formFields,\r\n        updateCompositionPlanningRefsets: this.updateCompositionPlanningRefsets,\r\n        updateCompositionPlanningTasks: this.updateCompositionPlanningTasks,\r\n        updateCompositionPlanningFunctions: this.updateCompositionPlanningFunctions,\r\n        updateCompositionPlanningInternalFunctions: this.updateCompositionPlanningInternalFunctions,\r\n        updateFormFields: this.updateFormFields,\r\n        handleOpenCompositionPlanning: this.handleOpenCompositionPlanning,\r\n        openCompositionPlanningPath: this.state.openCompositionPlanningPath,\r\n        openCompositionPlanningDatatype: this.state.openCompositionPlanningDatatype,\r\n        openCompositionPlanning: this.state.openCompositionPlanning,\r\n        handleCompositionPlanning: this.handleCompositionPlanning\r\n      }\r\n    }, /*#__PURE__*/React.createElement(SectionArchetypeContext.Provider, {\r\n      value: {\r\n        sectionArchetype: this.state.sectionArchetype,\r\n        handleOpenSectionArchetype: this.handleOpenSectionArchetype,\r\n        openSectionArchetype: this.state.openSectionArchetype,\r\n        openSectionArchetypeData: this.state.openSectionArchetypeData,\r\n        handleSectionArchetype: this.handleAddSectionArchetype,\r\n        handleEditSectionArchetype: this.handleEditSectionArchetype,\r\n        handleRemoveSectionArchetype: this.handleRemoveSectionArchetype\r\n      }\r\n    }, /*#__PURE__*/React.createElement(PageContainer, null, this.state.formDesignerMode === false && this.state.professionalTasks.length > 0 && form, this.state.formDesignerMode === true && formDesigner))))))))))))))));\r\n  }\r\n\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}