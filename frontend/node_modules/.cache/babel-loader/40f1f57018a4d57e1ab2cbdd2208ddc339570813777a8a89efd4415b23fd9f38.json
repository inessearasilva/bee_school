{"ast":null,"code":"const buildMultimedia = (item, widths, isAny, showLabel) => {\n  let label;\n  if (!isAny || isAny && showLabel === 1) {\n    label = [{\n      text: \" \",\n      border: [false, false, false, false]\n    }, {\n      text: item.node === null ? item.text : item.node.text,\n      border: [false, false, false, false],\n      style: \"label\"\n    }];\n  } else {\n    label = [{\n      text: \" \",\n      border: [false, false, false, false]\n    }, {\n      text: \" \",\n      border: [false, false, false, false],\n      style: \"label\"\n    }];\n  }\n  let files = item.value === null ? \"\" : item.value.filter(obj => obj.type === \"image/jpeg\" || obj.type === \"image/png\");\n  if (Array.isArray(files)) {\n    if (files.length === 0) {\n      return;\n    }\n  } else {\n    return;\n  }\n  let images = files.map(obj => {\n    return [{\n      text: \" \",\n      border: [false, false, false, false]\n    }, {\n      image: obj.fileData,\n      width: 180,\n      height: 180,\n      style: \"image\"\n    }];\n  });\n  let field = {\n    table: {\n      dontBreakRows: true,\n      widths: widths,\n      body: [label, ...images]\n    },\n    layout: {\n      hLineWidth: function (i, node) {\n        return 0.5;\n      },\n      vLineWidth: function (i, node) {\n        return 0.5;\n      },\n      hLineColor: function (i, node) {\n        return \"black\";\n      },\n      vLineColor: function (i, node) {\n        return \"black\";\n      }\n    }\n  };\n  return field;\n};\nexport { buildMultimedia };","map":{"version":3,"names":["buildMultimedia","item","widths","isAny","showLabel","label","text","border","node","style","files","value","filter","obj","type","Array","isArray","length","images","map","image","fileData","width","height","field","table","dontBreakRows","body","layout","hLineWidth","i","vLineWidth","hLineColor","vLineColor"],"sources":["C:/Users/ines_/Desktop/fisiosys/fisiosys/frontend/node_modules/protected-aidaforms/dist/components/PrintForm/BuildItemPDF/BuildMultimedia.js"],"sourcesContent":["const buildMultimedia = (item, widths, isAny, showLabel) => {\r\n  let label;\r\n\r\n  if (!isAny || isAny && showLabel === 1) {\r\n    label = [{\r\n      text: \" \",\r\n      border: [false, false, false, false]\r\n    }, {\r\n      text: item.node === null ? item.text : item.node.text,\r\n      border: [false, false, false, false],\r\n      style: \"label\"\r\n    }];\r\n  } else {\r\n    label = [{\r\n      text: \" \",\r\n      border: [false, false, false, false]\r\n    }, {\r\n      text: \" \",\r\n      border: [false, false, false, false],\r\n      style: \"label\"\r\n    }];\r\n  }\r\n\r\n  let files = item.value === null ? \"\" : item.value.filter(obj => obj.type === \"image/jpeg\" || obj.type === \"image/png\");\r\n\r\n  if (Array.isArray(files)) {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n  } else {\r\n    return;\r\n  }\r\n\r\n  let images = files.map(obj => {\r\n    return [{\r\n      text: \" \",\r\n      border: [false, false, false, false]\r\n    }, {\r\n      image: obj.fileData,\r\n      width: 180,\r\n      height: 180,\r\n      style: \"image\"\r\n    }];\r\n  });\r\n  let field = {\r\n    table: {\r\n      dontBreakRows: true,\r\n      widths: widths,\r\n      body: [label, ...images]\r\n    },\r\n    layout: {\r\n      hLineWidth: function (i, node) {\r\n        return 0.5;\r\n      },\r\n      vLineWidth: function (i, node) {\r\n        return 0.5;\r\n      },\r\n      hLineColor: function (i, node) {\r\n        return \"black\";\r\n      },\r\n      vLineColor: function (i, node) {\r\n        return \"black\";\r\n      }\r\n    }\r\n  };\r\n  return field;\r\n};\r\n\r\nexport { buildMultimedia };"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,KAAK;EAC1D,IAAIC,KAAK;EAET,IAAI,CAACF,KAAK,IAAIA,KAAK,IAAIC,SAAS,KAAK,CAAC,EAAE;IACtCC,KAAK,GAAG,CAAC;MACPC,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrC,CAAC,EAAE;MACDD,IAAI,EAAEL,IAAI,CAACO,IAAI,KAAK,IAAI,GAAGP,IAAI,CAACK,IAAI,GAAGL,IAAI,CAACO,IAAI,CAACF,IAAI;MACrDC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpCE,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,MAAM;IACLJ,KAAK,GAAG,CAAC;MACPC,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrC,CAAC,EAAE;MACDD,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpCE,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EAEA,IAAIC,KAAK,GAAGT,IAAI,CAACU,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGV,IAAI,CAACU,KAAK,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,IAAID,GAAG,CAACC,IAAI,KAAK,WAAW,CAAC;EAEtH,IAAIC,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;IACxB,IAAIA,KAAK,CAACO,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;EACF,CAAC,MAAM;IACL;EACF;EAEA,IAAIC,MAAM,GAAGR,KAAK,CAACS,GAAG,CAACN,GAAG,IAAI;IAC5B,OAAO,CAAC;MACNP,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrC,CAAC,EAAE;MACDa,KAAK,EAAEP,GAAG,CAACQ,QAAQ;MACnBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXd,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAIe,KAAK,GAAG;IACVC,KAAK,EAAE;MACLC,aAAa,EAAE,IAAI;MACnBxB,MAAM,EAAEA,MAAM;MACdyB,IAAI,EAAE,CAACtB,KAAK,EAAE,GAAGa,MAAM;IACzB,CAAC;IACDU,MAAM,EAAE;MACNC,UAAU,EAAE,UAAUC,CAAC,EAAEtB,IAAI,EAAE;QAC7B,OAAO,GAAG;MACZ,CAAC;MACDuB,UAAU,EAAE,UAAUD,CAAC,EAAEtB,IAAI,EAAE;QAC7B,OAAO,GAAG;MACZ,CAAC;MACDwB,UAAU,EAAE,UAAUF,CAAC,EAAEtB,IAAI,EAAE;QAC7B,OAAO,OAAO;MAChB,CAAC;MACDyB,UAAU,EAAE,UAAUH,CAAC,EAAEtB,IAAI,EAAE;QAC7B,OAAO,OAAO;MAChB;IACF;EACF,CAAC;EACD,OAAOgB,KAAK;AACd,CAAC;AAED,SAASxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}