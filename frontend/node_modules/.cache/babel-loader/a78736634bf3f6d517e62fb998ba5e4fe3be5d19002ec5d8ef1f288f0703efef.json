{"ast":null,"code":"var $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar $RangeError = RangeError;\nvar fromCharCode = String.fromCharCode;\n// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing\nvar $fromCodePoint = String.fromCodePoint;\nvar join = uncurryThis([].join);\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.es/ecma262/#sec-string.fromcodepoint\n$({\n  target: 'String',\n  stat: true,\n  arity: 1,\n  forced: INCORRECT_LENGTH\n}, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  fromCodePoint: function fromCodePoint(x) {\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw $RangeError(code + ' is not a valid code point');\n      elements[i] = code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);\n    }\n    return join(elements, '');\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","toAbsoluteIndex","$RangeError","RangeError","fromCharCode","String","$fromCodePoint","fromCodePoint","join","INCORRECT_LENGTH","length","target","stat","arity","forced","x","elements","arguments","i","code"],"sources":["C:/Users/ines_/fisiosys/frontend/node_modules/core-js/modules/es.string.from-code-point.js"],"sourcesContent":["var $ = require('../internals/export');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\r\n\r\nvar $RangeError = RangeError;\r\nvar fromCharCode = String.fromCharCode;\r\n// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing\r\nvar $fromCodePoint = String.fromCodePoint;\r\nvar join = uncurryThis([].join);\r\n\r\n// length should be 1, old FF problem\r\nvar INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;\r\n\r\n// `String.fromCodePoint` method\r\n// https://tc39.es/ecma262/#sec-string.fromcodepoint\r\n$({ target: 'String', stat: true, arity: 1, forced: INCORRECT_LENGTH }, {\r\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\r\n  fromCodePoint: function fromCodePoint(x) {\r\n    var elements = [];\r\n    var length = arguments.length;\r\n    var i = 0;\r\n    var code;\r\n    while (length > i) {\r\n      code = +arguments[i++];\r\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw $RangeError(code + ' is not a valid code point');\r\n      elements[i] = code < 0x10000\r\n        ? fromCharCode(code)\r\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);\r\n    } return join(elements, '');\r\n  }\r\n});\r\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIE,eAAe,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAE/D,IAAIG,WAAW,GAAGC,UAAU;AAC5B,IAAIC,YAAY,GAAGC,MAAM,CAACD,YAAY;AACtC;AACA,IAAIE,cAAc,GAAGD,MAAM,CAACE,aAAa;AACzC,IAAIC,IAAI,GAAGR,WAAW,CAAC,EAAE,CAACQ,IAAI,CAAC;;AAE/B;AACA,IAAIC,gBAAgB,GAAG,CAAC,CAACH,cAAc,IAAIA,cAAc,CAACI,MAAM,IAAI,CAAC;;AAErE;AACA;AACAZ,CAAC,CAAC;EAAEa,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAEL;AAAiB,CAAC,EAAE;EACtE;EACAF,aAAa,EAAE,SAASA,aAAa,CAACQ,CAAC,EAAE;IACvC,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIN,MAAM,GAAGO,SAAS,CAACP,MAAM;IAC7B,IAAIQ,CAAC,GAAG,CAAC;IACT,IAAIC,IAAI;IACR,OAAOT,MAAM,GAAGQ,CAAC,EAAE;MACjBC,IAAI,GAAG,CAACF,SAAS,CAACC,CAAC,EAAE,CAAC;MACtB,IAAIjB,eAAe,CAACkB,IAAI,EAAE,QAAQ,CAAC,KAAKA,IAAI,EAAE,MAAMjB,WAAW,CAACiB,IAAI,GAAG,4BAA4B,CAAC;MACpGH,QAAQ,CAACE,CAAC,CAAC,GAAGC,IAAI,GAAG,OAAO,GACxBf,YAAY,CAACe,IAAI,CAAC,GAClBf,YAAY,CAAC,CAAC,CAACe,IAAI,IAAI,OAAO,KAAK,EAAE,IAAI,MAAM,EAAEA,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAC7E;IAAE,OAAOX,IAAI,CAACQ,QAAQ,EAAE,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}